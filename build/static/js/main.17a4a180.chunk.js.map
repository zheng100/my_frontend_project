{"version":3,"sources":["components/Cluster.js","components/ModAvatar.js","data.js","components/Buttons.js","images/pokeball.png","components/PokeStyleFusion.js","components/DragdropAva.js","statics/Header.js","statics/Footer.js","App.js","index.js"],"names":["PIECESIZE","Cluster","props","pieceObject","type","style","pieceType","pieceSize","mouthType","eyeType","eyebrowType","accessoriesType","topType","hairColor","facialHairType","clotheType","clotheColor","pieceSelect","ImgSrc","encodeURIComponent","renderToStaticMarkup","dataUri","src","height","width","ModAvatar","useState","avaDetails","avatarDetails","setavatarDetails","useEffect","avatarStyle","skinColor","avatarData","dataType","Button","styled","button","color","ButtonToggle","active","ButtonGroup","div","ToggleGroup","colorType","Colors","colorCode","styles","Object","keys","setActive","map","onClick","updateFunction","changeColorFun","handleOnClick","PokeStyleFusion","model","mi","currentAva","contentImgSrc","pokeName","setpokeName","pokeType","setpokeType","pokeball","pokeImageUri","setpokeImageUri","pokeImageDisplayUri","setPokeImageDisplayUri","a","contentImg","document","getElementById","styleImg","canvas","ctx","getContext","stylize","then","imageData","putImageData","id","class","max","apiUrl","fetchingURL","Math","floor","random","axios","get","response","pokemonData","data","pokemonName","pokemonimageURI","typeList","i","length","typeStr","getPokemonType","console","log","catch","error","className","crossorigin","initialize","canvasEl","canvasToImage","name","quality","POKETAR_WHITE","POKETAR_BLUE","DragdropAva","setavaDetails","skinColorSet","hairColorSet","clothColorSet","datafromBackend","handleOnChangeAvatar","updatedDetails","avaChangeFun","onDragEnd","result","destination","source","droppableId","regfound_tags","draggableId","match","provided","snapshot","droppableProps","ref","innerRef","background","isDraggingOver","setcolorDisplay","entries","index","draggableProps","dragHandleProps","backgroundColor","isDragging","Header","Footer","href","initava","App","newDetails","obj","randomProp","forEach","key","lstLength","RandomProp","saveSvgAsPng","childNodes","ReactDOM","render"],"mappings":"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","file":"static/js/main.17a4a180.chunk.js","sourcesContent":["import React from \"react\";\nimport {Piece} from 'avataaars';\nimport { renderToStaticMarkup } from 'react-dom/server';\n\nconst PIECESIZE = 100;\n\nfunction pieceSelect(type,style){\n    if (type === 'mouth') return <Piece pieceType= \"mouth\" pieceSize= {PIECESIZE * 5} mouthType = {style}/>\n    if (type === 'eyes') return <Piece pieceType= \"eyes\" pieceSize= {PIECESIZE * 5} eyeType = {style}/>\n    if (type === 'eyebrows') return <Piece pieceType= \"eyebrows\" pieceSize = {PIECESIZE * 1.5} eyebrowType = {style}/>\n    if (type === 'accessories') return <Piece pieceType= \"accessories\" pieceSize= {PIECESIZE * 1.5} accessoriesType = {style}/>\n    if (type === 'top') return <Piece pieceType= \"top\" pieceSize = {PIECESIZE * 0.5} topType = {style} hairColor=\"Black\"/>\n    if (type === 'facialHair') return <Piece pieceType= \"facialHair\" pieceSize= {PIECESIZE} facialHairType = {style}/>\n    if (type === 'clothe') return <Piece pieceType= \"clothe\" pieceSize= {PIECESIZE} clotheType = {style} clotheColor=\"white\"/>\n}\n\nconst pieceSize = {\n    'mouth': 100,\n    'eyes': 100, \n    'eyebrows': 100, \n    'accessories': 100, \n    'top': 100, \n    'facialHair': 100, \n    'clothe': 100, \n}\n\nfunction Cluster(props) {\n    const type = props.type\n    const style = props.style\n    const pieceObject = pieceSelect(type,style)\n    let ImgSrc = encodeURIComponent(renderToStaticMarkup(pieceObject));\n    let dataUri = `data:image/svg+xml,${ImgSrc}`;\n\n    return (\n            <img src = {dataUri} height = '80' width = '80'></img>\n    );  \n}\n\nexport default Cluster;","import React, { useState,useEffect } from 'react'; \nimport Avatar from 'avataaars';\n\n\nfunction ModAvatar(props) {\n    const [avatarDetails,setavatarDetails] = useState(props.avaDetails);\n    useEffect(() => { setavatarDetails(props.avaDetails) }, [props.avaDetails]);\n\n    return (\n        <Avatar\n        style={{width: '350px', height: '350px'}}\n        avatarStyle='Circle'\n        topType={avatarDetails['top']}\n        accessoriesType={avatarDetails['accessories']}\n        hairColor={avatarDetails['hairColor']}\n        facialHairType={avatarDetails['facialHair']}\n        clotheType={avatarDetails['clothe']}\n        clotheColor={avatarDetails['clotheColor']}\n        eyeType={avatarDetails['eyes']}\n        eyebrowType={avatarDetails['eyebrows']}\n        mouthType={avatarDetails['mouth']}\n        skinColor={avatarDetails['skinColor']}/>\n    );\n\n}\n\n\nexport default ModAvatar;\n","function avatarData(dataType) {\n    const avatarSytleData = {\n        \"mouth\" : ['Smile','Eating','Concerned','Default','Disbelief','Grimace','Tongue','Twinkle','Vomit','Serious','Sad','ScreamOpen'],\n        \"eyes\": ['Dizzy','Close','EyeRoll','Cry','Happy','Hearts','Side','Squint','Surprised','Wink','WinkWacky'],\n        \"eyebrows\": ['Angry','AngryNatural','Default','DefaultNatural','FlatNatural','RaisedExcited','RaisedExcitedNatural','SadConcerned','SadConcernedNatural','UnibrowNatural','UpDownNatural'],\n        \"accessories\": ['Kurt','Blank','Prescription01','Prescription02','Round','Sunglasses','Wayfarers'],\n        \"top\": ['NoHair','Eyepatch','Hat','Hijab','Turban','WinterHat1','WinterHat2','WinterHat3','WinterHat4',\n        'LongHairBigHair','LongHairBob','LongHairBun','LongHairCurly','LongHairCurvy','LongHairDreads','LongHairFrida','LongHairFro','LongHairFroBand',\n        'LongHairNotTooLong','LongHairShavedSides','LongHairMiaWallace','LongHairStraight','LongHairStraight2','LongHairStraightStrand','ShortHairDreads01',\n        'ShortHairDreads02','ShortHairFrizzle','ShortHairShaggyMullet','ShortHairShortCurly','ShortHairShortFlat','ShortHairShortRound','ShortHairShortWaved',\n        'ShortHairSides','ShortHairTheCaesar','ShortHairTheCaesarSidePart'],\n        \"facialHair\": ['Blank','BeardMedium','BeardLight','BeardMajestic','MoustacheFancy','MoustacheMagnum'],\n        \"clothe\": ['BlazerShirt','BlazerSweater','CollarSweater','GraphicShirt','Hoodie','Overall','ShirtCrewNeck','ShirtScoopNeck','ShirtVNeck']\n    }\n\n    const initData = {\n        \"mouth\" : \"Default\",\n        \"eyes\" : \"Happy\",\n        \"accessories\" : \"Blank\",\n        \"facialHair\" : \"Blank\",\n        \"clothe\" : \"ShirtCrewNeck\",\n        \"top\" : \"ShortHairShortFlat\",\n        \"eyebrows\" : \"RaisedExcitedNatural\",\n        \"hairColor\" :\"Auburn\",\n        \"clotheColor\" :\"Gray01\",\n        \"skinColor\" :\"Light\"\n    }\n\n    const colorData = {\n        \"hairColor\" : {'Auburn': '#A55728',\n        'Black': '#2C1B18',\n        'Blonde': '#B58143',\n        'BlondeGolden': '#D6B370',\n        'Brown': '#724133',\n        'BrownDark': '#4A312C',\n        'PastelPink': '#F59797',\n        'Platinum': '#ECDCBF',\n        'Red': '#C93305',\n        'SilverGray': '#E8E1E1'\n        },\n        \"skinColor\" :{'Tanned':'#FD9841',\n        'Yellow':'#F8D25C',\n        'Pale':'#FFDBB4',\n        'Light':'#EDB98A',\n        'Brown':'#D08B5B',\n        'DarkBrown':'#AE5D29',\n        'Black':'#614335'\n        },\n        \"clotheColor\":{\n        'Black':'#262E33',\n        'Blue01':'#65C9FF',\n        'Blue02':'#5199E4',\n        'Blue03':'#25557C',\n        'Gray01':'#E6E6E6',\n        'Gray02':'#929598',\n        'Heather':'#3C4F5C',\n        'PastelBlue':'#B1E2FF',\n        'PastelGreen':'#A7FFC4',\n        'PastelOrange':'#FFDEB5',\n        'PastelRed':'#FFAFB9',\n        'PastelYellow':'#FFFFB1',\n        'Pink':'#FF488E',\n        'Red':'#FF5C5C',\n        'White':'#FFFFFF',\n        }\n    }\n\n    if (dataType === 'style'){return avatarSytleData};\n    if (dataType === 'init'){return initData};\n    if (dataType === 'hairColor'){return colorData[\"hairColor\"]};\n    if (dataType === 'skinColor'){return colorData[\"skinColor\"]};\n    if (dataType === 'clotheColor'){return colorData[\"clotheColor\"]};\n\n    return;\n}\n\n\nexport default avatarData;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  background-color: ${({ color }) => color || \"blue\"};\n  padding: 10px 10px;\n  border-radius: 25px;\n  border: none;\n  margin: 10px 10px;\n  cursor: pointer;\n  &:disabled {\n    color: grey;\n    opacity: 0.7;\n    cursor: default;\n  }\n`;\n\nconst ButtonToggle = styled(Button)`\n  opacity: 0.5;\n  ${({ active }) =>\n    active &&\n    `\n    opacity: 1;\n    \n\n  `}\n`;\nconst ButtonGroup = styled.div`\n  display: block;\n  justify-content: center;\n`;\n\n\nfunction ToggleGroup(props) {\n    \n    const type = props.colorType;\n    const Colors = props.colorCode;\n    const styles = Object.keys(props.colorCode)\n    const [active, setActive] = useState(styles[0]);\n\n    function handleOnClick(style){\n        props.updateFunction(type,style);\n        props.changeColorFun(style);\n        setActive(style);\n    }\n\n    return (\n        <ButtonGroup>\n          {styles.map(style => (\n            <ButtonToggle \n              key={style}\n              color = {Colors[style]}\n              active={active === style}\n              onClick={() => handleOnClick(style)}\n            >\n            </ButtonToggle>\n          ))}\n        </ButtonGroup>\n    );\n  }\n\nexport default ToggleGroup;","export default __webpack_public_path__ + \"static/media/pokeball.22a191f1.png\";","import React, { useState } from 'react';\n\nimport pokeball from '../images/pokeball.png';\n\nimport ModAvatar from './ModAvatar';\nimport axios from \"axios\";\nimport * as mi from '@magenta/image';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport canvasToImage from 'canvas-to-image';\n\n\nconst POKE_API_URL = \"https://pokeapi.co/api/v2/pokemon/\"\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max)) + 1;\n}\n\nfunction PokeStyleFusion(props) {\n\n    const model = new mi.ArbitraryStyleTransferNetwork();\n    let currentAva = props.currentAva;\n\n    let contentImgSrc = encodeURIComponent(renderToStaticMarkup(<ModAvatar avaDetails={currentAva} />));\n    let dataUri = `data:image/svg+xml,${contentImgSrc}`;\n\n    //console.log(dataUri);\n\n    const [pokeName, setpokeName] = useState(\"-\")\n    const [pokeType, setpokeType] = useState(\"-\")\n    const [pokeImageUri, setpokeImageUri] = useState(pokeball)\n    const [pokeImageDisplayUri, setPokeImageDisplayUri] = useState(pokeball)\n\n    function fetchPokemon() {\n        const fetchingURL = POKE_API_URL + getRandomInt(150);\n        DataPromise(fetchingURL);\n    };\n    \n\n    function saveCanvas(){\n        const canvasEl = document.getElementById('stylized');\n        canvasToImage(canvasEl, {\n            name: 'myAvaImage',\n            type: 'jpg',\n            quality: 1\n          });\n    }\n    // function to get pokemon type\n    function getPokemonType(typeList) {\n        let pokeType = \"\";\n\n        for (let i = 0; i < typeList.length; i++) {\n            // get the value of the key \"type\", which is another object\n            let typeObject = typeList[i][\"type\"];\n            // then get the value of the key \"name\" which will be the pokemon type\n            let typeStr = typeObject[\"name\"];\n            // add the type into pokeType\n            if (i > 0) {\n                pokeType = pokeType + \", \" + typeStr;\n            }\n            else {\n                pokeType = pokeType + \" \" + typeStr;\n            }\n        }\n\n        return pokeType;\n    }\n\n    function DataPromise(apiUrl) {\n        axios.get(apiUrl).then((response) => {\n            const pokemonData = response.data;\n            const pokemonName = pokemonData['name'];\n            const pokemonimageURI = pokemonData['sprites']['other']['official-artwork']['front_default'];\n            const pokeType = getPokemonType(pokemonData['types']);\n            console.log(pokemonData);\n            setpokeName(pokemonName);\n            setpokeType(pokeType);\n            setpokeImageUri(pokemonimageURI);\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n\n\n    function stylization() {\n        model.initialize().then(() => {  \n            stylize();  \n        }  \n        );  \n    }\n\n    function meetPoke(){\n        setPokeImageDisplayUri(pokeImageUri); \n    }\n\n    async function stylize() {\n        // await clearCanvas();\n\n        // const contentCanvas = document.getElementById('styledAva').childNodes[0].childNodes[0];\n        const contentImg = document.getElementById('content')\n        const styleImg = document.getElementById('style');\n        const canvas = document.getElementById('stylized');\n        const ctx = canvas.getContext('2d');\n\n        // Resize the canvas to be the same size as the source image.\n        canvas.width = contentImg.width;\n        canvas.height = contentImg.height;\n\n        // This does all the work!\n        model.stylize(contentImg, styleImg).then((imageData) => {\n            ctx.putImageData(imageData, 0, 0);\n        });\n    }\n\n    return (\n        <div id='select_pokemon'>\n\n        <div class=\"row\">\n\n            <div class=\"col-md-6\">\n                <h3 id='pokeName'> Pokemon name: </h3>\n                <p id='pokeName'> {pokeName} </p>\n            </div>\n\n            <div class=\"col-md-6\">\n                <h3 id='pokeName'> Pokemon type: </h3>\n                <p id='pokeType'> {pokeType} </p>\n            </div>\n        </div>\n        <div class=\"col-12-text-center\">\n            <button type=\"button\" class=\"btn btn-primary btn-lg\" onClick={fetchPokemon}>\n                Fetch Random Pokemon\n            </button>\n        </div>\n\n            <h2 className=\"Instructions\"> Step 4: Meet Your New Pokemon! </h2>\n            <img id='content' height=\"256\" src={dataUri}></img>\n            <img id='style' src={pokeImageDisplayUri} height=\"200\" width=\"200\" crossorigin=\"anonymous\"></img>\n            {/* <canvas id='stylized' height=\"30\" >\n            </canvas> */}\n\n            <div class=\"col-12-text-center\">\n            <button type=\"button\" class=\"btn btn-primary btn-lg\" onClick={meetPoke}>Meet Pokemon </button> \n            </div>\n\n\n            <h2 className=\"Instructions\"> Step 5: Experimental Merge </h2>\n            <canvas id='stylized' height=\"30\" >\n            </canvas>\n            <br></br>\n\n            \n            <div class=\"col-12-text-center\">\n            <button type=\"button\" class=\"btn btn-primary btn-lg\" onClick={stylization}>Transform!</button>\n            </div>\n\n            <br></br>\n\n            <button type=\"button\" class=\"btn btn-primary btn-lg\" onClick={saveCanvas}>Save My Transformed Avatar</button>\n\n        </div>);\n   \n}\n\n\nexport default PokeStyleFusion;","import React , {useState, useEffect} from \"react\";\nimport Cluster from './Cluster';\nimport ModAvatar from './ModAvatar';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport ToggleGroup from './Buttons';\n\nconst POKETAR_WHITE = \"#ffffff\"\nconst POKETAR_BLUE = \"#5db9ff\"\nconst POKETAR_PURPLE = \"#DAF7A6\" //face component selected color?\nconst POKETAR_RED = \"#ff1f1f\"\nconst POKETAR_YELLOW = \"#ffffff\" // face component selections?\n\n\nfunction DragdropAva (props){\n\n    const [avaDetails,setavaDetails] = useState(props.avaDetails);\n    useEffect(() => { setavaDetails(props.avaDetails) }, [props.avaDetails]);\n\n    const skinColorSet = props.skinColorSet;\n    const hairColorSet = props.hairColorSet;\n    const clothColorSet = props.clothColorSet;\n    const datafromBackend = props.datafromBackend;\n\n    // function that handles drag ending event\n    function handleOnDragEnd(result){\n        if(!result.destination) return;\n        const{source,destination} = result;\n        if (destination.droppableId === 'MainAvatar'){\n            const draggable_string = result.draggableId;\n            const regfound_tags = draggable_string.match(/([A-Za-z]+)_([A-Za-z]+)/);\n            const [type, style] = [regfound_tags[1], regfound_tags[2]];\n            handleOnChangeAvatar(type, style);\n        }\n    }\n\n    // update current avatar look\n    function handleOnChangeAvatar(type, style) {\n        const updatedDetails = avaDetails;\n        updatedDetails[type] = style;\n        // console.log(updatedDetails);\n        props.avaChangeFun(updatedDetails);\n        }\n\nreturn (\n    <div class='container-fluid' id = 'content-container'>\n    {/*center avatar*/}\n    <DragDropContext onDragEnd = {handleOnDragEnd}>\n      {/* Dropable portion that of the Avatar display */}\n      <Droppable droppableId = \"MainAvatar\" > \n        {(provided,snapshot) => {\n          return (\n            <div id = \"my_ava\"\n            {...provided.droppableProps} ref={provided.innerRef} \n              style = {{\n              background: snapshot.isDraggingOver? POKETAR_BLUE: POKETAR_WHITE}}>\n              <ModAvatar avaDetails = {avaDetails}/>\n            </div>)\n            }}\n      </Droppable>\n      <div className=\"row\">\n        <div className=\"col-sm-4\" id='skin_color'>\n            <h3>Skin Color</h3>\n                <div className=\"bd-example\">\n                <ToggleGroup className=\"colors\" colorCode = {skinColorSet} colorType = 'skinColor'  changeColorFun = {props.setcolorDisplay} updateFunction = {handleOnChangeAvatar}/> \n                </div>\n        </div> \n\n        <div className=\"col-sm-4\" id='hair_color'>\n            <h3>Hair Color</h3>\n                <ToggleGroup className=\"colors\" colorCode = {hairColorSet} colorType = 'hairColor' changeColorFun = {props.setcolorDisplay} updateFunction = {handleOnChangeAvatar}/> \n        </div>\n\n        <div className=\"col-sm-4\" id='cloth_color'>\n            <h3>Cloth Color</h3>\n            <ToggleGroup className=\"colors\" colorCode = {clothColorSet} colorType = 'clotheColor' changeColorFun = {props.setcolorDisplay} updateFunction = {handleOnChangeAvatar}/> \n        </div>\n      </div>\n\n    {/* Drag and droppable features and clothing */}\n    <h2 className=\"Instructions\"> Step 2: Drag and Drop items to Change his look! </h2>\n      <div id = 'droppable-content'>\n        {/* Double loop that go through all possible type of looking and styles */} \n        {Object.entries(datafromBackend).map(([type, styles]) =>{\n          return(\n            \n            <div id = 'step2_wrap'>\n              {/* Each column is also a droppable */} \n              <Droppable droppableId = {type}>\n                {(provided, snapshot) => {\n                return(\n                  <div className = 'OverflowColumn'\n                    {...provided.droppableProps} ref={provided.innerRef} \n                    style = {{\n                        background: snapshot.isDraggingOver? POKETAR_BLUE: POKETAR_WHITE,\n                    }}>\n                    <ul className = 'addons'>\n                        {styles.map((style,index) => {\n                            return (\n                                // Each item in the column is a draggable\n                                <Draggable draggableId = {type + '_' +style} index={index} key={index}>\n                                {(provided, snapshot) => {\n                                    return(<div\n                                                ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}\n                                                style = {{ backgroundColor: snapshot.isDragging? POKETAR_PURPLE : POKETAR_YELLOW , color: POKETAR_WHITE, ...provided.draggableProps.style\n                                                }}>\n                                                <li key ={type + style}>\n                                                    <wrap className = \"selectAble\">\n                                                        {<Cluster type = {type} style = {style}/>}\n                                                    </wrap>\n                                                </li>\n                                            </div>); \n                                }}\n                                </Draggable>\n                            ); \n                          })\n                        }\n                    </ul>\n                  </div>)\n                }}\n              </Droppable>\n            </div>);\n          })}\n      </div>\n\n      </DragDropContext>\n\n    </div> \n);\n\n    \n}\n\nexport default DragdropAva;","import React from \"react\";\n\nfunction Header(){\n    return (\n    <div class=\"jumbotron test\" id=\"header-block\">\n      <h1>Poke-Tar</h1>\n      <p id = \"group-mem\"><b>Info 253A: Front-End Web Architecture Final Project</b><br></br>Bobby Zheng<br></br>Jyen Yiee Wong<br></br>Tracy Wei<br></br>Yuexi Wang </p> \n    </div>\n    )\n}\n\nexport default Header;","import React from \"react\";\n\nconst ava_link = \"https://github.com/fangpenlin/avataaars-generator\"\n\nfunction Footer(){\n    return (\n        <div class=\"footer text-center\">\n            <p> Credits: Avataaar Project</p>\n            <a href={ava_link}> Avataaar Project link</a>\n        </div>\n        )\n}\n\nexport default Footer;","import './App.css';\nimport React , {useState, useEffect,useRef } from \"react\";\nimport Cluster from './components/Cluster';\nimport ModAvatar from './components/ModAvatar';\nimport avatarData from './data';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport ToggleGroup from './components/Buttons';\nimport PokeStyleFusion from './components/PokeStyleFusion';\nimport DragdropAva from './components/DragdropAva';\nimport {saveSvgAsPng} from 'save-svg-as-png';\n\nimport Header from './statics/Header';\nimport Footer from './statics/Footer';\n\n\n// Data source 1 for style data 2 for initial avatar data\n\nconst initava = avatarData('init')\nconst datafromBackend = avatarData('style')\n// Color for DRAGBALES\nconst skinColorSet = avatarData('skinColor');\nconst hairColorSet = avatarData('hairColor');\nconst clothColorSet = avatarData('clotheColor');\n\n// main app\nfunction App() {\n  // state that holds current avatar look\n  // console.log(skinColorSet);\n  const [avaDetails, setavaDetails] = useState(initava);\n  const [colorDisplay, setcolorDisplay] = useState(\"\");\n  \n  // console.log(avaDetails);\n  // useEffect(() =>{\n  //   console.log(\"details Changed\")\n  // },[avaDetails])\n\n  \n  function saveImage(){\n    saveSvgAsPng(document.getElementById(\"my_ava\").childNodes[0], \"avatar.png\")\n  }\n\n  function resetAvatar(){\n    const newDetails = avatarData('init');\n    setavaDetails(newDetails);\n  }\n\n  function randomAvatar(){\n    const newDetails = RandomProp(datafromBackend);\n    setavaDetails(newDetails);\n  }\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n  function RandomProp(obj){\n      let keys = Object.keys(obj);\n      const randomProp = {};\n      keys.forEach((key) => {\n        const lstLength = obj[key].length;\n        const index = getRandomInt(lstLength);\n        randomProp[key] = obj[key][index];\n      })\n      return randomProp;\n  }\n  \n  return (  \n  <div className=\"container-fluid\">\n\n    <Header/>\n    <h2> Step 1: Let's Create Your Avatar Interactively!</h2>\n    \n    <div class=\"form-group row\">\n      <div className= 'col-md-4'>\n        <button className=\"btn btn-primary btn-lg\" onClick = {resetAvatar}>\n          Reset Avatar\n        </button>\n      </div>\n      <div className= 'col-md-4'>\n        <button className=\"btn btn-primary btn-lg\" onClick = {randomAvatar}>\n          Random Avatar\n        </button>\n      </div>\n    </div>\n\n    <DragdropAva avaDetails = {avaDetails} datafromBackend = {datafromBackend} skinColorSet = {skinColorSet} hairColorSet = {hairColorSet} clothColorSet = {clothColorSet} setcolorDisplay = {setcolorDisplay} avaChangeFun = {setavaDetails}/>\n        \n    {/* avatar save button */}\n    <div class=\"col-12-text-center\" id = 'Avatar_save'>\n      <button type=\"button\" class=\"btn btn-primary btn-lg\" onClick = {saveImage} id = 'save_button'>\n        Save Image\n      </button>\n    </div>\n    \n    {/* Step 3 & Step 4: Get and transform your pokemon */}\n    <div class=\"row\">\n    <h2 className=\"Instructions\"> Step 3: Get Your Pokemon! </h2>\n    </div>\n    <div>\n      <PokeStyleFusion currentAva = {avaDetails}/>\n    </div>\n    <Footer/>\n  </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}