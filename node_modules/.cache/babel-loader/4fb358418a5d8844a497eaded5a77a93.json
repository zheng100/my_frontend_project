{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/BobbyZheng/Desktop/INFO_253/Final_project/group-project-bmt/src/components/Cluster.js\";\nimport React from \"react\";\nimport { Piece } from 'avataaars';\nimport { renderToStaticMarkup } from 'react-dom/server';\nconst PIECESIZE = 100;\n\nfunction pieceSelect(type, style) {\n  if (type === 'mouth') return /*#__PURE__*/_jsxDEV(Piece, {\n    pieceType: \"mouth\",\n    pieceSize: PIECESIZE * 5,\n    mouthType: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 34\n  }, this);\n  if (type === 'eyes') return /*#__PURE__*/_jsxDEV(Piece, {\n    pieceType: \"eyes\",\n    pieceSize: PIECESIZE * 5,\n    eyeType: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 33\n  }, this);\n  if (type === 'eyebrows') return /*#__PURE__*/_jsxDEV(Piece, {\n    pieceType: \"eyebrows\",\n    pieceSize: PIECESIZE * 1.5,\n    eyebrowType: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 37\n  }, this);\n  if (type === 'accessories') return /*#__PURE__*/_jsxDEV(Piece, {\n    pieceType: \"accessories\",\n    pieceSize: PIECESIZE * 1.5,\n    accessoriesType: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 40\n  }, this);\n  if (type === 'top') return /*#__PURE__*/_jsxDEV(Piece, {\n    pieceType: \"top\",\n    pieceSize: PIECESIZE * 0.5,\n    topType: style,\n    hairColor: \"Black\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 32\n  }, this);\n  if (type === 'facialHair') return /*#__PURE__*/_jsxDEV(Piece, {\n    pieceType: \"facialHair\",\n    pieceSize: PIECESIZE,\n    facialHairType: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 39\n  }, this);\n  if (type === 'clothe') return /*#__PURE__*/_jsxDEV(Piece, {\n    pieceType: \"clothe\",\n    pieceSize: PIECESIZE,\n    clotheType: style,\n    clotheColor: \"white\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 35\n  }, this);\n}\n\nconst pieceSize = {\n  'mouth': 100,\n  'eyes': 100,\n  'eyebrows': 100,\n  'accessories': 100,\n  'top': 100,\n  'facialHair': 100,\n  'clothe': 100\n};\n\nfunction Cluster(props) {\n  const type = props.type;\n  const style = props.style;\n  const pieceObject = pieceSelect(type, style);\n  let ImgSrc = encodeURIComponent(renderToStaticMarkup(pieceObject));\n  let dataUri = `data:image/svg+xml,${ImgSrc}`;\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: dataUri,\n    height: \"80\",\n    width: \"80\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 13\n  }, this);\n}\n\n_c = Cluster;\nexport default Cluster;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cluster\");","map":{"version":3,"sources":["/Users/BobbyZheng/Desktop/INFO_253/Final_project/group-project-bmt/src/components/Cluster.js"],"names":["React","Piece","renderToStaticMarkup","PIECESIZE","pieceSelect","type","style","pieceSize","Cluster","props","pieceObject","ImgSrc","encodeURIComponent","dataUri"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,WAApB;AACA,SAASC,oBAAT,QAAqC,kBAArC;AAEA,MAAMC,SAAS,GAAG,GAAlB;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA0BC,KAA1B,EAAgC;AAC5B,MAAID,IAAI,KAAK,OAAb,EAAsB,oBAAO,QAAC,KAAD;AAAO,IAAA,SAAS,EAAE,OAAlB;AAA0B,IAAA,SAAS,EAAGF,SAAS,GAAG,CAAlD;AAAqD,IAAA,SAAS,EAAIG;AAAlE;AAAA;AAAA;AAAA;AAAA,UAAP;AACtB,MAAID,IAAI,KAAK,MAAb,EAAqB,oBAAO,QAAC,KAAD;AAAO,IAAA,SAAS,EAAE,MAAlB;AAAyB,IAAA,SAAS,EAAGF,SAAS,GAAG,CAAjD;AAAoD,IAAA,OAAO,EAAIG;AAA/D;AAAA;AAAA;AAAA;AAAA,UAAP;AACrB,MAAID,IAAI,KAAK,UAAb,EAAyB,oBAAO,QAAC,KAAD;AAAO,IAAA,SAAS,EAAE,UAAlB;AAA6B,IAAA,SAAS,EAAIF,SAAS,GAAG,GAAtD;AAA2D,IAAA,WAAW,EAAIG;AAA1E;AAAA;AAAA;AAAA;AAAA,UAAP;AACzB,MAAID,IAAI,KAAK,aAAb,EAA4B,oBAAO,QAAC,KAAD;AAAO,IAAA,SAAS,EAAE,aAAlB;AAAgC,IAAA,SAAS,EAAGF,SAAS,GAAG,GAAxD;AAA6D,IAAA,eAAe,EAAIG;AAAhF;AAAA;AAAA;AAAA;AAAA,UAAP;AAC5B,MAAID,IAAI,KAAK,KAAb,EAAoB,oBAAO,QAAC,KAAD;AAAO,IAAA,SAAS,EAAE,KAAlB;AAAwB,IAAA,SAAS,EAAIF,SAAS,GAAG,GAAjD;AAAsD,IAAA,OAAO,EAAIG,KAAjE;AAAwE,IAAA,SAAS,EAAC;AAAlF;AAAA;AAAA;AAAA;AAAA,UAAP;AACpB,MAAID,IAAI,KAAK,YAAb,EAA2B,oBAAO,QAAC,KAAD;AAAO,IAAA,SAAS,EAAE,YAAlB;AAA+B,IAAA,SAAS,EAAGF,SAA3C;AAAsD,IAAA,cAAc,EAAIG;AAAxE;AAAA;AAAA;AAAA;AAAA,UAAP;AAC3B,MAAID,IAAI,KAAK,QAAb,EAAuB,oBAAO,QAAC,KAAD;AAAO,IAAA,SAAS,EAAE,QAAlB;AAA2B,IAAA,SAAS,EAAGF,SAAvC;AAAkD,IAAA,UAAU,EAAIG,KAAhE;AAAuE,IAAA,WAAW,EAAC;AAAnF;AAAA;AAAA;AAAA;AAAA,UAAP;AAC1B;;AAED,MAAMC,SAAS,GAAG;AACd,WAAS,GADK;AAEd,UAAQ,GAFM;AAGd,cAAY,GAHE;AAId,iBAAe,GAJD;AAKd,SAAO,GALO;AAMd,gBAAc,GANA;AAOd,YAAU;AAPI,CAAlB;;AAUA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,QAAMJ,IAAI,GAAGI,KAAK,CAACJ,IAAnB;AACA,QAAMC,KAAK,GAAGG,KAAK,CAACH,KAApB;AACA,QAAMI,WAAW,GAAGN,WAAW,CAACC,IAAD,EAAMC,KAAN,CAA/B;AACA,MAAIK,MAAM,GAAGC,kBAAkB,CAACV,oBAAoB,CAACQ,WAAD,CAArB,CAA/B;AACA,MAAIG,OAAO,GAAI,sBAAqBF,MAAO,EAA3C;AAEA,sBACQ;AAAK,IAAA,GAAG,EAAIE,OAAZ;AAAqB,IAAA,MAAM,EAAG,IAA9B;AAAmC,IAAA,KAAK,EAAG;AAA3C;AAAA;AAAA;AAAA;AAAA,UADR;AAGH;;KAVQL,O;AAYT,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport {Piece} from 'avataaars';\nimport { renderToStaticMarkup } from 'react-dom/server';\n\nconst PIECESIZE = 100;\n\nfunction pieceSelect(type,style){\n    if (type === 'mouth') return <Piece pieceType= \"mouth\" pieceSize= {PIECESIZE * 5} mouthType = {style}/>\n    if (type === 'eyes') return <Piece pieceType= \"eyes\" pieceSize= {PIECESIZE * 5} eyeType = {style}/>\n    if (type === 'eyebrows') return <Piece pieceType= \"eyebrows\" pieceSize = {PIECESIZE * 1.5} eyebrowType = {style}/>\n    if (type === 'accessories') return <Piece pieceType= \"accessories\" pieceSize= {PIECESIZE * 1.5} accessoriesType = {style}/>\n    if (type === 'top') return <Piece pieceType= \"top\" pieceSize = {PIECESIZE * 0.5} topType = {style} hairColor=\"Black\"/>\n    if (type === 'facialHair') return <Piece pieceType= \"facialHair\" pieceSize= {PIECESIZE} facialHairType = {style}/>\n    if (type === 'clothe') return <Piece pieceType= \"clothe\" pieceSize= {PIECESIZE} clotheType = {style} clotheColor=\"white\"/>\n}\n\nconst pieceSize = {\n    'mouth': 100,\n    'eyes': 100, \n    'eyebrows': 100, \n    'accessories': 100, \n    'top': 100, \n    'facialHair': 100, \n    'clothe': 100, \n}\n\nfunction Cluster(props) {\n    const type = props.type\n    const style = props.style\n    const pieceObject = pieceSelect(type,style)\n    let ImgSrc = encodeURIComponent(renderToStaticMarkup(pieceObject));\n    let dataUri = `data:image/svg+xml,${ImgSrc}`;\n\n    return (\n            <img src = {dataUri} height = '80' width = '80'></img>\n    );  \n}\n\nexport default Cluster;"]},"metadata":{},"sourceType":"module"}