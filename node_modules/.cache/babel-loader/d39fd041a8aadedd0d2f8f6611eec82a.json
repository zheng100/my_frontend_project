{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/BobbyZheng/Desktop/INFO_253/Final_project/group-project-bmt/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport Cluster from './components/Cluster';\nimport ModAvatar from './components/ModAvatar';\nimport avatarData from './data';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport ToggleGroup from './components/Buttons';\nimport PokeStyleFusion from './components/PokeStyleFusion';\nimport { saveSvgAsPng } from 'save-svg-as-png';\nimport Header from './statics/Header';\nimport Footer from './statics/Footer'; // Data source 1 for style data 2 for initial avatar data\n\nconst datafromBackend = avatarData('style');\nconst initava = avatarData('init'); // Color for DRAGBALES\n\nconst POKETAR_WHITE = \"#ffffff\";\nconst POKETAR_BLUE = \"#5db9ff\";\nconst POKETAR_PURPLE = \"#DAF7A6\"; //face component selected color?\n\nconst POKETAR_RED = \"#ff1f1f\";\nconst POKETAR_YELLOW = \"#ffffff\"; // face component selections?\n// main app\n\nfunction App() {\n  _s();\n\n  // state that holds current avatar look\n  const [avaDetails, setavaDetails] = useState(initava);\n  const [colorDisplay, setcolorDisplay] = useState(initava['hairColor']); // console.log(avaDetails);\n\n  useEffect(() => {\n    console.log(\"details Changed\");\n  }, [avaDetails]); // function that handles drag ending event\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n    const {\n      source,\n      destination\n    } = result;\n\n    if (destination.droppableId === 'MainAvatar') {\n      const draggable_string = result.draggableId; // console.log(result);\n\n      const regfound_tags = draggable_string.match(/([A-Za-z]+)_([A-Za-z]+)/);\n      const [type, style] = [regfound_tags[1], regfound_tags[2]];\n      const newDetails = handleOnChangeAvatar(type, style);\n      setavaDetails(newDetails);\n    }\n  } // update current avatar look\n\n\n  function handleOnChangeAvatar(type, style) {\n    const updatedDetails = avaDetails;\n    updatedDetails[type] = style;\n    return updatedDetails; // console.log(avaDetails);  \n  }\n\n  function saveImage() {\n    saveSvgAsPng(document.getElementById(\"my_ava\").childNodes[0], \"avatar.png\");\n  }\n\n  function confirmAva() {\n    setavaDetails(avaDetails);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container-fluid\",\n      id: \"content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Step 1: Let's Create Your Avatar Interactively!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleOnDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"MainAvatar\",\n          children: (provided, snapshot) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"my_ava\",\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              style: {\n                background: snapshot.isDraggingOver ? POKETAR_BLUE : POKETAR_WHITE\n              },\n              children: /*#__PURE__*/_jsxDEV(ModAvatar, {\n                avaDetails: avaDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-sm-4\",\n            id: \"skin_color\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Skin Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"bd-example\",\n              children: /*#__PURE__*/_jsxDEV(ToggleGroup, {\n                className: \"colors\",\n                colorCode: avatarData('skinColor'),\n                colorType: \"skinColor\",\n                changeColorFun: setcolorDisplay,\n                updateFunction: handleOnChangeAvatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-sm-4\",\n            id: \"hair_color\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Hair Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(ToggleGroup, {\n              className: \"colors\",\n              colorCode: avatarData('hairColor'),\n              colorType: \"hairColor\",\n              changeColorFun: setcolorDisplay,\n              updateFunction: handleOnChangeAvatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-sm-4\",\n            id: \"cloth_color\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Cloth Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(ToggleGroup, {\n              className: \"colors\",\n              colorCode: avatarData('clotheColor'),\n              colorType: \"clotheColor\",\n              changeColorFun: setcolorDisplay,\n              updateFunction: handleOnChangeAvatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"Instructions\",\n          children: \" Step 2: Drag and Drop items to Change his look! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"droppable-content\",\n          children: Object.entries(datafromBackend).map(([type, styles]) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"step2_wrap\",\n              children: /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: type,\n                children: (provided, snapshot) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"OverflowColumn\",\n                    ...provided.droppableProps,\n                    ref: provided.innerRef,\n                    style: {\n                      background: snapshot.isDraggingOver ? POKETAR_BLUE : POKETAR_WHITE\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                      className: \"addons\",\n                      children: styles.map((style, index) => {\n                        return (\n                          /*#__PURE__*/\n                          // Each item in the column is a draggable\n                          _jsxDEV(Draggable, {\n                            draggableId: type + '_' + style,\n                            index: index,\n                            onDragEnd: setavaDetails,\n                            children: (provided, snapshot) => {\n                              return /*#__PURE__*/_jsxDEV(\"div\", {\n                                ref: provided.innerRef,\n                                ...provided.draggableProps,\n                                ...provided.dragHandleProps,\n                                style: {\n                                  backgroundColor: snapshot.isDragging ? POKETAR_PURPLE : POKETAR_YELLOW,\n                                  color: POKETAR_WHITE,\n                                  ...provided.draggableProps.style\n                                },\n                                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                                  children: /*#__PURE__*/_jsxDEV(\"wrap\", {\n                                    className: \"selectAble\",\n                                    children: /*#__PURE__*/_jsxDEV(Cluster, {\n                                      type: type,\n                                      style: style\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 135,\n                                      columnNumber: 60\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 134,\n                                    columnNumber: 55\n                                  }, this)\n                                }, type + style, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 133,\n                                  columnNumber: 51\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 129,\n                                columnNumber: 46\n                              }, this);\n                            }\n                          }, index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 127,\n                            columnNumber: 35\n                          }, this)\n                        );\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 21\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Avatar_save\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        class: \"btn btn-primary\",\n        onClick: saveImage,\n        id: \"save_button\",\n        children: \"Save Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"Instructions\",\n      children: \" Step 3: Get Your Pokemon! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PokeStyleFusion, {\n        currentAva: avaDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"mrCKqbtoseshsJO1Xf1DdKQQz0w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/BobbyZheng/Desktop/INFO_253/Final_project/group-project-bmt/src/App.js"],"names":["React","useState","useEffect","Cluster","ModAvatar","avatarData","DragDropContext","Droppable","Draggable","ToggleGroup","PokeStyleFusion","saveSvgAsPng","Header","Footer","datafromBackend","initava","POKETAR_WHITE","POKETAR_BLUE","POKETAR_PURPLE","POKETAR_RED","POKETAR_YELLOW","App","avaDetails","setavaDetails","colorDisplay","setcolorDisplay","console","log","handleOnDragEnd","result","destination","source","droppableId","draggable_string","draggableId","regfound_tags","match","type","style","newDetails","handleOnChangeAvatar","updatedDetails","saveImage","document","getElementById","childNodes","confirmAva","provided","snapshot","droppableProps","innerRef","background","isDraggingOver","Object","entries","map","styles","index","draggableProps","dragHandleProps","backgroundColor","isDragging","color"],"mappings":"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","sourcesContent":["import './App.css';\nimport React , {useState, useEffect} from \"react\";\nimport Cluster from './components/Cluster';\nimport ModAvatar from './components/ModAvatar';\nimport avatarData from './data';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport ToggleGroup from './components/Buttons';\nimport PokeStyleFusion from './components/PokeStyleFusion';\nimport {saveSvgAsPng} from 'save-svg-as-png';\nimport Header from './statics/Header';\nimport Footer from './statics/Footer';\n\n// Data source 1 for style data 2 for initial avatar data\nconst datafromBackend = avatarData('style')\nconst initava = avatarData('init')\n\n// Color for DRAGBALES\n\nconst POKETAR_WHITE = \"#ffffff\"\nconst POKETAR_BLUE = \"#5db9ff\"\nconst POKETAR_PURPLE = \"#DAF7A6\" //face component selected color?\nconst POKETAR_RED = \"#ff1f1f\"\nconst POKETAR_YELLOW = \"#ffffff\" // face component selections?\n\n// main app\nfunction App() {\n  // state that holds current avatar look\n  const [avaDetails, setavaDetails] = useState(initava);\n  const [colorDisplay, setcolorDisplay] = useState(initava['hairColor']);\n  \n  // console.log(avaDetails);\n  useEffect(() =>{\n    console.log(\"details Changed\")\n  },[avaDetails])\n\n  // function that handles drag ending event\n  function handleOnDragEnd(result){\n    if(!result.destination) return;\n    const{source,destination} = result;\n    if (destination.droppableId === 'MainAvatar'){\n        const draggable_string = result.draggableId;\n        // console.log(result);\n        const regfound_tags = draggable_string.match(/([A-Za-z]+)_([A-Za-z]+)/);\n        const [type, style] = [regfound_tags[1], regfound_tags[2]];\n        const newDetails = handleOnChangeAvatar(type, style);\n        setavaDetails(newDetails);\n        \n    }\n  }\n  \n  // update current avatar look\n  function handleOnChangeAvatar(type, style) {\n    const updatedDetails = avaDetails;\n    updatedDetails[type] = style;\n    return updatedDetails;\n    // console.log(avaDetails);  \n    }\n  \n  \n  function saveImage(){\n    saveSvgAsPng(document.getElementById(\"my_ava\").childNodes[0], \"avatar.png\")\n  }\n\n  function confirmAva(){\n    setavaDetails(avaDetails);\n  }\n  \n  return (  \n  <div class=\"container-fluid\">\n\n    <Header/>\n    <div class='container-fluid' id = 'content-container'>\n    {/*center avatar*/}\n    <h2> Step 1: Let's Create Your Avatar Interactively!</h2>\n      <DragDropContext onDragEnd = {handleOnDragEnd}>\n        {/* Dropable portion that of the Avatar display */}\n        <Droppable droppableId = \"MainAvatar\" > \n          {(provided,snapshot) => {\n            return (\n              <div id = \"my_ava\"\n              {...provided.droppableProps} ref={provided.innerRef} \n                style = {{\n                background: snapshot.isDraggingOver? POKETAR_BLUE: POKETAR_WHITE}}>\n                <ModAvatar avaDetails = {avaDetails}/>\n              </div>)\n              }}\n        </Droppable>\n\n        {/*color rows*/}\n        <div class=\"row\">\n          <div class=\"col-sm-4\" id='skin_color'>\n            <h3>Skin Color</h3>\n              <div class=\"bd-example\">\n              <ToggleGroup className=\"colors\" colorCode = {avatarData('skinColor')} colorType = 'skinColor' changeColorFun = {setcolorDisplay} updateFunction = {handleOnChangeAvatar}/> \n              </div>\n          </div> \n          <div class=\"col-sm-4\" id='hair_color'>\n            <h3>Hair Color</h3>\n              <ToggleGroup className=\"colors\" colorCode = {avatarData('hairColor')} colorType = 'hairColor' changeColorFun = {setcolorDisplay} updateFunction = {handleOnChangeAvatar}/> \n          </div>\n          <div class=\"col-sm-4\" id='cloth_color'>\n            <h3>Cloth Color</h3>\n            <ToggleGroup className=\"colors\" colorCode = {avatarData('clotheColor')} colorType = 'clotheColor' changeColorFun = {setcolorDisplay} updateFunction = {handleOnChangeAvatar}/> \n          </div>\n        </div>\n\n        {/* Drag and droppable features and clothing */}\n        <h2 className=\"Instructions\"> Step 2: Drag and Drop items to Change his look! </h2>\n        <div id = 'droppable-content'>\n          {/* Double loop that go through all possible type of looking and styles */} \n          {Object.entries(datafromBackend).map(([type, styles]) =>{\n            return(\n              <div id = 'step2_wrap'>\n                {/* Each column is also a droppable */} \n                <Droppable droppableId = {type}>\n                  {(provided, snapshot) => {\n                  return(\n                    <div className = 'OverflowColumn'\n                      {...provided.droppableProps} ref={provided.innerRef} \n                      style = {{\n                          background: snapshot.isDraggingOver? POKETAR_BLUE: POKETAR_WHITE,\n                      }}>\n                      <ul className = 'addons'>\n                          {styles.map((style,index) => {\n                              return (\n                                  // Each item in the column is a draggable\n                                  <Draggable draggableId = {type + '_' +style} index={index} key={index} onDragEnd = {setavaDetails}>\n                                  {(provided, snapshot) => {\n                                      return(<div\n                                                  ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}\n                                                  style = {{ backgroundColor: snapshot.isDragging? POKETAR_PURPLE : POKETAR_YELLOW , color: POKETAR_WHITE, ...provided.draggableProps.style\n                                                  }}>\n                                                  <li key ={type + style}>\n                                                      <wrap className = \"selectAble\">\n                                                          {<Cluster type = {type} style = {style}/>}\n                                                      </wrap>\n                                                  </li>\n                                              </div>); \n                                  }}\n                                  </Draggable>\n                              ); \n                            })\n                          }\n                      </ul>\n                    </div>)\n                  }}\n                </Droppable>\n              </div>);\n            })}\n        </div>\n        </DragDropContext>\n    </div> \n        \n    {/* avatar save button */}\n    <div id = 'Avatar_save'>\n      <button type=\"button\" class=\"btn btn-primary\" onClick = {saveImage} id = 'save_button'>\n        Save Image\n      </button>\n    </div>\n\n    {/* Step 3 & Step 4: Get and transform your pokemon */}\n    <h2 className=\"Instructions\"> Step 3: Get Your Pokemon! </h2>\n    <div>\n      <PokeStyleFusion currentAva = {avaDetails}/>\n    </div>\n    <Footer/>\n</div>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}