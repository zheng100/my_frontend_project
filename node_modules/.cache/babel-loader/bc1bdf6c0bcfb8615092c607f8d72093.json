{"ast":null,"code":"// // {/*center avatar*/}\n// // <DragDropContext onDragEnd = {handleOnDragEnd}>\n// //   {/* Dropable portion that of the Avatar display */}\n// //   <Droppable droppableId = \"MainAvatar\" > \n// //     {(provided,snapshot) => {\n// //       return (\n// //         <div id = \"my_ava\"\n// //         {...provided.droppableProps} ref={provided.innerRef} \n// //           style = {{\n// //           background: snapshot.isDraggingOver? POKETAR_BLUE: POKETAR_WHITE}}>\n// //           <ModAvatar avaDetails = {avaDetails}/>\n// //         </div>)\n// //         }}\n// //   </Droppable>\n// //   {/*color rows*/}\n// //   <div class=\"row\">\n//     // <div class=\"col-sm-4\" id='skin_color'>\n//     //   <h3>Skin Color</h3>\n//     //     <div class=\"bd-example\">\n//     //     <ToggleGroup className=\"colors\" colorCode = {skinColorSet} colorType = 'skinColor' changeColorFun = {props.setcolorDisplay} updateFunction = {handleOnChangeAvatar}/> \n//     //     </div>\n//     // </div> \n//     // <div class=\"col-sm-4\" id='hair_color'>\n//     //   <h3>Hair Color</h3>\n//     //     <ToggleGroup className=\"colors\" colorCode = {hairColorSet} colorType = 'hairColor' changeColorFun = {props.setcolorDisplay} updateFunction = {handleOnChangeAvatar}/> \n//     // </div>\n//     // <div class=\"col-sm-4\" id='cloth_color'>\n//     //   <h3>Cloth Color</h3>\n//     //   <ToggleGroup className=\"colors\" colorCode = {clothColorSet} colorType = 'clotheColor' changeColorFun = {props.setcolorDisplay} updateFunction = {handleOnChangeAvatar}/> \n//     // </div>\n// //   </div>\n//   {/* Drag and droppable features and clothing */}\n//   <h2 className=\"Instructions\"> Step 2: Drag and Drop items to Change his look! </h2>\n//   <div id = 'droppable-content'>\n//     {/* Double loop that go through all possible type of looking and styles */} \n//     {Object.entries(datafromBackend).map(([type, styles]) =>{\n//       return(\n//         <div id = 'step2_wrap'>\n//           {/* Each column is also a droppable */} \n//           <Droppable droppableId = {type}>\n//             {(provided, snapshot) => {\n//             return(\n//               <div className = 'OverflowColumn'\n//                 {...provided.droppableProps} ref={provided.innerRef} \n//                 style = {{\n//                     background: snapshot.isDraggingOver? POKETAR_BLUE: POKETAR_WHITE,\n//                 }}>\n//                 <ul className = 'addons'>\n//                     {styles.map((style,index) => {\n//                         return (\n//                             // Each item in the column is a draggable\n//                             <Draggable draggableId = {type + '_' +style} index={index} key={index}>\n//                             {(provided, snapshot) => {\n//                                 return(<div\n//                                             ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}\n//                                             style = {{ backgroundColor: snapshot.isDragging? POKETAR_PURPLE : POKETAR_YELLOW , color: POKETAR_WHITE, ...provided.draggableProps.style\n//                                             }}>\n//                                             <li key ={type + style}>\n//                                                 <wrap className = \"selectAble\">\n//                                                     {<Cluster type = {type} style = {style}/>}\n//                                                 </wrap>\n//                                             </li>\n//                                         </div>); \n//                             }}\n//                             </Draggable>\n//                         ); \n//                       })\n//                     }\n//                 </ul>\n//               </div>)\n//             }}\n//           </Droppable>\n//         </div>);\n//       })}\n//   </div>\n// //   </DragDropContext>","map":{"version":3,"sources":["/Users/BobbyZheng/Desktop/INFO_253/Final_project/group-project-bmt/src/Styletransfer.js"],"names":[],"mappings":"AAAI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["    // // {/*center avatar*/}\n    // // <DragDropContext onDragEnd = {handleOnDragEnd}>\n    // //   {/* Dropable portion that of the Avatar display */}\n    // //   <Droppable droppableId = \"MainAvatar\" > \n    // //     {(provided,snapshot) => {\n    // //       return (\n    // //         <div id = \"my_ava\"\n    // //         {...provided.droppableProps} ref={provided.innerRef} \n    // //           style = {{\n    // //           background: snapshot.isDraggingOver? POKETAR_BLUE: POKETAR_WHITE}}>\n    // //           <ModAvatar avaDetails = {avaDetails}/>\n    // //         </div>)\n    // //         }}\n    // //   </Droppable>\n\n    // //   {/*color rows*/}\n    // //   <div class=\"row\">\n    //     // <div class=\"col-sm-4\" id='skin_color'>\n    //     //   <h3>Skin Color</h3>\n    //     //     <div class=\"bd-example\">\n    //     //     <ToggleGroup className=\"colors\" colorCode = {skinColorSet} colorType = 'skinColor' changeColorFun = {props.setcolorDisplay} updateFunction = {handleOnChangeAvatar}/> \n    //     //     </div>\n    //     // </div> \n    //     // <div class=\"col-sm-4\" id='hair_color'>\n    //     //   <h3>Hair Color</h3>\n    //     //     <ToggleGroup className=\"colors\" colorCode = {hairColorSet} colorType = 'hairColor' changeColorFun = {props.setcolorDisplay} updateFunction = {handleOnChangeAvatar}/> \n    //     // </div>\n    //     // <div class=\"col-sm-4\" id='cloth_color'>\n    //     //   <h3>Cloth Color</h3>\n    //     //   <ToggleGroup className=\"colors\" colorCode = {clothColorSet} colorType = 'clotheColor' changeColorFun = {props.setcolorDisplay} updateFunction = {handleOnChangeAvatar}/> \n    //     // </div>\n    // //   </div>\n\n    //   {/* Drag and droppable features and clothing */}\n    //   <h2 className=\"Instructions\"> Step 2: Drag and Drop items to Change his look! </h2>\n    //   <div id = 'droppable-content'>\n    //     {/* Double loop that go through all possible type of looking and styles */} \n    //     {Object.entries(datafromBackend).map(([type, styles]) =>{\n    //       return(\n    //         <div id = 'step2_wrap'>\n    //           {/* Each column is also a droppable */} \n    //           <Droppable droppableId = {type}>\n    //             {(provided, snapshot) => {\n    //             return(\n    //               <div className = 'OverflowColumn'\n    //                 {...provided.droppableProps} ref={provided.innerRef} \n    //                 style = {{\n    //                     background: snapshot.isDraggingOver? POKETAR_BLUE: POKETAR_WHITE,\n    //                 }}>\n    //                 <ul className = 'addons'>\n    //                     {styles.map((style,index) => {\n    //                         return (\n    //                             // Each item in the column is a draggable\n    //                             <Draggable draggableId = {type + '_' +style} index={index} key={index}>\n    //                             {(provided, snapshot) => {\n    //                                 return(<div\n    //                                             ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}\n    //                                             style = {{ backgroundColor: snapshot.isDragging? POKETAR_PURPLE : POKETAR_YELLOW , color: POKETAR_WHITE, ...provided.draggableProps.style\n    //                                             }}>\n    //                                             <li key ={type + style}>\n    //                                                 <wrap className = \"selectAble\">\n    //                                                     {<Cluster type = {type} style = {style}/>}\n    //                                                 </wrap>\n    //                                             </li>\n    //                                         </div>); \n    //                             }}\n    //                             </Draggable>\n    //                         ); \n    //                       })\n    //                     }\n    //                 </ul>\n    //               </div>)\n    //             }}\n    //           </Droppable>\n    //         </div>);\n    //       })}\n    //   </div>\n    // //   </DragDropContext>"]},"metadata":{},"sourceType":"module"}