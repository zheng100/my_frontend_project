{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import React from\"react\";import{Piece}from'avataaars';import{renderToStaticMarkup}from'react-dom/server';var PIECESIZE=100;function pieceSelect(type,style){if(type==='mouth')return/*#__PURE__*/_jsx(Piece,{pieceType:\"mouth\",pieceSize:PIECESIZE*5,mouthType:style});if(type==='eyes')return/*#__PURE__*/_jsx(Piece,{pieceType:\"eyes\",pieceSize:PIECESIZE*5,eyeType:style});if(type==='eyebrows')return/*#__PURE__*/_jsx(Piece,{pieceType:\"eyebrows\",pieceSize:PIECESIZE*1.5,eyebrowType:style});if(type==='accessories')return/*#__PURE__*/_jsx(Piece,{pieceType:\"accessories\",pieceSize:PIECESIZE*1.5,accessoriesType:style});if(type==='top')return/*#__PURE__*/_jsx(Piece,{pieceType:\"top\",pieceSize:PIECESIZE*0.5,topType:style,hairColor:\"Black\"});if(type==='facialHair')return/*#__PURE__*/_jsx(Piece,{pieceType:\"facialHair\",pieceSize:PIECESIZE,facialHairType:style});if(type==='clothe')return/*#__PURE__*/_jsx(Piece,{pieceType:\"clothe\",pieceSize:PIECESIZE,clotheType:style,clotheColor:\"white\"});}var pieceSize={'mouth':100,'eyes':100,'eyebrows':100,'accessories':100,'top':100,'facialHair':100,'clothe':100};function Cluster(props){var type=props.type;var style=props.style;var pieceObject=pieceSelect(type,style);var ImgSrc=encodeURIComponent(renderToStaticMarkup(pieceObject));var dataUri=\"data:image/svg+xml,\".concat(ImgSrc);return/*#__PURE__*/_jsx(\"img\",{src:dataUri,height:\"80\",width:\"80\"});}export default Cluster;","map":{"version":3,"sources":["/Users/BobbyZheng/Desktop/INFO_253/Final_project/my_frontend_project/src/components/Cluster.js"],"names":["React","Piece","renderToStaticMarkup","PIECESIZE","pieceSelect","type","style","pieceSize","Cluster","props","pieceObject","ImgSrc","encodeURIComponent","dataUri"],"mappings":"2CAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,KAAR,KAAoB,WAApB,CACA,OAASC,oBAAT,KAAqC,kBAArC,CAEA,GAAMC,CAAAA,SAAS,CAAG,GAAlB,CAEA,QAASC,CAAAA,WAAT,CAAqBC,IAArB,CAA0BC,KAA1B,CAAgC,CAC5B,GAAID,IAAI,GAAK,OAAb,CAAsB,mBAAO,KAAC,KAAD,EAAO,SAAS,CAAE,OAAlB,CAA0B,SAAS,CAAGF,SAAS,CAAG,CAAlD,CAAqD,SAAS,CAAIG,KAAlE,EAAP,CACtB,GAAID,IAAI,GAAK,MAAb,CAAqB,mBAAO,KAAC,KAAD,EAAO,SAAS,CAAE,MAAlB,CAAyB,SAAS,CAAGF,SAAS,CAAG,CAAjD,CAAoD,OAAO,CAAIG,KAA/D,EAAP,CACrB,GAAID,IAAI,GAAK,UAAb,CAAyB,mBAAO,KAAC,KAAD,EAAO,SAAS,CAAE,UAAlB,CAA6B,SAAS,CAAIF,SAAS,CAAG,GAAtD,CAA2D,WAAW,CAAIG,KAA1E,EAAP,CACzB,GAAID,IAAI,GAAK,aAAb,CAA4B,mBAAO,KAAC,KAAD,EAAO,SAAS,CAAE,aAAlB,CAAgC,SAAS,CAAGF,SAAS,CAAG,GAAxD,CAA6D,eAAe,CAAIG,KAAhF,EAAP,CAC5B,GAAID,IAAI,GAAK,KAAb,CAAoB,mBAAO,KAAC,KAAD,EAAO,SAAS,CAAE,KAAlB,CAAwB,SAAS,CAAIF,SAAS,CAAG,GAAjD,CAAsD,OAAO,CAAIG,KAAjE,CAAwE,SAAS,CAAC,OAAlF,EAAP,CACpB,GAAID,IAAI,GAAK,YAAb,CAA2B,mBAAO,KAAC,KAAD,EAAO,SAAS,CAAE,YAAlB,CAA+B,SAAS,CAAGF,SAA3C,CAAsD,cAAc,CAAIG,KAAxE,EAAP,CAC3B,GAAID,IAAI,GAAK,QAAb,CAAuB,mBAAO,KAAC,KAAD,EAAO,SAAS,CAAE,QAAlB,CAA2B,SAAS,CAAGF,SAAvC,CAAkD,UAAU,CAAIG,KAAhE,CAAuE,WAAW,CAAC,OAAnF,EAAP,CAC1B,CAED,GAAMC,CAAAA,SAAS,CAAG,CACd,QAAS,GADK,CAEd,OAAQ,GAFM,CAGd,WAAY,GAHE,CAId,cAAe,GAJD,CAKd,MAAO,GALO,CAMd,aAAc,GANA,CAOd,SAAU,GAPI,CAAlB,CAUA,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CACpB,GAAMJ,CAAAA,IAAI,CAAGI,KAAK,CAACJ,IAAnB,CACA,GAAMC,CAAAA,KAAK,CAAGG,KAAK,CAACH,KAApB,CACA,GAAMI,CAAAA,WAAW,CAAGN,WAAW,CAACC,IAAD,CAAMC,KAAN,CAA/B,CACA,GAAIK,CAAAA,MAAM,CAAGC,kBAAkB,CAACV,oBAAoB,CAACQ,WAAD,CAArB,CAA/B,CACA,GAAIG,CAAAA,OAAO,8BAAyBF,MAAzB,CAAX,CAEA,mBACQ,YAAK,GAAG,CAAIE,OAAZ,CAAqB,MAAM,CAAG,IAA9B,CAAmC,KAAK,CAAG,IAA3C,EADR,CAGH,CAED,cAAeL,CAAAA,OAAf","sourcesContent":["import React from \"react\";\nimport {Piece} from 'avataaars';\nimport { renderToStaticMarkup } from 'react-dom/server';\n\nconst PIECESIZE = 100;\n\nfunction pieceSelect(type,style){\n    if (type === 'mouth') return <Piece pieceType= \"mouth\" pieceSize= {PIECESIZE * 5} mouthType = {style}/>\n    if (type === 'eyes') return <Piece pieceType= \"eyes\" pieceSize= {PIECESIZE * 5} eyeType = {style}/>\n    if (type === 'eyebrows') return <Piece pieceType= \"eyebrows\" pieceSize = {PIECESIZE * 1.5} eyebrowType = {style}/>\n    if (type === 'accessories') return <Piece pieceType= \"accessories\" pieceSize= {PIECESIZE * 1.5} accessoriesType = {style}/>\n    if (type === 'top') return <Piece pieceType= \"top\" pieceSize = {PIECESIZE * 0.5} topType = {style} hairColor=\"Black\"/>\n    if (type === 'facialHair') return <Piece pieceType= \"facialHair\" pieceSize= {PIECESIZE} facialHairType = {style}/>\n    if (type === 'clothe') return <Piece pieceType= \"clothe\" pieceSize= {PIECESIZE} clotheType = {style} clotheColor=\"white\"/>\n}\n\nconst pieceSize = {\n    'mouth': 100,\n    'eyes': 100, \n    'eyebrows': 100, \n    'accessories': 100, \n    'top': 100, \n    'facialHair': 100, \n    'clothe': 100, \n}\n\nfunction Cluster(props) {\n    const type = props.type\n    const style = props.style\n    const pieceObject = pieceSelect(type,style)\n    let ImgSrc = encodeURIComponent(renderToStaticMarkup(pieceObject));\n    let dataUri = `data:image/svg+xml,${ImgSrc}`;\n\n    return (\n            <img src = {dataUri} height = '80' width = '80'></img>\n    );  \n}\n\nexport default Cluster;"]},"metadata":{},"sourceType":"module"}