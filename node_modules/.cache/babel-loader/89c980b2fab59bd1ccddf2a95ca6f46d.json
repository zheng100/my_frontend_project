{"ast":null,"code":"import _slicedToArray from\"/Users/BobbyZheng/Desktop/INFO_253/Final_project/my_frontend_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import'./App.css';import React,{useState,useEffect,useRef}from\"react\";import Cluster from'./components/Cluster';import ModAvatar from'./components/ModAvatar';import avatarData from'./data';import{DragDropContext,Droppable,Draggable}from'react-beautiful-dnd';import ToggleGroup from'./components/Buttons';import PokeStyleFusion from'./components/PokeStyleFusion';import DragdropAva from'./components/DragdropAva';import{saveSvgAsPng}from'save-svg-as-png';import Header from'./statics/Header';import Footer from'./statics/Footer';// Data source 1 for style data 2 for initial avatar data\nvar initava=avatarData('init');var datafromBackend=avatarData('style');// Color for DRAGBALES\nvar skinColorSet=avatarData('skinColor');var hairColorSet=avatarData('hairColor');var clothColorSet=avatarData('clotheColor');// main app\nfunction App(){// state that holds current avatar look\n// console.log(skinColorSet);\nvar _useState=useState(initava),_useState2=_slicedToArray(_useState,2),avaDetails=_useState2[0],setavaDetails=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),colorDisplay=_useState4[0],setcolorDisplay=_useState4[1];// console.log(avaDetails);\n// useEffect(() =>{\n//   console.log(\"details Changed\")\n// },[avaDetails])\nfunction saveImage(){saveSvgAsPng(document.getElementById(\"my_ava\").childNodes[0],\"avatar.png\");}function resetAvatar(){var newDetails=avatarData('init');setavaDetails(newDetails);}function randomAvatar(){var newDetails=RandomProp(datafromBackend);setavaDetails(newDetails);}function getRandomInt(max){return Math.floor(Math.random()*Math.floor(max));}function RandomProp(obj){var keys=Object.keys(obj);var randomProp={};keys.forEach(function(key){var lstLength=obj[key].length;var index=getRandomInt(lstLength);randomProp[key]=obj[key][index];});return randomProp;}return/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"h2\",{children:\" Step 1: Let's Create Your Avatar Interactively!\"}),/*#__PURE__*/_jsxs(\"div\",{class:\"form-group row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary btn-lg\",onClick:resetAvatar,children:\"Reset Avatar\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary btn-lg\",onClick:randomAvatar,children:\"Random Avatar\"})})]}),/*#__PURE__*/_jsx(DragdropAva,{avaDetails:avaDetails,datafromBackend:datafromBackend,skinColorSet:skinColorSet,hairColorSet:hairColorSet,clothColorSet:clothColorSet,setcolorDisplay:setcolorDisplay,avaChangeFun:setavaDetails}),/*#__PURE__*/_jsx(\"div\",{class:\"col-12-text-center\",id:\"Avatar_save\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",class:\"btn btn-primary btn-lg\",onClick:saveImage,id:\"save_button\",children:\"Save Image\"})}),/*#__PURE__*/_jsx(\"div\",{class:\"row\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"Instructions\",children:\" Step 3: Get Your Pokemon! \"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(PokeStyleFusion,{currentAva:avaDetails})}),/*#__PURE__*/_jsx(Footer,{})]});}export default App;","map":{"version":3,"sources":["/Users/BobbyZheng/Desktop/INFO_253/Final_project/my_frontend_project/src/App.js"],"names":["React","useState","useEffect","useRef","Cluster","ModAvatar","avatarData","DragDropContext","Droppable","Draggable","ToggleGroup","PokeStyleFusion","DragdropAva","saveSvgAsPng","Header","Footer","initava","datafromBackend","skinColorSet","hairColorSet","clothColorSet","App","avaDetails","setavaDetails","colorDisplay","setcolorDisplay","saveImage","document","getElementById","childNodes","resetAvatar","newDetails","randomAvatar","RandomProp","getRandomInt","max","Math","floor","random","obj","keys","Object","randomProp","forEach","key","lstLength","length","index"],"mappings":"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","sourcesContent":["import './App.css';\nimport React , {useState, useEffect,useRef } from \"react\";\nimport Cluster from './components/Cluster';\nimport ModAvatar from './components/ModAvatar';\nimport avatarData from './data';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport ToggleGroup from './components/Buttons';\nimport PokeStyleFusion from './components/PokeStyleFusion';\nimport DragdropAva from './components/DragdropAva';\nimport {saveSvgAsPng} from 'save-svg-as-png';\n\nimport Header from './statics/Header';\nimport Footer from './statics/Footer';\n\n\n// Data source 1 for style data 2 for initial avatar data\n\nconst initava = avatarData('init')\nconst datafromBackend = avatarData('style')\n// Color for DRAGBALES\nconst skinColorSet = avatarData('skinColor');\nconst hairColorSet = avatarData('hairColor');\nconst clothColorSet = avatarData('clotheColor');\n\n// main app\nfunction App() {\n  // state that holds current avatar look\n  // console.log(skinColorSet);\n  const [avaDetails, setavaDetails] = useState(initava);\n  const [colorDisplay, setcolorDisplay] = useState(\"\");\n  \n  // console.log(avaDetails);\n  // useEffect(() =>{\n  //   console.log(\"details Changed\")\n  // },[avaDetails])\n\n  \n  function saveImage(){\n    saveSvgAsPng(document.getElementById(\"my_ava\").childNodes[0], \"avatar.png\")\n  }\n\n  function resetAvatar(){\n    const newDetails = avatarData('init');\n    setavaDetails(newDetails);\n  }\n\n  function randomAvatar(){\n    const newDetails = RandomProp(datafromBackend);\n    setavaDetails(newDetails);\n  }\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n  function RandomProp(obj){\n      let keys = Object.keys(obj);\n      const randomProp = {};\n      keys.forEach((key) => {\n        const lstLength = obj[key].length;\n        const index = getRandomInt(lstLength);\n        randomProp[key] = obj[key][index];\n      })\n      return randomProp;\n  }\n  \n  return (  \n  <div className=\"container-fluid\">\n\n    <Header/>\n    <h2> Step 1: Let's Create Your Avatar Interactively!</h2>\n    \n    <div class=\"form-group row\">\n      <div className= 'col-md-4'>\n        <button className=\"btn btn-primary btn-lg\" onClick = {resetAvatar}>\n          Reset Avatar\n        </button>\n      </div>\n      <div className= 'col-md-4'>\n        <button className=\"btn btn-primary btn-lg\" onClick = {randomAvatar}>\n          Random Avatar\n        </button>\n      </div>\n    </div>\n\n    <DragdropAva avaDetails = {avaDetails} datafromBackend = {datafromBackend} skinColorSet = {skinColorSet} hairColorSet = {hairColorSet} clothColorSet = {clothColorSet} setcolorDisplay = {setcolorDisplay} avaChangeFun = {setavaDetails}/>\n        \n    {/* avatar save button */}\n    <div class=\"col-12-text-center\" id = 'Avatar_save'>\n      <button type=\"button\" class=\"btn btn-primary btn-lg\" onClick = {saveImage} id = 'save_button'>\n        Save Image\n      </button>\n    </div>\n    \n    {/* Step 3 & Step 4: Get and transform your pokemon */}\n    <div class=\"row\">\n    <h2 className=\"Instructions\"> Step 3: Get Your Pokemon! </h2>\n    </div>\n    <div>\n      <PokeStyleFusion currentAva = {avaDetails}/>\n    </div>\n    <Footer/>\n  </div>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}