{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { concat, slice, stack, tensor, tidy, unstack, util, io, Tensor, add, addN, mod, mul, div, floorDiv, sub, minimum, maximum, pow, squaredDifference, abs, acos, acosh, asin, asinh, atan, atan2, atanh, ceil, cos, cosh, elu, erf, exp, expm1, floor, log, log1p, neg, reciprocal, relu, round, selu, sigmoid, sin, sign, sinh, softplus, sqrt, square, tanh, tan, clipByValue, scalar, prod, leakyRelu, conv1d, conv2d, conv2dTranspose, depthwiseConv2d, avgPool, maxPool, fill, linspace, oneHot, ones, onesLike, randomUniform, range, truncatedNormal, zeros, zerosLike, image, whereAsync, setdiff1dAsync, topk, tensor1d, equal, notEqual, greater, greaterEqual, less, lessEqual, logicalAnd, logicalNot, logicalOr, where, matMul, transpose, batchNormalization, localResponseNormalization, softmax, logSoftmax, sparseToDense, max, mean, min, sum, all, any, argMax, argMin, gather, reverse, stridedSlice, tile, split, scatterND, gatherND, fft, ifft, rfft, irfft, cast, expandDims, squeeze, reshape, pad, spaceToBatchND, batchToSpaceND, depthToSpace } from \"@tensorflow/tfjs-core\";\n\nvar __assign = Object.assign || function (e) {\n  for (var t, a = 1, r = arguments.length; a < r; a++) {\n    for (var n in t = arguments[a]) {\n      Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n    }\n  }\n\n  return e;\n};\n\nfunction __awaiter(e, t, a, r) {\n  return new (a || (a = Promise))(function (n, o) {\n    function s(e) {\n      try {\n        p(r.next(e));\n      } catch (e) {\n        o(e);\n      }\n    }\n\n    function i(e) {\n      try {\n        p(r.throw(e));\n      } catch (e) {\n        o(e);\n      }\n    }\n\n    function p(e) {\n      e.done ? n(e.value) : new a(function (t) {\n        t(e.value);\n      }).then(s, i);\n    }\n\n    p((r = r.apply(e, t || [])).next());\n  });\n}\n\nfunction __generator(e, t) {\n  var a,\n      r,\n      n,\n      o,\n      s = {\n    label: 0,\n    sent: function sent() {\n      if (1 & n[0]) throw n[1];\n      return n[1];\n    },\n    trys: [],\n    ops: []\n  };\n  return o = {\n    next: i(0),\n    throw: i(1),\n    return: i(2)\n  }, \"function\" == typeof Symbol && (o[Symbol.iterator] = function () {\n    return this;\n  }), o;\n\n  function i(o) {\n    return function (i) {\n      return function (o) {\n        if (a) throw new TypeError(\"Generator is already executing.\");\n\n        for (; s;) {\n          try {\n            if (a = 1, r && (n = r[2 & o[0] ? \"return\" : o[0] ? \"throw\" : \"next\"]) && !(n = n.call(r, o[1])).done) return n;\n\n            switch (r = 0, n && (o = [0, n.value]), o[0]) {\n              case 0:\n              case 1:\n                n = o;\n                break;\n\n              case 4:\n                return s.label++, {\n                  value: o[1],\n                  done: !1\n                };\n\n              case 5:\n                s.label++, r = o[1], o = [0];\n                continue;\n\n              case 7:\n                o = s.ops.pop(), s.trys.pop();\n                continue;\n\n              default:\n                if (!(n = (n = s.trys).length > 0 && n[n.length - 1]) && (6 === o[0] || 2 === o[0])) {\n                  s = 0;\n                  continue;\n                }\n\n                if (3 === o[0] && (!n || o[1] > n[0] && o[1] < n[3])) {\n                  s.label = o[1];\n                  break;\n                }\n\n                if (6 === o[0] && s.label < n[1]) {\n                  s.label = n[1], n = o;\n                  break;\n                }\n\n                if (n && s.label < n[2]) {\n                  s.label = n[2], s.ops.push(o);\n                  break;\n                }\n\n                n[2] && s.ops.pop(), s.trys.pop();\n                continue;\n            }\n\n            o = t.call(e, s);\n          } catch (e) {\n            o = [6, e], r = 0;\n          } finally {\n            a = n = 0;\n          }\n        }\n\n        if (5 & o[0]) throw o[1];\n        return {\n          value: o[0] ? o[1] : void 0,\n          done: !0\n        };\n      }([o, i]);\n    };\n  }\n}\n\nvar commonjsGlobal = \"undefined\" != typeof window ? window : \"undefined\" != typeof global ? global : \"undefined\" != typeof self ? self : {};\n\nfunction createCommonjsModule(e, t) {\n  return e(t = {\n    exports: {}\n  }, t.exports), t.exports;\n}\n\nvar aspromise = asPromise;\n\nfunction asPromise(e, t) {\n  for (var a = new Array(arguments.length - 1), r = 0, n = 2, o = !0; n < arguments.length;) {\n    a[r++] = arguments[n++];\n  }\n\n  return new Promise(function (n, s) {\n    a[r] = function (e) {\n      if (o) if (o = !1, e) s(e);else {\n        for (var t = new Array(arguments.length - 1), a = 0; a < t.length;) {\n          t[a++] = arguments[a];\n        }\n\n        n.apply(null, t);\n      }\n    };\n\n    try {\n      e.apply(t || null, a);\n    } catch (e) {\n      o && (o = !1, s(e));\n    }\n  });\n}\n\nvar base64_1 = createCommonjsModule(function (e, t) {\n  var a = t;\n\n  a.length = function (e) {\n    var t = e.length;\n    if (!t) return 0;\n\n    for (var a = 0; --t % 4 > 1 && \"=\" === e.charAt(t);) {\n      ++a;\n    }\n\n    return Math.ceil(3 * e.length) / 4 - a;\n  };\n\n  for (var r = new Array(64), n = new Array(123), o = 0; o < 64;) {\n    n[r[o] = o < 26 ? o + 65 : o < 52 ? o + 71 : o < 62 ? o - 4 : o - 59 | 43] = o++;\n  }\n\n  a.encode = function (e, t, a) {\n    for (var n, o = null, s = [], i = 0, p = 0; t < a;) {\n      var m = e[t++];\n\n      switch (p) {\n        case 0:\n          s[i++] = r[m >> 2], n = (3 & m) << 4, p = 1;\n          break;\n\n        case 1:\n          s[i++] = r[n | m >> 4], n = (15 & m) << 2, p = 2;\n          break;\n\n        case 2:\n          s[i++] = r[n | m >> 6], s[i++] = r[63 & m], p = 0;\n      }\n\n      i > 8191 && ((o || (o = [])).push(String.fromCharCode.apply(String, s)), i = 0);\n    }\n\n    return p && (s[i++] = r[n], s[i++] = 61, 1 === p && (s[i++] = 61)), o ? (i && o.push(String.fromCharCode.apply(String, s.slice(0, i))), o.join(\"\")) : String.fromCharCode.apply(String, s.slice(0, i));\n  };\n\n  a.decode = function (e, t, a) {\n    for (var r, o = a, s = 0, i = 0; i < e.length;) {\n      var p = e.charCodeAt(i++);\n      if (61 === p && s > 1) break;\n      if (void 0 === (p = n[p])) throw Error(\"invalid encoding\");\n\n      switch (s) {\n        case 0:\n          r = p, s = 1;\n          break;\n\n        case 1:\n          t[a++] = r << 2 | (48 & p) >> 4, r = p, s = 2;\n          break;\n\n        case 2:\n          t[a++] = (15 & r) << 4 | (60 & p) >> 2, r = p, s = 3;\n          break;\n\n        case 3:\n          t[a++] = (3 & r) << 6 | p, s = 0;\n      }\n    }\n\n    if (1 === s) throw Error(\"invalid encoding\");\n    return a - o;\n  }, a.test = function (e) {\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e);\n  };\n}),\n    eventemitter = EventEmitter;\n\nfunction EventEmitter() {\n  this._listeners = {};\n}\n\nEventEmitter.prototype.on = function (e, t, a) {\n  return (this._listeners[e] || (this._listeners[e] = [])).push({\n    fn: t,\n    ctx: a || this\n  }), this;\n}, EventEmitter.prototype.off = function (e, t) {\n  if (void 0 === e) this._listeners = {};else if (void 0 === t) this._listeners[e] = [];else for (var a = this._listeners[e], r = 0; r < a.length;) {\n    a[r].fn === t ? a.splice(r, 1) : ++r;\n  }\n  return this;\n}, EventEmitter.prototype.emit = function (e) {\n  var t = this._listeners[e];\n\n  if (t) {\n    for (var a = [], r = 1; r < arguments.length;) {\n      a.push(arguments[r++]);\n    }\n\n    for (r = 0; r < t.length;) {\n      t[r].fn.apply(t[r++].ctx, a);\n    }\n  }\n\n  return this;\n};\nvar float_1 = factory(factory);\n\nfunction factory(e) {\n  return \"undefined\" != typeof Float32Array ? function () {\n    var t = new Float32Array([-0]),\n        a = new Uint8Array(t.buffer),\n        r = 128 === a[3];\n\n    function n(e, r, n) {\n      t[0] = e, r[n] = a[0], r[n + 1] = a[1], r[n + 2] = a[2], r[n + 3] = a[3];\n    }\n\n    function o(e, r, n) {\n      t[0] = e, r[n] = a[3], r[n + 1] = a[2], r[n + 2] = a[1], r[n + 3] = a[0];\n    }\n\n    function s(e, r) {\n      return a[0] = e[r], a[1] = e[r + 1], a[2] = e[r + 2], a[3] = e[r + 3], t[0];\n    }\n\n    function i(e, r) {\n      return a[3] = e[r], a[2] = e[r + 1], a[1] = e[r + 2], a[0] = e[r + 3], t[0];\n    }\n\n    e.writeFloatLE = r ? n : o, e.writeFloatBE = r ? o : n, e.readFloatLE = r ? s : i, e.readFloatBE = r ? i : s;\n  }() : function () {\n    function t(e, t, a, r) {\n      var n = t < 0 ? 1 : 0;\n      if (n && (t = -t), 0 === t) e(1 / t > 0 ? 0 : 2147483648, a, r);else if (isNaN(t)) e(2143289344, a, r);else if (t > 3.4028234663852886e38) e((n << 31 | 2139095040) >>> 0, a, r);else if (t < 1.1754943508222875e-38) e((n << 31 | Math.round(t / 1.401298464324817e-45)) >>> 0, a, r);else {\n        var o = Math.floor(Math.log(t) / Math.LN2);\n        e((n << 31 | o + 127 << 23 | 8388607 & Math.round(t * Math.pow(2, -o) * 8388608)) >>> 0, a, r);\n      }\n    }\n\n    function a(e, t, a) {\n      var r = e(t, a),\n          n = 2 * (r >> 31) + 1,\n          o = r >>> 23 & 255,\n          s = 8388607 & r;\n      return 255 === o ? s ? NaN : n * (1 / 0) : 0 === o ? 1.401298464324817e-45 * n * s : n * Math.pow(2, o - 150) * (s + 8388608);\n    }\n\n    e.writeFloatLE = t.bind(null, writeUintLE), e.writeFloatBE = t.bind(null, writeUintBE), e.readFloatLE = a.bind(null, readUintLE), e.readFloatBE = a.bind(null, readUintBE);\n  }(), \"undefined\" != typeof Float64Array ? function () {\n    var t = new Float64Array([-0]),\n        a = new Uint8Array(t.buffer),\n        r = 128 === a[7];\n\n    function n(e, r, n) {\n      t[0] = e, r[n] = a[0], r[n + 1] = a[1], r[n + 2] = a[2], r[n + 3] = a[3], r[n + 4] = a[4], r[n + 5] = a[5], r[n + 6] = a[6], r[n + 7] = a[7];\n    }\n\n    function o(e, r, n) {\n      t[0] = e, r[n] = a[7], r[n + 1] = a[6], r[n + 2] = a[5], r[n + 3] = a[4], r[n + 4] = a[3], r[n + 5] = a[2], r[n + 6] = a[1], r[n + 7] = a[0];\n    }\n\n    function s(e, r) {\n      return a[0] = e[r], a[1] = e[r + 1], a[2] = e[r + 2], a[3] = e[r + 3], a[4] = e[r + 4], a[5] = e[r + 5], a[6] = e[r + 6], a[7] = e[r + 7], t[0];\n    }\n\n    function i(e, r) {\n      return a[7] = e[r], a[6] = e[r + 1], a[5] = e[r + 2], a[4] = e[r + 3], a[3] = e[r + 4], a[2] = e[r + 5], a[1] = e[r + 6], a[0] = e[r + 7], t[0];\n    }\n\n    e.writeDoubleLE = r ? n : o, e.writeDoubleBE = r ? o : n, e.readDoubleLE = r ? s : i, e.readDoubleBE = r ? i : s;\n  }() : function () {\n    function t(e, t, a, r, n, o) {\n      var s = r < 0 ? 1 : 0;\n      if (s && (r = -r), 0 === r) e(0, n, o + t), e(1 / r > 0 ? 0 : 2147483648, n, o + a);else if (isNaN(r)) e(0, n, o + t), e(2146959360, n, o + a);else if (r > 1.7976931348623157e308) e(0, n, o + t), e((s << 31 | 2146435072) >>> 0, n, o + a);else {\n        var i;\n        if (r < 2.2250738585072014e-308) e((i = r / 5e-324) >>> 0, n, o + t), e((s << 31 | i / 4294967296) >>> 0, n, o + a);else {\n          var p = Math.floor(Math.log(r) / Math.LN2);\n          1024 === p && (p = 1023), e(4503599627370496 * (i = r * Math.pow(2, -p)) >>> 0, n, o + t), e((s << 31 | p + 1023 << 20 | 1048576 * i & 1048575) >>> 0, n, o + a);\n        }\n      }\n    }\n\n    function a(e, t, a, r, n) {\n      var o = e(r, n + t),\n          s = e(r, n + a),\n          i = 2 * (s >> 31) + 1,\n          p = s >>> 20 & 2047,\n          m = 4294967296 * (1048575 & s) + o;\n      return 2047 === p ? m ? NaN : i * (1 / 0) : 0 === p ? 5e-324 * i * m : i * Math.pow(2, p - 1075) * (m + 4503599627370496);\n    }\n\n    e.writeDoubleLE = t.bind(null, writeUintLE, 0, 4), e.writeDoubleBE = t.bind(null, writeUintBE, 4, 0), e.readDoubleLE = a.bind(null, readUintLE, 0, 4), e.readDoubleBE = a.bind(null, readUintBE, 4, 0);\n  }(), e;\n}\n\nfunction writeUintLE(e, t, a) {\n  t[a] = 255 & e, t[a + 1] = e >>> 8 & 255, t[a + 2] = e >>> 16 & 255, t[a + 3] = e >>> 24;\n}\n\nfunction writeUintBE(e, t, a) {\n  t[a] = e >>> 24, t[a + 1] = e >>> 16 & 255, t[a + 2] = e >>> 8 & 255, t[a + 3] = 255 & e;\n}\n\nfunction readUintLE(e, t) {\n  return (e[t] | e[t + 1] << 8 | e[t + 2] << 16 | e[t + 3] << 24) >>> 0;\n}\n\nfunction readUintBE(e, t) {\n  return (e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3]) >>> 0;\n}\n\nvar inquire_1 = inquire;\n\nfunction inquire(moduleName) {\n  try {\n    var mod$$1 = eval(\"quire\".replace(/^/, \"re\"))(moduleName);\n    if (mod$$1 && (mod$$1.length || Object.keys(mod$$1).length)) return mod$$1;\n  } catch (e) {}\n\n  return null;\n}\n\nvar utf8_1 = createCommonjsModule(function (e, t) {\n  var a = t;\n  a.length = function (e) {\n    for (var t = 0, a = 0, r = 0; r < e.length; ++r) {\n      (a = e.charCodeAt(r)) < 128 ? t += 1 : a < 2048 ? t += 2 : 55296 == (64512 & a) && 56320 == (64512 & e.charCodeAt(r + 1)) ? (++r, t += 4) : t += 3;\n    }\n\n    return t;\n  }, a.read = function (e, t, a) {\n    if (a - t < 1) return \"\";\n\n    for (var r, n = null, o = [], s = 0; t < a;) {\n      (r = e[t++]) < 128 ? o[s++] = r : r > 191 && r < 224 ? o[s++] = (31 & r) << 6 | 63 & e[t++] : r > 239 && r < 365 ? (r = ((7 & r) << 18 | (63 & e[t++]) << 12 | (63 & e[t++]) << 6 | 63 & e[t++]) - 65536, o[s++] = 55296 + (r >> 10), o[s++] = 56320 + (1023 & r)) : o[s++] = (15 & r) << 12 | (63 & e[t++]) << 6 | 63 & e[t++], s > 8191 && ((n || (n = [])).push(String.fromCharCode.apply(String, o)), s = 0);\n    }\n\n    return n ? (s && n.push(String.fromCharCode.apply(String, o.slice(0, s))), n.join(\"\")) : String.fromCharCode.apply(String, o.slice(0, s));\n  }, a.write = function (e, t, a) {\n    for (var r, n, o = a, s = 0; s < e.length; ++s) {\n      (r = e.charCodeAt(s)) < 128 ? t[a++] = r : r < 2048 ? (t[a++] = r >> 6 | 192, t[a++] = 63 & r | 128) : 55296 == (64512 & r) && 56320 == (64512 & (n = e.charCodeAt(s + 1))) ? (r = 65536 + ((1023 & r) << 10) + (1023 & n), ++s, t[a++] = r >> 18 | 240, t[a++] = r >> 12 & 63 | 128, t[a++] = r >> 6 & 63 | 128, t[a++] = 63 & r | 128) : (t[a++] = r >> 12 | 224, t[a++] = r >> 6 & 63 | 128, t[a++] = 63 & r | 128);\n    }\n\n    return a - o;\n  };\n}),\n    pool_1 = pool;\n\nfunction pool(e, t, a) {\n  var r = a || 8192,\n      n = r >>> 1,\n      o = null,\n      s = r;\n  return function (a) {\n    if (a < 1 || a > n) return e(a);\n    s + a > r && (o = e(r), s = 0);\n    var i = t.call(o, s, s += a);\n    return 7 & s && (s = 1 + (7 | s)), i;\n  };\n}\n\nvar longbits = LongBits;\n\nfunction LongBits(e, t) {\n  this.lo = e >>> 0, this.hi = t >>> 0;\n}\n\nvar zero = LongBits.zero = new LongBits(0, 0);\nzero.toNumber = function () {\n  return 0;\n}, zero.zzEncode = zero.zzDecode = function () {\n  return this;\n}, zero.length = function () {\n  return 1;\n};\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\nLongBits.fromNumber = function (e) {\n  if (0 === e) return zero;\n  var t = e < 0;\n  t && (e = -e);\n  var a = e >>> 0,\n      r = (e - a) / 4294967296 >>> 0;\n  return t && (r = ~r >>> 0, a = ~a >>> 0, ++a > 4294967295 && (a = 0, ++r > 4294967295 && (r = 0))), new LongBits(a, r);\n}, LongBits.from = function (e) {\n  if (\"number\" == typeof e) return LongBits.fromNumber(e);\n\n  if (minimal.isString(e)) {\n    if (!minimal.Long) return LongBits.fromNumber(parseInt(e, 10));\n    e = minimal.Long.fromString(e);\n  }\n\n  return e.low || e.high ? new LongBits(e.low >>> 0, e.high >>> 0) : zero;\n}, LongBits.prototype.toNumber = function (e) {\n  if (!e && this.hi >>> 31) {\n    var t = 1 + ~this.lo >>> 0,\n        a = ~this.hi >>> 0;\n    return t || (a = a + 1 >>> 0), -(t + 4294967296 * a);\n  }\n\n  return this.lo + 4294967296 * this.hi;\n}, LongBits.prototype.toLong = function (e) {\n  return minimal.Long ? new minimal.Long(0 | this.lo, 0 | this.hi, Boolean(e)) : {\n    low: 0 | this.lo,\n    high: 0 | this.hi,\n    unsigned: Boolean(e)\n  };\n};\nvar charCodeAt = String.prototype.charCodeAt;\nLongBits.fromHash = function (e) {\n  return e === zeroHash ? zero : new LongBits((charCodeAt.call(e, 0) | charCodeAt.call(e, 1) << 8 | charCodeAt.call(e, 2) << 16 | charCodeAt.call(e, 3) << 24) >>> 0, (charCodeAt.call(e, 4) | charCodeAt.call(e, 5) << 8 | charCodeAt.call(e, 6) << 16 | charCodeAt.call(e, 7) << 24) >>> 0);\n}, LongBits.prototype.toHash = function () {\n  return String.fromCharCode(255 & this.lo, this.lo >>> 8 & 255, this.lo >>> 16 & 255, this.lo >>> 24, 255 & this.hi, this.hi >>> 8 & 255, this.hi >>> 16 & 255, this.hi >>> 24);\n}, LongBits.prototype.zzEncode = function () {\n  var e = this.hi >> 31;\n  return this.hi = ((this.hi << 1 | this.lo >>> 31) ^ e) >>> 0, this.lo = (this.lo << 1 ^ e) >>> 0, this;\n}, LongBits.prototype.zzDecode = function () {\n  var e = -(1 & this.lo);\n  return this.lo = ((this.lo >>> 1 | this.hi << 31) ^ e) >>> 0, this.hi = (this.hi >>> 1 ^ e) >>> 0, this;\n}, LongBits.prototype.length = function () {\n  var e = this.lo,\n      t = (this.lo >>> 28 | this.hi << 4) >>> 0,\n      a = this.hi >>> 24;\n  return 0 === a ? 0 === t ? e < 16384 ? e < 128 ? 1 : 2 : e < 2097152 ? 3 : 4 : t < 16384 ? t < 128 ? 5 : 6 : t < 2097152 ? 7 : 8 : a < 128 ? 9 : 10;\n};\nvar minimal = createCommonjsModule(function (e, t) {\n  var a = t;\n\n  function r(e, t, a) {\n    for (var r = Object.keys(t), n = 0; n < r.length; ++n) {\n      void 0 !== e[r[n]] && a || (e[r[n]] = t[r[n]]);\n    }\n\n    return e;\n  }\n\n  function n(e) {\n    function t(e, a) {\n      if (!(this instanceof t)) return new t(e, a);\n      Object.defineProperty(this, \"message\", {\n        get: function get() {\n          return e;\n        }\n      }), Error.captureStackTrace ? Error.captureStackTrace(this, t) : Object.defineProperty(this, \"stack\", {\n        value: new Error().stack || \"\"\n      }), a && r(this, a);\n    }\n\n    return (t.prototype = Object.create(Error.prototype)).constructor = t, Object.defineProperty(t.prototype, \"name\", {\n      get: function get() {\n        return e;\n      }\n    }), t.prototype.toString = function () {\n      return this.name + \": \" + this.message;\n    }, t;\n  }\n\n  a.asPromise = aspromise, a.base64 = base64_1, a.EventEmitter = eventemitter, a.float = float_1, a.inquire = inquire_1, a.utf8 = utf8_1, a.pool = pool_1, a.LongBits = longbits, a.emptyArray = Object.freeze ? Object.freeze([]) : [], a.emptyObject = Object.freeze ? Object.freeze({}) : {}, a.isNode = Boolean(commonjsGlobal.process && commonjsGlobal.process.versions && commonjsGlobal.process.versions.node), a.isInteger = Number.isInteger || function (e) {\n    return \"number\" == typeof e && isFinite(e) && Math.floor(e) === e;\n  }, a.isString = function (e) {\n    return \"string\" == typeof e || e instanceof String;\n  }, a.isObject = function (e) {\n    return e && \"object\" == typeof e;\n  }, a.isset = a.isSet = function (e, t) {\n    var a = e[t];\n    return !(null == a || !e.hasOwnProperty(t)) && (\"object\" != typeof a || (Array.isArray(a) ? a.length : Object.keys(a).length) > 0);\n  }, a.Buffer = function () {\n    try {\n      var e = a.inquire(\"buffer\").Buffer;\n      return e.prototype.utf8Write ? e : null;\n    } catch (e) {\n      return null;\n    }\n  }(), a._Buffer_from = null, a._Buffer_allocUnsafe = null, a.newBuffer = function (e) {\n    return \"number\" == typeof e ? a.Buffer ? a._Buffer_allocUnsafe(e) : new a.Array(e) : a.Buffer ? a._Buffer_from(e) : \"undefined\" == typeof Uint8Array ? e : new Uint8Array(e);\n  }, a.Array = \"undefined\" != typeof Uint8Array ? Uint8Array : Array, a.Long = commonjsGlobal.dcodeIO && commonjsGlobal.dcodeIO.Long || a.inquire(\"long\"), a.key2Re = /^true|false|0|1$/, a.key32Re = /^-?(?:0|[1-9][0-9]*)$/, a.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/, a.longToHash = function (e) {\n    return e ? a.LongBits.from(e).toHash() : a.LongBits.zeroHash;\n  }, a.longFromHash = function (e, t) {\n    var r = a.LongBits.fromHash(e);\n    return a.Long ? a.Long.fromBits(r.lo, r.hi, t) : r.toNumber(Boolean(t));\n  }, a.merge = r, a.lcFirst = function (e) {\n    return e.charAt(0).toLowerCase() + e.substring(1);\n  }, a.newError = n, a.ProtocolError = n(\"ProtocolError\"), a.oneOfGetter = function (e) {\n    for (var t = {}, a = 0; a < e.length; ++a) {\n      t[e[a]] = 1;\n    }\n\n    return function () {\n      for (var e = Object.keys(this), a = e.length - 1; a > -1; --a) {\n        if (1 === t[e[a]] && void 0 !== this[e[a]] && null !== this[e[a]]) return e[a];\n      }\n    };\n  }, a.oneOfSetter = function (e) {\n    return function (t) {\n      for (var a = 0; a < e.length; ++a) {\n        e[a] !== t && delete this[e[a]];\n      }\n    };\n  }, a.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: !0\n  }, a._configure = function () {\n    var e = a.Buffer;\n    e ? (a._Buffer_from = e.from !== Uint8Array.from && e.from || function (t, a) {\n      return new e(t, a);\n    }, a._Buffer_allocUnsafe = e.allocUnsafe || function (t) {\n      return new e(t);\n    }) : a._Buffer_from = a._Buffer_allocUnsafe = null;\n  };\n}),\n    writer = Writer,\n    BufferWriter,\n    LongBits$1 = minimal.LongBits,\n    base64 = minimal.base64,\n    utf8 = minimal.utf8;\n\nfunction Op(e, t, a) {\n  this.fn = e, this.len = t, this.next = void 0, this.val = a;\n}\n\nfunction noop() {}\n\nfunction State(e) {\n  this.head = e.head, this.tail = e.tail, this.len = e.len, this.next = e.states;\n}\n\nfunction Writer() {\n  this.len = 0, this.head = new Op(noop, 0, 0), this.tail = this.head, this.states = null;\n}\n\nfunction writeByte(e, t, a) {\n  t[a] = 255 & e;\n}\n\nfunction writeVarint32(e, t, a) {\n  for (; e > 127;) {\n    t[a++] = 127 & e | 128, e >>>= 7;\n  }\n\n  t[a] = e;\n}\n\nfunction VarintOp(e, t) {\n  this.len = e, this.next = void 0, this.val = t;\n}\n\nfunction writeVarint64(e, t, a) {\n  for (; e.hi;) {\n    t[a++] = 127 & e.lo | 128, e.lo = (e.lo >>> 7 | e.hi << 25) >>> 0, e.hi >>>= 7;\n  }\n\n  for (; e.lo > 127;) {\n    t[a++] = 127 & e.lo | 128, e.lo = e.lo >>> 7;\n  }\n\n  t[a++] = e.lo;\n}\n\nfunction writeFixed32(e, t, a) {\n  t[a] = 255 & e, t[a + 1] = e >>> 8 & 255, t[a + 2] = e >>> 16 & 255, t[a + 3] = e >>> 24;\n}\n\nWriter.create = minimal.Buffer ? function () {\n  return (Writer.create = function () {\n    return new BufferWriter();\n  })();\n} : function () {\n  return new Writer();\n}, Writer.alloc = function (e) {\n  return new minimal.Array(e);\n}, minimal.Array !== Array && (Writer.alloc = minimal.pool(Writer.alloc, minimal.Array.prototype.subarray)), Writer.prototype._push = function (e, t, a) {\n  return this.tail = this.tail.next = new Op(e, t, a), this.len += t, this;\n}, VarintOp.prototype = Object.create(Op.prototype), VarintOp.prototype.fn = writeVarint32, Writer.prototype.uint32 = function (e) {\n  return this.len += (this.tail = this.tail.next = new VarintOp((e >>>= 0) < 128 ? 1 : e < 16384 ? 2 : e < 2097152 ? 3 : e < 268435456 ? 4 : 5, e)).len, this;\n}, Writer.prototype.int32 = function (e) {\n  return e < 0 ? this._push(writeVarint64, 10, LongBits$1.fromNumber(e)) : this.uint32(e);\n}, Writer.prototype.sint32 = function (e) {\n  return this.uint32((e << 1 ^ e >> 31) >>> 0);\n}, Writer.prototype.uint64 = function (e) {\n  var t = LongBits$1.from(e);\n  return this._push(writeVarint64, t.length(), t);\n}, Writer.prototype.int64 = Writer.prototype.uint64, Writer.prototype.sint64 = function (e) {\n  var t = LongBits$1.from(e).zzEncode();\n  return this._push(writeVarint64, t.length(), t);\n}, Writer.prototype.bool = function (e) {\n  return this._push(writeByte, 1, e ? 1 : 0);\n}, Writer.prototype.fixed32 = function (e) {\n  return this._push(writeFixed32, 4, e >>> 0);\n}, Writer.prototype.sfixed32 = Writer.prototype.fixed32, Writer.prototype.fixed64 = function (e) {\n  var t = LongBits$1.from(e);\n  return this._push(writeFixed32, 4, t.lo)._push(writeFixed32, 4, t.hi);\n}, Writer.prototype.sfixed64 = Writer.prototype.fixed64, Writer.prototype.float = function (e) {\n  return this._push(minimal.float.writeFloatLE, 4, e);\n}, Writer.prototype.double = function (e) {\n  return this._push(minimal.float.writeDoubleLE, 8, e);\n};\nvar writeBytes = minimal.Array.prototype.set ? function (e, t, a) {\n  t.set(e, a);\n} : function (e, t, a) {\n  for (var r = 0; r < e.length; ++r) {\n    t[a + r] = e[r];\n  }\n};\nWriter.prototype.bytes = function (e) {\n  var t = e.length >>> 0;\n  if (!t) return this._push(writeByte, 1, 0);\n\n  if (minimal.isString(e)) {\n    var a = Writer.alloc(t = base64.length(e));\n    base64.decode(e, a, 0), e = a;\n  }\n\n  return this.uint32(t)._push(writeBytes, t, e);\n}, Writer.prototype.string = function (e) {\n  var t = utf8.length(e);\n  return t ? this.uint32(t)._push(utf8.write, t, e) : this._push(writeByte, 1, 0);\n}, Writer.prototype.fork = function () {\n  return this.states = new State(this), this.head = this.tail = new Op(noop, 0, 0), this.len = 0, this;\n}, Writer.prototype.reset = function () {\n  return this.states ? (this.head = this.states.head, this.tail = this.states.tail, this.len = this.states.len, this.states = this.states.next) : (this.head = this.tail = new Op(noop, 0, 0), this.len = 0), this;\n}, Writer.prototype.ldelim = function () {\n  var e = this.head,\n      t = this.tail,\n      a = this.len;\n  return this.reset().uint32(a), a && (this.tail.next = e.next, this.tail = t, this.len += a), this;\n}, Writer.prototype.finish = function () {\n  for (var e = this.head.next, t = this.constructor.alloc(this.len), a = 0; e;) {\n    e.fn(e.val, t, a), a += e.len, e = e.next;\n  }\n\n  return t;\n}, Writer._configure = function (e) {\n  BufferWriter = e;\n};\nvar writer_buffer = BufferWriter$1;\n(BufferWriter$1.prototype = Object.create(writer.prototype)).constructor = BufferWriter$1;\nvar Buffer = minimal.Buffer;\n\nfunction BufferWriter$1() {\n  writer.call(this);\n}\n\nBufferWriter$1.alloc = function (e) {\n  return (BufferWriter$1.alloc = minimal._Buffer_allocUnsafe)(e);\n};\n\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && \"set\" === Buffer.prototype.set.name ? function (e, t, a) {\n  t.set(e, a);\n} : function (e, t, a) {\n  if (e.copy) e.copy(t, a, 0, e.length);else for (var r = 0; r < e.length;) {\n    t[a++] = e[r++];\n  }\n};\n\nfunction writeStringBuffer(e, t, a) {\n  e.length < 40 ? minimal.utf8.write(e, t, a) : t.utf8Write(e, a);\n}\n\nBufferWriter$1.prototype.bytes = function (e) {\n  minimal.isString(e) && (e = minimal._Buffer_from(e, \"base64\"));\n  var t = e.length >>> 0;\n  return this.uint32(t), t && this._push(writeBytesBuffer, t, e), this;\n}, BufferWriter$1.prototype.string = function (e) {\n  var t = Buffer.byteLength(e);\n  return this.uint32(t), t && this._push(writeStringBuffer, t, e), this;\n};\nvar reader = Reader,\n    BufferReader,\n    LongBits$2 = minimal.LongBits,\n    utf8$1 = minimal.utf8;\n\nfunction indexOutOfRange(e, t) {\n  return RangeError(\"index out of range: \" + e.pos + \" + \" + (t || 1) + \" > \" + e.len);\n}\n\nfunction Reader(e) {\n  this.buf = e, this.pos = 0, this.len = e.length;\n}\n\nvar create_array = \"undefined\" != typeof Uint8Array ? function (e) {\n  if (e instanceof Uint8Array || Array.isArray(e)) return new Reader(e);\n  throw Error(\"illegal buffer\");\n} : function (e) {\n  if (Array.isArray(e)) return new Reader(e);\n  throw Error(\"illegal buffer\");\n};\n\nfunction readLongVarint() {\n  var e = new LongBits$2(0, 0),\n      t = 0;\n\n  if (!(this.len - this.pos > 4)) {\n    for (; t < 3; ++t) {\n      if (this.pos >= this.len) throw indexOutOfRange(this);\n      if (e.lo = (e.lo | (127 & this.buf[this.pos]) << 7 * t) >>> 0, this.buf[this.pos++] < 128) return e;\n    }\n\n    return e.lo = (e.lo | (127 & this.buf[this.pos++]) << 7 * t) >>> 0, e;\n  }\n\n  for (; t < 4; ++t) {\n    if (e.lo = (e.lo | (127 & this.buf[this.pos]) << 7 * t) >>> 0, this.buf[this.pos++] < 128) return e;\n  }\n\n  if (e.lo = (e.lo | (127 & this.buf[this.pos]) << 28) >>> 0, e.hi = (e.hi | (127 & this.buf[this.pos]) >> 4) >>> 0, this.buf[this.pos++] < 128) return e;\n\n  if (t = 0, this.len - this.pos > 4) {\n    for (; t < 5; ++t) {\n      if (e.hi = (e.hi | (127 & this.buf[this.pos]) << 7 * t + 3) >>> 0, this.buf[this.pos++] < 128) return e;\n    }\n  } else for (; t < 5; ++t) {\n    if (this.pos >= this.len) throw indexOutOfRange(this);\n    if (e.hi = (e.hi | (127 & this.buf[this.pos]) << 7 * t + 3) >>> 0, this.buf[this.pos++] < 128) return e;\n  }\n\n  throw Error(\"invalid varint encoding\");\n}\n\nfunction readFixed32_end(e, t) {\n  return (e[t - 4] | e[t - 3] << 8 | e[t - 2] << 16 | e[t - 1] << 24) >>> 0;\n}\n\nfunction readFixed64() {\n  if (this.pos + 8 > this.len) throw indexOutOfRange(this, 8);\n  return new LongBits$2(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\nReader.create = minimal.Buffer ? function (e) {\n  return (Reader.create = function (e) {\n    return minimal.Buffer.isBuffer(e) ? new BufferReader(e) : create_array(e);\n  })(e);\n} : create_array, Reader.prototype._slice = minimal.Array.prototype.subarray || minimal.Array.prototype.slice, Reader.prototype.uint32 = function () {\n  var e = 4294967295;\n  return function () {\n    if (e = (127 & this.buf[this.pos]) >>> 0, this.buf[this.pos++] < 128) return e;\n    if (e = (e | (127 & this.buf[this.pos]) << 7) >>> 0, this.buf[this.pos++] < 128) return e;\n    if (e = (e | (127 & this.buf[this.pos]) << 14) >>> 0, this.buf[this.pos++] < 128) return e;\n    if (e = (e | (127 & this.buf[this.pos]) << 21) >>> 0, this.buf[this.pos++] < 128) return e;\n    if (e = (e | (15 & this.buf[this.pos]) << 28) >>> 0, this.buf[this.pos++] < 128) return e;\n    if ((this.pos += 5) > this.len) throw this.pos = this.len, indexOutOfRange(this, 10);\n    return e;\n  };\n}(), Reader.prototype.int32 = function () {\n  return 0 | this.uint32();\n}, Reader.prototype.sint32 = function () {\n  var e = this.uint32();\n  return e >>> 1 ^ -(1 & e) | 0;\n}, Reader.prototype.bool = function () {\n  return 0 !== this.uint32();\n}, Reader.prototype.fixed32 = function () {\n  if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);\n  return readFixed32_end(this.buf, this.pos += 4);\n}, Reader.prototype.sfixed32 = function () {\n  if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);\n  return 0 | readFixed32_end(this.buf, this.pos += 4);\n}, Reader.prototype.float = function () {\n  if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);\n  var e = minimal.float.readFloatLE(this.buf, this.pos);\n  return this.pos += 4, e;\n}, Reader.prototype.double = function () {\n  if (this.pos + 8 > this.len) throw indexOutOfRange(this, 4);\n  var e = minimal.float.readDoubleLE(this.buf, this.pos);\n  return this.pos += 8, e;\n}, Reader.prototype.bytes = function () {\n  var e = this.uint32(),\n      t = this.pos,\n      a = this.pos + e;\n  if (a > this.len) throw indexOutOfRange(this, e);\n  return this.pos += e, Array.isArray(this.buf) ? this.buf.slice(t, a) : t === a ? new this.buf.constructor(0) : this._slice.call(this.buf, t, a);\n}, Reader.prototype.string = function () {\n  var e = this.bytes();\n  return utf8$1.read(e, 0, e.length);\n}, Reader.prototype.skip = function (e) {\n  if (\"number\" == typeof e) {\n    if (this.pos + e > this.len) throw indexOutOfRange(this, e);\n    this.pos += e;\n  } else do {\n    if (this.pos >= this.len) throw indexOutOfRange(this);\n  } while (128 & this.buf[this.pos++]);\n\n  return this;\n}, Reader.prototype.skipType = function (e) {\n  switch (e) {\n    case 0:\n      this.skip();\n      break;\n\n    case 1:\n      this.skip(8);\n      break;\n\n    case 2:\n      this.skip(this.uint32());\n      break;\n\n    case 3:\n      for (;;) {\n        if (4 == (e = 7 & this.uint32())) break;\n        this.skipType(e);\n      }\n\n      break;\n\n    case 5:\n      this.skip(4);\n      break;\n\n    default:\n      throw Error(\"invalid wire type \" + e + \" at offset \" + this.pos);\n  }\n\n  return this;\n}, Reader._configure = function (e) {\n  BufferReader = e;\n  var t = minimal.Long ? \"toLong\" : \"toNumber\";\n  minimal.merge(Reader.prototype, {\n    int64: function int64() {\n      return readLongVarint.call(this)[t](!1);\n    },\n    uint64: function uint64() {\n      return readLongVarint.call(this)[t](!0);\n    },\n    sint64: function sint64() {\n      return readLongVarint.call(this).zzDecode()[t](!1);\n    },\n    fixed64: function fixed64() {\n      return readFixed64.call(this)[t](!0);\n    },\n    sfixed64: function sfixed64() {\n      return readFixed64.call(this)[t](!1);\n    }\n  });\n};\nvar reader_buffer = BufferReader$1;\n\nfunction BufferReader$1(e) {\n  reader.call(this, e);\n}\n\n(BufferReader$1.prototype = Object.create(reader.prototype)).constructor = BufferReader$1, minimal.Buffer && (BufferReader$1.prototype._slice = minimal.Buffer.prototype.slice), BufferReader$1.prototype.string = function () {\n  var e = this.uint32();\n  return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + e, this.len));\n};\nvar service = Service;\n\nfunction Service(e, t, a) {\n  if (\"function\" != typeof e) throw TypeError(\"rpcImpl must be a function\");\n  minimal.EventEmitter.call(this), this.rpcImpl = e, this.requestDelimited = Boolean(t), this.responseDelimited = Boolean(a);\n}\n\n(Service.prototype = Object.create(minimal.EventEmitter.prototype)).constructor = Service, Service.prototype.rpcCall = function e(t, a, r, n, o) {\n  if (!n) throw TypeError(\"request must be specified\");\n  var s = this;\n  if (!o) return minimal.asPromise(e, s, t, a, r, n);\n  if (s.rpcImpl) try {\n    return s.rpcImpl(t, a[s.requestDelimited ? \"encodeDelimited\" : \"encode\"](n).finish(), function (e, a) {\n      if (e) return s.emit(\"error\", e, t), o(e);\n\n      if (null !== a) {\n        if (!(a instanceof r)) try {\n          a = r[s.responseDelimited ? \"decodeDelimited\" : \"decode\"](a);\n        } catch (e) {\n          return s.emit(\"error\", e, t), o(e);\n        }\n        return s.emit(\"data\", a, t), o(null, a);\n      }\n\n      s.end(!0);\n    });\n  } catch (e) {\n    return s.emit(\"error\", e, t), void setTimeout(function () {\n      o(e);\n    }, 0);\n  } else setTimeout(function () {\n    o(Error(\"already ended\"));\n  }, 0);\n}, Service.prototype.end = function (e) {\n  return this.rpcImpl && (e || this.rpcImpl(null, null, null), this.rpcImpl = null, this.emit(\"end\").off()), this;\n};\nvar rpc_1 = createCommonjsModule(function (e, t) {\n  t.Service = service;\n}),\n    roots = {},\n    indexMinimal = createCommonjsModule(function (e, t) {\n  var a = t;\n\n  function r() {\n    a.Reader._configure(a.BufferReader), a.util._configure();\n  }\n\n  a.build = \"minimal\", a.Writer = writer, a.BufferWriter = writer_buffer, a.Reader = reader, a.BufferReader = reader_buffer, a.util = minimal, a.rpc = rpc_1, a.roots = roots, a.configure = r, a.Writer._configure(a.BufferWriter), r();\n}),\n    minimal$1 = indexMinimal,\n    minimal_1 = minimal$1.roots,\n    minimal_2 = minimal$1.Reader,\n    minimal_3 = minimal$1.util,\n    $Reader = minimal$1.Reader,\n    $util = minimal$1.util,\n    $root = minimal$1.roots.default || (minimal$1.roots.default = {});\n\n$root.tensorflow = function () {\n  var e,\n      t,\n      a = {};\n  return a.Any = function () {\n    function e(e) {\n      if (e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n        null != e[t[a]] && (this[t[a]] = e[t[a]]);\n      }\n    }\n\n    return e.prototype.typeUrl = \"\", e.prototype.value = $util.newBuffer([]), e.decode = function (e, t) {\n      e instanceof $Reader || (e = $Reader.create(e));\n\n      for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.Any(); e.pos < a;) {\n        var n = e.uint32();\n\n        switch (n >>> 3) {\n          case 1:\n            r.typeUrl = e.string();\n            break;\n\n          case 2:\n            r.value = e.bytes();\n            break;\n\n          default:\n            e.skipType(7 & n);\n        }\n      }\n\n      return r;\n    }, e;\n  }(), a.DataType = (e = {}, (t = Object.create(e))[e[0] = \"DT_INVALID\"] = 0, t[e[1] = \"DT_FLOAT\"] = 1, t[e[2] = \"DT_DOUBLE\"] = 2, t[e[3] = \"DT_INT32\"] = 3, t[e[4] = \"DT_UINT8\"] = 4, t[e[5] = \"DT_INT16\"] = 5, t[e[6] = \"DT_INT8\"] = 6, t[e[7] = \"DT_STRING\"] = 7, t[e[8] = \"DT_COMPLEX64\"] = 8, t[e[9] = \"DT_INT64\"] = 9, t[e[10] = \"DT_BOOL\"] = 10, t[e[11] = \"DT_QINT8\"] = 11, t[e[12] = \"DT_QUINT8\"] = 12, t[e[13] = \"DT_QINT32\"] = 13, t[e[14] = \"DT_BFLOAT16\"] = 14, t[e[101] = \"DT_FLOAT_REF\"] = 101, t[e[102] = \"DT_DOUBLE_REF\"] = 102, t[e[103] = \"DT_INT32_REF\"] = 103, t[e[104] = \"DT_UINT8_REF\"] = 104, t[e[105] = \"DT_INT16_REF\"] = 105, t[e[106] = \"DT_INT8_REF\"] = 106, t[e[107] = \"DT_STRING_REF\"] = 107, t[e[108] = \"DT_COMPLEX64_REF\"] = 108, t[e[109] = \"DT_INT64_REF\"] = 109, t[e[110] = \"DT_BOOL_REF\"] = 110, t[e[111] = \"DT_QINT8_REF\"] = 111, t[e[112] = \"DT_QUINT8_REF\"] = 112, t[e[113] = \"DT_QINT32_REF\"] = 113, t[e[114] = \"DT_BFLOAT16_REF\"] = 114, t), a.TensorShape = function () {\n    function e(e) {\n      if (this.dim = [], e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n        null != e[t[a]] && (this[t[a]] = e[t[a]]);\n      }\n    }\n\n    return e.prototype.dim = $util.emptyArray, e.prototype.unknownRank = !1, e.decode = function (e, t) {\n      e instanceof $Reader || (e = $Reader.create(e));\n\n      for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.TensorShape(); e.pos < a;) {\n        var n = e.uint32();\n\n        switch (n >>> 3) {\n          case 2:\n            r.dim && r.dim.length || (r.dim = []), r.dim.push($root.tensorflow.TensorShape.Dim.decode(e, e.uint32()));\n            break;\n\n          case 3:\n            r.unknownRank = e.bool();\n            break;\n\n          default:\n            e.skipType(7 & n);\n        }\n      }\n\n      return r;\n    }, e.Dim = function () {\n      function e(e) {\n        if (e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n          null != e[t[a]] && (this[t[a]] = e[t[a]]);\n        }\n      }\n\n      return e.prototype.size = $util.Long ? $util.Long.fromBits(0, 0, !1) : 0, e.prototype.name = \"\", e.decode = function (e, t) {\n        e instanceof $Reader || (e = $Reader.create(e));\n\n        for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.TensorShape.Dim(); e.pos < a;) {\n          var n = e.uint32();\n\n          switch (n >>> 3) {\n            case 1:\n              r.size = e.int64();\n              break;\n\n            case 2:\n              r.name = e.string();\n              break;\n\n            default:\n              e.skipType(7 & n);\n          }\n        }\n\n        return r;\n      }, e;\n    }(), e;\n  }(), a.Tensor = function () {\n    function e(e) {\n      if (this.floatVal = [], this.doubleVal = [], this.intVal = [], this.stringVal = [], this.scomplexVal = [], this.int64Val = [], this.boolVal = [], this.uint32Val = [], this.uint64Val = [], e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n        null != e[t[a]] && (this[t[a]] = e[t[a]]);\n      }\n    }\n\n    return e.prototype.dtype = 0, e.prototype.tensorShape = null, e.prototype.versionNumber = 0, e.prototype.tensorContent = $util.newBuffer([]), e.prototype.floatVal = $util.emptyArray, e.prototype.doubleVal = $util.emptyArray, e.prototype.intVal = $util.emptyArray, e.prototype.stringVal = $util.emptyArray, e.prototype.scomplexVal = $util.emptyArray, e.prototype.int64Val = $util.emptyArray, e.prototype.boolVal = $util.emptyArray, e.prototype.uint32Val = $util.emptyArray, e.prototype.uint64Val = $util.emptyArray, e.decode = function (e, t) {\n      e instanceof $Reader || (e = $Reader.create(e));\n\n      for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.Tensor(); e.pos < a;) {\n        var n = e.uint32();\n\n        switch (n >>> 3) {\n          case 1:\n            r.dtype = e.int32();\n            break;\n\n          case 2:\n            r.tensorShape = $root.tensorflow.TensorShape.decode(e, e.uint32());\n            break;\n\n          case 3:\n            r.versionNumber = e.int32();\n            break;\n\n          case 4:\n            r.tensorContent = e.bytes();\n            break;\n\n          case 5:\n            if (r.floatVal && r.floatVal.length || (r.floatVal = []), 2 == (7 & n)) for (var o = e.uint32() + e.pos; e.pos < o;) {\n              r.floatVal.push(e.float());\n            } else r.floatVal.push(e.float());\n            break;\n\n          case 6:\n            if (r.doubleVal && r.doubleVal.length || (r.doubleVal = []), 2 == (7 & n)) for (o = e.uint32() + e.pos; e.pos < o;) {\n              r.doubleVal.push(e.double());\n            } else r.doubleVal.push(e.double());\n            break;\n\n          case 7:\n            if (r.intVal && r.intVal.length || (r.intVal = []), 2 == (7 & n)) for (o = e.uint32() + e.pos; e.pos < o;) {\n              r.intVal.push(e.int32());\n            } else r.intVal.push(e.int32());\n            break;\n\n          case 8:\n            r.stringVal && r.stringVal.length || (r.stringVal = []), r.stringVal.push(e.bytes());\n            break;\n\n          case 9:\n            if (r.scomplexVal && r.scomplexVal.length || (r.scomplexVal = []), 2 == (7 & n)) for (o = e.uint32() + e.pos; e.pos < o;) {\n              r.scomplexVal.push(e.float());\n            } else r.scomplexVal.push(e.float());\n            break;\n\n          case 10:\n            if (r.int64Val && r.int64Val.length || (r.int64Val = []), 2 == (7 & n)) for (o = e.uint32() + e.pos; e.pos < o;) {\n              r.int64Val.push(e.int64());\n            } else r.int64Val.push(e.int64());\n            break;\n\n          case 11:\n            if (r.boolVal && r.boolVal.length || (r.boolVal = []), 2 == (7 & n)) for (o = e.uint32() + e.pos; e.pos < o;) {\n              r.boolVal.push(e.bool());\n            } else r.boolVal.push(e.bool());\n            break;\n\n          case 16:\n            if (r.uint32Val && r.uint32Val.length || (r.uint32Val = []), 2 == (7 & n)) for (o = e.uint32() + e.pos; e.pos < o;) {\n              r.uint32Val.push(e.uint32());\n            } else r.uint32Val.push(e.uint32());\n            break;\n\n          case 17:\n            if (r.uint64Val && r.uint64Val.length || (r.uint64Val = []), 2 == (7 & n)) for (o = e.uint32() + e.pos; e.pos < o;) {\n              r.uint64Val.push(e.uint64());\n            } else r.uint64Val.push(e.uint64());\n            break;\n\n          default:\n            e.skipType(7 & n);\n        }\n      }\n\n      return r;\n    }, e;\n  }(), a.AttrValue = function () {\n    function e(e) {\n      if (e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n        null != e[t[a]] && (this[t[a]] = e[t[a]]);\n      }\n    }\n\n    var t;\n    return e.prototype.list = null, e.prototype.s = $util.newBuffer([]), e.prototype.i = $util.Long ? $util.Long.fromBits(0, 0, !1) : 0, e.prototype.f = 0, e.prototype.b = !1, e.prototype.type = 0, e.prototype.shape = null, e.prototype.tensor = null, e.prototype.placeholder = \"\", e.prototype.func = null, Object.defineProperty(e.prototype, \"value\", {\n      get: $util.oneOfGetter(t = [\"list\", \"s\", \"i\", \"f\", \"b\", \"type\", \"shape\", \"tensor\", \"placeholder\", \"func\"]),\n      set: $util.oneOfSetter(t)\n    }), e.decode = function (e, t) {\n      e instanceof $Reader || (e = $Reader.create(e));\n\n      for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.AttrValue(); e.pos < a;) {\n        var n = e.uint32();\n\n        switch (n >>> 3) {\n          case 1:\n            r.list = $root.tensorflow.AttrValue.ListValue.decode(e, e.uint32());\n            break;\n\n          case 2:\n            r.s = e.bytes();\n            break;\n\n          case 3:\n            r.i = e.int64();\n            break;\n\n          case 4:\n            r.f = e.float();\n            break;\n\n          case 5:\n            r.b = e.bool();\n            break;\n\n          case 6:\n            r.type = e.int32();\n            break;\n\n          case 7:\n            r.shape = $root.tensorflow.TensorShape.decode(e, e.uint32());\n            break;\n\n          case 8:\n            r.tensor = $root.tensorflow.Tensor.decode(e, e.uint32());\n            break;\n\n          case 9:\n            r.placeholder = e.string();\n            break;\n\n          case 10:\n            r.func = $root.tensorflow.NameAttrList.decode(e, e.uint32());\n            break;\n\n          default:\n            e.skipType(7 & n);\n        }\n      }\n\n      return r;\n    }, e.ListValue = function () {\n      function e(e) {\n        if (this.s = [], this.i = [], this.f = [], this.b = [], this.type = [], this.shape = [], this.tensor = [], this.func = [], e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n          null != e[t[a]] && (this[t[a]] = e[t[a]]);\n        }\n      }\n\n      return e.prototype.s = $util.emptyArray, e.prototype.i = $util.emptyArray, e.prototype.f = $util.emptyArray, e.prototype.b = $util.emptyArray, e.prototype.type = $util.emptyArray, e.prototype.shape = $util.emptyArray, e.prototype.tensor = $util.emptyArray, e.prototype.func = $util.emptyArray, e.decode = function (e, t) {\n        e instanceof $Reader || (e = $Reader.create(e));\n\n        for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.AttrValue.ListValue(); e.pos < a;) {\n          var n = e.uint32();\n\n          switch (n >>> 3) {\n            case 2:\n              r.s && r.s.length || (r.s = []), r.s.push(e.bytes());\n              break;\n\n            case 3:\n              if (r.i && r.i.length || (r.i = []), 2 == (7 & n)) for (var o = e.uint32() + e.pos; e.pos < o;) {\n                r.i.push(e.int64());\n              } else r.i.push(e.int64());\n              break;\n\n            case 4:\n              if (r.f && r.f.length || (r.f = []), 2 == (7 & n)) for (o = e.uint32() + e.pos; e.pos < o;) {\n                r.f.push(e.float());\n              } else r.f.push(e.float());\n              break;\n\n            case 5:\n              if (r.b && r.b.length || (r.b = []), 2 == (7 & n)) for (o = e.uint32() + e.pos; e.pos < o;) {\n                r.b.push(e.bool());\n              } else r.b.push(e.bool());\n              break;\n\n            case 6:\n              if (r.type && r.type.length || (r.type = []), 2 == (7 & n)) for (o = e.uint32() + e.pos; e.pos < o;) {\n                r.type.push(e.int32());\n              } else r.type.push(e.int32());\n              break;\n\n            case 7:\n              r.shape && r.shape.length || (r.shape = []), r.shape.push($root.tensorflow.TensorShape.decode(e, e.uint32()));\n              break;\n\n            case 8:\n              r.tensor && r.tensor.length || (r.tensor = []), r.tensor.push($root.tensorflow.Tensor.decode(e, e.uint32()));\n              break;\n\n            case 9:\n              r.func && r.func.length || (r.func = []), r.func.push($root.tensorflow.NameAttrList.decode(e, e.uint32()));\n              break;\n\n            default:\n              e.skipType(7 & n);\n          }\n        }\n\n        return r;\n      }, e;\n    }(), e;\n  }(), a.NameAttrList = function () {\n    function e(e) {\n      if (this.attr = {}, e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n        null != e[t[a]] && (this[t[a]] = e[t[a]]);\n      }\n    }\n\n    return e.prototype.name = \"\", e.prototype.attr = $util.emptyObject, e.decode = function (e, t) {\n      e instanceof $Reader || (e = $Reader.create(e));\n\n      for (var a, r = void 0 === t ? e.len : e.pos + t, n = new $root.tensorflow.NameAttrList(); e.pos < r;) {\n        var o = e.uint32();\n\n        switch (o >>> 3) {\n          case 1:\n            n.name = e.string();\n            break;\n\n          case 2:\n            e.skip().pos++, n.attr === $util.emptyObject && (n.attr = {}), a = e.string(), e.pos++, n.attr[a] = $root.tensorflow.AttrValue.decode(e, e.uint32());\n            break;\n\n          default:\n            e.skipType(7 & o);\n        }\n      }\n\n      return n;\n    }, e;\n  }(), a.NodeDef = function () {\n    function e(e) {\n      if (this.input = [], this.attr = {}, e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n        null != e[t[a]] && (this[t[a]] = e[t[a]]);\n      }\n    }\n\n    return e.prototype.name = \"\", e.prototype.op = \"\", e.prototype.input = $util.emptyArray, e.prototype.device = \"\", e.prototype.attr = $util.emptyObject, e.decode = function (e, t) {\n      e instanceof $Reader || (e = $Reader.create(e));\n\n      for (var a, r = void 0 === t ? e.len : e.pos + t, n = new $root.tensorflow.NodeDef(); e.pos < r;) {\n        var o = e.uint32();\n\n        switch (o >>> 3) {\n          case 1:\n            n.name = e.string();\n            break;\n\n          case 2:\n            n.op = e.string();\n            break;\n\n          case 3:\n            n.input && n.input.length || (n.input = []), n.input.push(e.string());\n            break;\n\n          case 4:\n            n.device = e.string();\n            break;\n\n          case 5:\n            e.skip().pos++, n.attr === $util.emptyObject && (n.attr = {}), a = e.string(), e.pos++, n.attr[a] = $root.tensorflow.AttrValue.decode(e, e.uint32());\n            break;\n\n          default:\n            e.skipType(7 & o);\n        }\n      }\n\n      return n;\n    }, e;\n  }(), a.VersionDef = function () {\n    function e(e) {\n      if (this.badConsumers = [], e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n        null != e[t[a]] && (this[t[a]] = e[t[a]]);\n      }\n    }\n\n    return e.prototype.producer = 0, e.prototype.minConsumer = 0, e.prototype.badConsumers = $util.emptyArray, e.decode = function (e, t) {\n      e instanceof $Reader || (e = $Reader.create(e));\n\n      for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.VersionDef(); e.pos < a;) {\n        var n = e.uint32();\n\n        switch (n >>> 3) {\n          case 1:\n            r.producer = e.int32();\n            break;\n\n          case 2:\n            r.minConsumer = e.int32();\n            break;\n\n          case 3:\n            if (r.badConsumers && r.badConsumers.length || (r.badConsumers = []), 2 == (7 & n)) for (var o = e.uint32() + e.pos; e.pos < o;) {\n              r.badConsumers.push(e.int32());\n            } else r.badConsumers.push(e.int32());\n            break;\n\n          default:\n            e.skipType(7 & n);\n        }\n      }\n\n      return r;\n    }, e;\n  }(), a.GraphDef = function () {\n    function e(e) {\n      if (this.node = [], e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n        null != e[t[a]] && (this[t[a]] = e[t[a]]);\n      }\n    }\n\n    return e.prototype.node = $util.emptyArray, e.prototype.versions = null, e.prototype.library = null, e.decode = function (e, t) {\n      e instanceof $Reader || (e = $Reader.create(e));\n\n      for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.GraphDef(); e.pos < a;) {\n        var n = e.uint32();\n\n        switch (n >>> 3) {\n          case 1:\n            r.node && r.node.length || (r.node = []), r.node.push($root.tensorflow.NodeDef.decode(e, e.uint32()));\n            break;\n\n          case 4:\n            r.versions = $root.tensorflow.VersionDef.decode(e, e.uint32());\n            break;\n\n          case 2:\n            r.library = $root.tensorflow.FunctionDefLibrary.decode(e, e.uint32());\n            break;\n\n          default:\n            e.skipType(7 & n);\n        }\n      }\n\n      return r;\n    }, e;\n  }(), a.CollectionDef = function () {\n    function e(e) {\n      if (e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n        null != e[t[a]] && (this[t[a]] = e[t[a]]);\n      }\n    }\n\n    var t;\n    return e.prototype.nodeList = null, e.prototype.bytesList = null, e.prototype.int64List = null, e.prototype.floatList = null, e.prototype.anyList = null, Object.defineProperty(e.prototype, \"kind\", {\n      get: $util.oneOfGetter(t = [\"nodeList\", \"bytesList\", \"int64List\", \"floatList\", \"anyList\"]),\n      set: $util.oneOfSetter(t)\n    }), e.decode = function (e, t) {\n      e instanceof $Reader || (e = $Reader.create(e));\n\n      for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.CollectionDef(); e.pos < a;) {\n        var n = e.uint32();\n\n        switch (n >>> 3) {\n          case 1:\n            r.nodeList = $root.tensorflow.CollectionDef.NodeList.decode(e, e.uint32());\n            break;\n\n          case 2:\n            r.bytesList = $root.tensorflow.CollectionDef.BytesList.decode(e, e.uint32());\n            break;\n\n          case 3:\n            r.int64List = $root.tensorflow.CollectionDef.Int64List.decode(e, e.uint32());\n            break;\n\n          case 4:\n            r.floatList = $root.tensorflow.CollectionDef.FloatList.decode(e, e.uint32());\n            break;\n\n          case 5:\n            r.anyList = $root.tensorflow.CollectionDef.AnyList.decode(e, e.uint32());\n            break;\n\n          default:\n            e.skipType(7 & n);\n        }\n      }\n\n      return r;\n    }, e.NodeList = function () {\n      function e(e) {\n        if (this.value = [], e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n          null != e[t[a]] && (this[t[a]] = e[t[a]]);\n        }\n      }\n\n      return e.prototype.value = $util.emptyArray, e.decode = function (e, t) {\n        e instanceof $Reader || (e = $Reader.create(e));\n\n        for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.CollectionDef.NodeList(); e.pos < a;) {\n          var n = e.uint32();\n\n          switch (n >>> 3) {\n            case 1:\n              r.value && r.value.length || (r.value = []), r.value.push(e.string());\n              break;\n\n            default:\n              e.skipType(7 & n);\n          }\n        }\n\n        return r;\n      }, e;\n    }(), e.BytesList = function () {\n      function e(e) {\n        if (this.value = [], e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n          null != e[t[a]] && (this[t[a]] = e[t[a]]);\n        }\n      }\n\n      return e.prototype.value = $util.emptyArray, e.decode = function (e, t) {\n        e instanceof $Reader || (e = $Reader.create(e));\n\n        for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.CollectionDef.BytesList(); e.pos < a;) {\n          var n = e.uint32();\n\n          switch (n >>> 3) {\n            case 1:\n              r.value && r.value.length || (r.value = []), r.value.push(e.bytes());\n              break;\n\n            default:\n              e.skipType(7 & n);\n          }\n        }\n\n        return r;\n      }, e;\n    }(), e.Int64List = function () {\n      function e(e) {\n        if (this.value = [], e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n          null != e[t[a]] && (this[t[a]] = e[t[a]]);\n        }\n      }\n\n      return e.prototype.value = $util.emptyArray, e.decode = function (e, t) {\n        e instanceof $Reader || (e = $Reader.create(e));\n\n        for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.CollectionDef.Int64List(); e.pos < a;) {\n          var n = e.uint32();\n\n          switch (n >>> 3) {\n            case 1:\n              if (r.value && r.value.length || (r.value = []), 2 == (7 & n)) for (var o = e.uint32() + e.pos; e.pos < o;) {\n                r.value.push(e.int64());\n              } else r.value.push(e.int64());\n              break;\n\n            default:\n              e.skipType(7 & n);\n          }\n        }\n\n        return r;\n      }, e;\n    }(), e.FloatList = function () {\n      function e(e) {\n        if (this.value = [], e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n          null != e[t[a]] && (this[t[a]] = e[t[a]]);\n        }\n      }\n\n      return e.prototype.value = $util.emptyArray, e.decode = function (e, t) {\n        e instanceof $Reader || (e = $Reader.create(e));\n\n        for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.CollectionDef.FloatList(); e.pos < a;) {\n          var n = e.uint32();\n\n          switch (n >>> 3) {\n            case 1:\n              if (r.value && r.value.length || (r.value = []), 2 == (7 & n)) for (var o = e.uint32() + e.pos; e.pos < o;) {\n                r.value.push(e.float());\n              } else r.value.push(e.float());\n              break;\n\n            default:\n              e.skipType(7 & n);\n          }\n        }\n\n        return r;\n      }, e;\n    }(), e.AnyList = function () {\n      function e(e) {\n        if (this.value = [], e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n          null != e[t[a]] && (this[t[a]] = e[t[a]]);\n        }\n      }\n\n      return e.prototype.value = $util.emptyArray, e.decode = function (e, t) {\n        e instanceof $Reader || (e = $Reader.create(e));\n\n        for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.CollectionDef.AnyList(); e.pos < a;) {\n          var n = e.uint32();\n\n          switch (n >>> 3) {\n            case 1:\n              r.value && r.value.length || (r.value = []), r.value.push($root.tensorflow.Any.decode(e, e.uint32()));\n              break;\n\n            default:\n              e.skipType(7 & n);\n          }\n        }\n\n        return r;\n      }, e;\n    }(), e;\n  }(), a.SaverDef = function () {\n    function e(e) {\n      if (e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n        null != e[t[a]] && (this[t[a]] = e[t[a]]);\n      }\n    }\n\n    var t, a;\n    return e.prototype.filenameTensorName = \"\", e.prototype.saveTensorName = \"\", e.prototype.restoreOpName = \"\", e.prototype.maxToKeep = 0, e.prototype.sharded = !1, e.prototype.keepCheckpointEveryNHours = 0, e.prototype.version = 0, e.decode = function (e, t) {\n      e instanceof $Reader || (e = $Reader.create(e));\n\n      for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.SaverDef(); e.pos < a;) {\n        var n = e.uint32();\n\n        switch (n >>> 3) {\n          case 1:\n            r.filenameTensorName = e.string();\n            break;\n\n          case 2:\n            r.saveTensorName = e.string();\n            break;\n\n          case 3:\n            r.restoreOpName = e.string();\n            break;\n\n          case 4:\n            r.maxToKeep = e.int32();\n            break;\n\n          case 5:\n            r.sharded = e.bool();\n            break;\n\n          case 6:\n            r.keepCheckpointEveryNHours = e.float();\n            break;\n\n          case 7:\n            r.version = e.int32();\n            break;\n\n          default:\n            e.skipType(7 & n);\n        }\n      }\n\n      return r;\n    }, e.CheckpointFormatVersion = (t = {}, (a = Object.create(t))[t[0] = \"LEGACY\"] = 0, a[t[1] = \"V1\"] = 1, a[t[2] = \"V2\"] = 2, a), e;\n  }(), a.TensorInfo = function () {\n    function e(e) {\n      if (e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n        null != e[t[a]] && (this[t[a]] = e[t[a]]);\n      }\n    }\n\n    var t;\n    return e.prototype.name = \"\", e.prototype.cooSparse = null, e.prototype.dtype = 0, e.prototype.tensorShape = null, Object.defineProperty(e.prototype, \"encoding\", {\n      get: $util.oneOfGetter(t = [\"name\", \"cooSparse\"]),\n      set: $util.oneOfSetter(t)\n    }), e.decode = function (e, t) {\n      e instanceof $Reader || (e = $Reader.create(e));\n\n      for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.TensorInfo(); e.pos < a;) {\n        var n = e.uint32();\n\n        switch (n >>> 3) {\n          case 1:\n            r.name = e.string();\n            break;\n\n          case 4:\n            r.cooSparse = $root.tensorflow.TensorInfo.CooSparse.decode(e, e.uint32());\n            break;\n\n          case 2:\n            r.dtype = e.int32();\n            break;\n\n          case 3:\n            r.tensorShape = $root.tensorflow.TensorShape.decode(e, e.uint32());\n            break;\n\n          default:\n            e.skipType(7 & n);\n        }\n      }\n\n      return r;\n    }, e.CooSparse = function () {\n      function e(e) {\n        if (e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n          null != e[t[a]] && (this[t[a]] = e[t[a]]);\n        }\n      }\n\n      return e.prototype.valuesTensorName = \"\", e.prototype.indicesTensorName = \"\", e.prototype.denseShapeTensorName = \"\", e.decode = function (e, t) {\n        e instanceof $Reader || (e = $Reader.create(e));\n\n        for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.TensorInfo.CooSparse(); e.pos < a;) {\n          var n = e.uint32();\n\n          switch (n >>> 3) {\n            case 1:\n              r.valuesTensorName = e.string();\n              break;\n\n            case 2:\n              r.indicesTensorName = e.string();\n              break;\n\n            case 3:\n              r.denseShapeTensorName = e.string();\n              break;\n\n            default:\n              e.skipType(7 & n);\n          }\n        }\n\n        return r;\n      }, e;\n    }(), e;\n  }(), a.SignatureDef = function () {\n    function e(e) {\n      if (this.inputs = {}, this.outputs = {}, e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n        null != e[t[a]] && (this[t[a]] = e[t[a]]);\n      }\n    }\n\n    return e.prototype.inputs = $util.emptyObject, e.prototype.outputs = $util.emptyObject, e.prototype.methodName = \"\", e.decode = function (e, t) {\n      e instanceof $Reader || (e = $Reader.create(e));\n\n      for (var a, r = void 0 === t ? e.len : e.pos + t, n = new $root.tensorflow.SignatureDef(); e.pos < r;) {\n        var o = e.uint32();\n\n        switch (o >>> 3) {\n          case 1:\n            e.skip().pos++, n.inputs === $util.emptyObject && (n.inputs = {}), a = e.string(), e.pos++, n.inputs[a] = $root.tensorflow.TensorInfo.decode(e, e.uint32());\n            break;\n\n          case 2:\n            e.skip().pos++, n.outputs === $util.emptyObject && (n.outputs = {}), a = e.string(), e.pos++, n.outputs[a] = $root.tensorflow.TensorInfo.decode(e, e.uint32());\n            break;\n\n          case 3:\n            n.methodName = e.string();\n            break;\n\n          default:\n            e.skipType(7 & o);\n        }\n      }\n\n      return n;\n    }, e;\n  }(), a.AssetFileDef = function () {\n    function e(e) {\n      if (e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n        null != e[t[a]] && (this[t[a]] = e[t[a]]);\n      }\n    }\n\n    return e.prototype.tensorInfo = null, e.prototype.filename = \"\", e.decode = function (e, t) {\n      e instanceof $Reader || (e = $Reader.create(e));\n\n      for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.AssetFileDef(); e.pos < a;) {\n        var n = e.uint32();\n\n        switch (n >>> 3) {\n          case 1:\n            r.tensorInfo = $root.tensorflow.TensorInfo.decode(e, e.uint32());\n            break;\n\n          case 2:\n            r.filename = e.string();\n            break;\n\n          default:\n            e.skipType(7 & n);\n        }\n      }\n\n      return r;\n    }, e;\n  }(), a.OpDef = function () {\n    function e(e) {\n      if (this.inputArg = [], this.outputArg = [], this.attr = [], e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n        null != e[t[a]] && (this[t[a]] = e[t[a]]);\n      }\n    }\n\n    return e.prototype.name = \"\", e.prototype.inputArg = $util.emptyArray, e.prototype.outputArg = $util.emptyArray, e.prototype.attr = $util.emptyArray, e.prototype.deprecation = null, e.prototype.summary = \"\", e.prototype.description = \"\", e.prototype.isCommutative = !1, e.prototype.isAggregate = !1, e.prototype.isStateful = !1, e.prototype.allowsUninitializedInput = !1, e.decode = function (e, t) {\n      e instanceof $Reader || (e = $Reader.create(e));\n\n      for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.OpDef(); e.pos < a;) {\n        var n = e.uint32();\n\n        switch (n >>> 3) {\n          case 1:\n            r.name = e.string();\n            break;\n\n          case 2:\n            r.inputArg && r.inputArg.length || (r.inputArg = []), r.inputArg.push($root.tensorflow.OpDef.ArgDef.decode(e, e.uint32()));\n            break;\n\n          case 3:\n            r.outputArg && r.outputArg.length || (r.outputArg = []), r.outputArg.push($root.tensorflow.OpDef.ArgDef.decode(e, e.uint32()));\n            break;\n\n          case 4:\n            r.attr && r.attr.length || (r.attr = []), r.attr.push($root.tensorflow.OpDef.AttrDef.decode(e, e.uint32()));\n            break;\n\n          case 8:\n            r.deprecation = $root.tensorflow.OpDef.OpDeprecation.decode(e, e.uint32());\n            break;\n\n          case 5:\n            r.summary = e.string();\n            break;\n\n          case 6:\n            r.description = e.string();\n            break;\n\n          case 18:\n            r.isCommutative = e.bool();\n            break;\n\n          case 16:\n            r.isAggregate = e.bool();\n            break;\n\n          case 17:\n            r.isStateful = e.bool();\n            break;\n\n          case 19:\n            r.allowsUninitializedInput = e.bool();\n            break;\n\n          default:\n            e.skipType(7 & n);\n        }\n      }\n\n      return r;\n    }, e.ArgDef = function () {\n      function e(e) {\n        if (e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n          null != e[t[a]] && (this[t[a]] = e[t[a]]);\n        }\n      }\n\n      return e.prototype.name = \"\", e.prototype.description = \"\", e.prototype.type = 0, e.prototype.typeAttr = \"\", e.prototype.numberAttr = \"\", e.prototype.typeListAttr = \"\", e.prototype.isRef = !1, e.decode = function (e, t) {\n        e instanceof $Reader || (e = $Reader.create(e));\n\n        for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.OpDef.ArgDef(); e.pos < a;) {\n          var n = e.uint32();\n\n          switch (n >>> 3) {\n            case 1:\n              r.name = e.string();\n              break;\n\n            case 2:\n              r.description = e.string();\n              break;\n\n            case 3:\n              r.type = e.int32();\n              break;\n\n            case 4:\n              r.typeAttr = e.string();\n              break;\n\n            case 5:\n              r.numberAttr = e.string();\n              break;\n\n            case 6:\n              r.typeListAttr = e.string();\n              break;\n\n            case 16:\n              r.isRef = e.bool();\n              break;\n\n            default:\n              e.skipType(7 & n);\n          }\n        }\n\n        return r;\n      }, e;\n    }(), e.AttrDef = function () {\n      function e(e) {\n        if (e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n          null != e[t[a]] && (this[t[a]] = e[t[a]]);\n        }\n      }\n\n      return e.prototype.name = \"\", e.prototype.type = \"\", e.prototype.defaultValue = null, e.prototype.description = \"\", e.prototype.hasMinimum = !1, e.prototype.minimum = $util.Long ? $util.Long.fromBits(0, 0, !1) : 0, e.prototype.allowedValues = null, e.decode = function (e, t) {\n        e instanceof $Reader || (e = $Reader.create(e));\n\n        for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.OpDef.AttrDef(); e.pos < a;) {\n          var n = e.uint32();\n\n          switch (n >>> 3) {\n            case 1:\n              r.name = e.string();\n              break;\n\n            case 2:\n              r.type = e.string();\n              break;\n\n            case 3:\n              r.defaultValue = $root.tensorflow.AttrValue.decode(e, e.uint32());\n              break;\n\n            case 4:\n              r.description = e.string();\n              break;\n\n            case 5:\n              r.hasMinimum = e.bool();\n              break;\n\n            case 6:\n              r.minimum = e.int64();\n              break;\n\n            case 7:\n              r.allowedValues = $root.tensorflow.AttrValue.decode(e, e.uint32());\n              break;\n\n            default:\n              e.skipType(7 & n);\n          }\n        }\n\n        return r;\n      }, e;\n    }(), e.OpDeprecation = function () {\n      function e(e) {\n        if (e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n          null != e[t[a]] && (this[t[a]] = e[t[a]]);\n        }\n      }\n\n      return e.prototype.version = 0, e.prototype.explanation = \"\", e.decode = function (e, t) {\n        e instanceof $Reader || (e = $Reader.create(e));\n\n        for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.OpDef.OpDeprecation(); e.pos < a;) {\n          var n = e.uint32();\n\n          switch (n >>> 3) {\n            case 1:\n              r.version = e.int32();\n              break;\n\n            case 2:\n              r.explanation = e.string();\n              break;\n\n            default:\n              e.skipType(7 & n);\n          }\n        }\n\n        return r;\n      }, e;\n    }(), e;\n  }(), a.OpList = function () {\n    function e(e) {\n      if (this.op = [], e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n        null != e[t[a]] && (this[t[a]] = e[t[a]]);\n      }\n    }\n\n    return e.prototype.op = $util.emptyArray, e.decode = function (e, t) {\n      e instanceof $Reader || (e = $Reader.create(e));\n\n      for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.OpList(); e.pos < a;) {\n        var n = e.uint32();\n\n        switch (n >>> 3) {\n          case 1:\n            r.op && r.op.length || (r.op = []), r.op.push($root.tensorflow.OpDef.decode(e, e.uint32()));\n            break;\n\n          default:\n            e.skipType(7 & n);\n        }\n      }\n\n      return r;\n    }, e;\n  }(), a.MetaGraphDef = function () {\n    function e(e) {\n      if (this.collectionDef = {}, this.signatureDef = {}, this.assetFileDef = [], e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n        null != e[t[a]] && (this[t[a]] = e[t[a]]);\n      }\n    }\n\n    return e.prototype.metaInfoDef = null, e.prototype.graphDef = null, e.prototype.saverDef = null, e.prototype.collectionDef = $util.emptyObject, e.prototype.signatureDef = $util.emptyObject, e.prototype.assetFileDef = $util.emptyArray, e.decode = function (e, t) {\n      e instanceof $Reader || (e = $Reader.create(e));\n\n      for (var a, r = void 0 === t ? e.len : e.pos + t, n = new $root.tensorflow.MetaGraphDef(); e.pos < r;) {\n        var o = e.uint32();\n\n        switch (o >>> 3) {\n          case 1:\n            n.metaInfoDef = $root.tensorflow.MetaGraphDef.MetaInfoDef.decode(e, e.uint32());\n            break;\n\n          case 2:\n            n.graphDef = $root.tensorflow.GraphDef.decode(e, e.uint32());\n            break;\n\n          case 3:\n            n.saverDef = $root.tensorflow.SaverDef.decode(e, e.uint32());\n            break;\n\n          case 4:\n            e.skip().pos++, n.collectionDef === $util.emptyObject && (n.collectionDef = {}), a = e.string(), e.pos++, n.collectionDef[a] = $root.tensorflow.CollectionDef.decode(e, e.uint32());\n            break;\n\n          case 5:\n            e.skip().pos++, n.signatureDef === $util.emptyObject && (n.signatureDef = {}), a = e.string(), e.pos++, n.signatureDef[a] = $root.tensorflow.SignatureDef.decode(e, e.uint32());\n            break;\n\n          case 6:\n            n.assetFileDef && n.assetFileDef.length || (n.assetFileDef = []), n.assetFileDef.push($root.tensorflow.AssetFileDef.decode(e, e.uint32()));\n            break;\n\n          default:\n            e.skipType(7 & o);\n        }\n      }\n\n      return n;\n    }, e.MetaInfoDef = function () {\n      function e(e) {\n        if (this.tags = [], e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n          null != e[t[a]] && (this[t[a]] = e[t[a]]);\n        }\n      }\n\n      return e.prototype.metaGraphVersion = \"\", e.prototype.strippedOpList = null, e.prototype.anyInfo = null, e.prototype.tags = $util.emptyArray, e.prototype.tensorflowVersion = \"\", e.prototype.tensorflowGitVersion = \"\", e.decode = function (e, t) {\n        e instanceof $Reader || (e = $Reader.create(e));\n\n        for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.MetaGraphDef.MetaInfoDef(); e.pos < a;) {\n          var n = e.uint32();\n\n          switch (n >>> 3) {\n            case 1:\n              r.metaGraphVersion = e.string();\n              break;\n\n            case 2:\n              r.strippedOpList = $root.tensorflow.OpList.decode(e, e.uint32());\n              break;\n\n            case 3:\n              r.anyInfo = $root.tensorflow.Any.decode(e, e.uint32());\n              break;\n\n            case 4:\n              r.tags && r.tags.length || (r.tags = []), r.tags.push(e.string());\n              break;\n\n            case 5:\n              r.tensorflowVersion = e.string();\n              break;\n\n            case 6:\n              r.tensorflowGitVersion = e.string();\n              break;\n\n            default:\n              e.skipType(7 & n);\n          }\n        }\n\n        return r;\n      }, e;\n    }(), e;\n  }(), a.SavedModel = function () {\n    function e(e) {\n      if (this.metaGraphs = [], e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n        null != e[t[a]] && (this[t[a]] = e[t[a]]);\n      }\n    }\n\n    return e.prototype.savedModelSchemaVersion = $util.Long ? $util.Long.fromBits(0, 0, !1) : 0, e.prototype.metaGraphs = $util.emptyArray, e.decode = function (e, t) {\n      e instanceof $Reader || (e = $Reader.create(e));\n\n      for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.SavedModel(); e.pos < a;) {\n        var n = e.uint32();\n\n        switch (n >>> 3) {\n          case 1:\n            r.savedModelSchemaVersion = e.int64();\n            break;\n\n          case 2:\n            r.metaGraphs && r.metaGraphs.length || (r.metaGraphs = []), r.metaGraphs.push($root.tensorflow.MetaGraphDef.decode(e, e.uint32()));\n            break;\n\n          default:\n            e.skipType(7 & n);\n        }\n      }\n\n      return r;\n    }, e;\n  }(), a.FunctionDefLibrary = function () {\n    function e(e) {\n      if (this.function = [], this.gradient = [], e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n        null != e[t[a]] && (this[t[a]] = e[t[a]]);\n      }\n    }\n\n    return e.prototype.function = $util.emptyArray, e.prototype.gradient = $util.emptyArray, e.decode = function (e, t) {\n      e instanceof $Reader || (e = $Reader.create(e));\n\n      for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.FunctionDefLibrary(); e.pos < a;) {\n        var n = e.uint32();\n\n        switch (n >>> 3) {\n          case 1:\n            r.function && r.function.length || (r.function = []), r.function.push($root.tensorflow.FunctionDef.decode(e, e.uint32()));\n            break;\n\n          case 2:\n            r.gradient && r.gradient.length || (r.gradient = []), r.gradient.push($root.tensorflow.GradientDef.decode(e, e.uint32()));\n            break;\n\n          default:\n            e.skipType(7 & n);\n        }\n      }\n\n      return r;\n    }, e;\n  }(), a.FunctionDef = function () {\n    function e(e) {\n      if (this.attr = {}, this.nodeDef = [], this.ret = {}, e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n        null != e[t[a]] && (this[t[a]] = e[t[a]]);\n      }\n    }\n\n    return e.prototype.signature = null, e.prototype.attr = $util.emptyObject, e.prototype.nodeDef = $util.emptyArray, e.prototype.ret = $util.emptyObject, e.decode = function (e, t) {\n      e instanceof $Reader || (e = $Reader.create(e));\n\n      for (var a, r = void 0 === t ? e.len : e.pos + t, n = new $root.tensorflow.FunctionDef(); e.pos < r;) {\n        var o = e.uint32();\n\n        switch (o >>> 3) {\n          case 1:\n            n.signature = $root.tensorflow.OpDef.decode(e, e.uint32());\n            break;\n\n          case 5:\n            e.skip().pos++, n.attr === $util.emptyObject && (n.attr = {}), a = e.string(), e.pos++, n.attr[a] = $root.tensorflow.AttrValue.decode(e, e.uint32());\n            break;\n\n          case 3:\n            n.nodeDef && n.nodeDef.length || (n.nodeDef = []), n.nodeDef.push($root.tensorflow.NodeDef.decode(e, e.uint32()));\n            break;\n\n          case 4:\n            e.skip().pos++, n.ret === $util.emptyObject && (n.ret = {}), a = e.string(), e.pos++, n.ret[a] = e.string();\n            break;\n\n          default:\n            e.skipType(7 & o);\n        }\n      }\n\n      return n;\n    }, e;\n  }(), a.GradientDef = function () {\n    function e(e) {\n      if (e) for (var t = Object.keys(e), a = 0; a < t.length; ++a) {\n        null != e[t[a]] && (this[t[a]] = e[t[a]]);\n      }\n    }\n\n    return e.prototype.functionName = \"\", e.prototype.gradientFunc = \"\", e.decode = function (e, t) {\n      e instanceof $Reader || (e = $Reader.create(e));\n\n      for (var a = void 0 === t ? e.len : e.pos + t, r = new $root.tensorflow.GradientDef(); e.pos < a;) {\n        var n = e.uint32();\n\n        switch (n >>> 3) {\n          case 1:\n            r.functionName = e.string();\n            break;\n\n          case 2:\n            r.gradientFunc = e.string();\n            break;\n\n          default:\n            e.skipType(7 & n);\n        }\n      }\n\n      return r;\n    }, e;\n  }(), a;\n}();\n\nvar compiled_api = $root,\n    compiled_api_1 = compiled_api.tensorflow;\n\nfunction getParamValue(e, t, a, r) {\n  var n = t.params[e];\n\n  if (n && void 0 !== n.inputIndex) {\n    if (\"tensor\" === n.type) return getTensor(t.inputNames[n.inputIndex], a, r);\n    if (\"tensors\" === n.type) return (0 === n.inputIndex ? 0 === n.inputParamLength ? t.inputNames : t.inputNames.slice(n.inputIndex, -n.inputParamLength) : t.inputNames.splice(n.inputIndex)).map(function (e) {\n      return getTensor(e, a, r);\n    });\n    var o = Array.prototype.slice.call(getTensor(t.inputNames.slice(n.inputIndex)[0], a, r).dataSync());\n    return \"number\" === n.type ? o[0] : o;\n  }\n\n  return n && n.value;\n}\n\nfunction getTensor(e, t, a) {\n  var r = parseNodeName(e),\n      n = r[0],\n      o = r[1],\n      s = a.currentContextIds.find(function (e) {\n    return !!t[getNodeNameWithContextId(n, e)];\n  });\n  return void 0 !== s ? t[getNodeNameWithContextId(n, s)][o] : void 0;\n}\n\nfunction getTensorsForCurrentContenxt(e, t, a) {\n  return t[getNodeNameWithContextId(e, a.currentContextId)];\n}\n\nfunction getNodeNameAndIndex(e, t) {\n  var a = parseNodeName(e),\n      r = a[0],\n      n = a[1];\n  return [getNodeNameWithContextId(r, t && t.currentContextId), n];\n}\n\nfunction getNodeNameWithContextId(e, t) {\n  return t ? e + \"-\" + t : e;\n}\n\nfunction parseNodeName(e) {\n  var t = e.lastIndexOf(\":\");\n  return -1 === t ? [e, 0] : [e.substring(0, t), Number(e.substring(t + 1))];\n}\n\nfunction split$1(e, t) {\n  for (var a = [], r = 0; r < e.length; r += t) {\n    a.push(e.slice(r, r + t));\n  }\n\n  return a;\n}\n\nvar json = [{\n  tfOpName: \"Add\",\n  dlOpName: \"add\",\n  category: \"arithmetic\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"AddN\",\n  dlOpName: \"addN\",\n  category: \"arithmetic\",\n  params: [{\n    tfInputIndex: 0,\n    tfInputParamLength: 0,\n    dlParamName: \"tensors\",\n    type: \"tensors\"\n  }]\n}, {\n  tfOpName: \"BiasAdd\",\n  dlOpName: \"add\",\n  category: \"arithmetic\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Sub\",\n  dlOpName: \"sub\",\n  category: \"arithmetic\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"RealDiv\",\n  dlOpName: \"div\",\n  category: \"arithmetic\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Div\",\n  dlOpName: \"div\",\n  category: \"arithmetic\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"FloorDiv\",\n  dlOpName: \"floorDiv\",\n  category: \"arithmetic\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Mul\",\n  dlOpName: \"mul\",\n  category: \"arithmetic\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Maximum\",\n  dlOpName: \"maximum\",\n  category: \"arithmetic\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }]\n}, {\n  tfOpName: \"Minimum\",\n  dlOpName: \"minimum\",\n  category: \"arithmetic\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }]\n}, {\n  tfOpName: \"Pow\",\n  dlOpName: \"pow\",\n  category: \"arithmetic\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"SquaredDifference\",\n  dlOpName: \"squaredDifference\",\n  category: \"arithmetic\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Mod\",\n  dlOpName: \"mod\",\n  category: \"arithmetic\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"FloorMod\",\n  dlOpName: \"mod\",\n  category: \"arithmetic\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}],\n    arithmetic = Object.freeze({\n  json: json\n}),\n    json$1 = [{\n  tfOpName: \"Abs\",\n  dlOpName: \"abs\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Acos\",\n  dlOpName: \"acos\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Asin\",\n  dlOpName: \"asin\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Atan\",\n  dlOpName: \"atan\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Atan2\",\n  dlOpName: \"atan2\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"y\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Ceil\",\n  dlOpName: \"ceil\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"ClipByValue\",\n  dlOpName: \"clipByValue\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"clip_value_min\",\n    dlParamName: \"clipValueMin\",\n    type: \"number\"\n  }, {\n    tfParamName: \"clip_value_max\",\n    dlParamName: \"clipValueMax\",\n    type: \"number\"\n  }]\n}, {\n  tfOpName: \"Cos\",\n  dlOpName: \"cos\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Cosh\",\n  dlOpName: \"cosh\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Elu\",\n  dlOpName: \"elu\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Exp\",\n  dlOpName: \"exp\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Floor\",\n  dlOpName: \"floor\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Log\",\n  dlOpName: \"log\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Neg\",\n  dlOpName: \"neg\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Relu\",\n  dlOpName: \"relu\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Relu6\",\n  dlOpName: \"clipByValue\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }, {\n    dlParamName: \"clipValueMin\",\n    type: \"number\",\n    defaultValue: 0\n  }, {\n    dlParamName: \"clipValueMax\",\n    type: \"number\",\n    defaultValue: 6\n  }]\n}, {\n  tfOpName: \"Selu\",\n  dlOpName: \"selu\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Sigmoid\",\n  dlOpName: \"sigmoid\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Sin\",\n  dlOpName: \"sin\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Sinh\",\n  dlOpName: \"sinh\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Sqrt\",\n  dlOpName: \"sqrt\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Rsqrt\",\n  dlOpName: \"rsqrt\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Square\",\n  dlOpName: \"square\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Tan\",\n  dlOpName: \"tan\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Tanh\",\n  dlOpName: \"tanh\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Sign\",\n  dlOpName: \"sign\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Round\",\n  dlOpName: \"round\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Expm1\",\n  dlOpName: \"expm1\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Log1p\",\n  dlOpName: \"log1p\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Reciprocal\",\n  dlOpName: \"reciprocal\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Reciprocal\",\n  dlOpName: \"reciprocal\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Softplus\",\n  dlOpName: \"softplus\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Asinh\",\n  dlOpName: \"asinh\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Acosh\",\n  dlOpName: \"acosh\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Atanh\",\n  dlOpName: \"atanh\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Erf\",\n  dlOpName: \"erf\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Prod\",\n  dlOpName: \"prod\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"axes\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"keep_dims\",\n    dlParamName: \"keepDims\",\n    type: \"bool\",\n    notSupported: !0\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"LeakyRelu\",\n  dlOpName: \"leakyRelu\",\n  category: \"basic_math\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"alpha\",\n    dlParamName: \"alpha\",\n    type: \"number\",\n    defaultValue: .2\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}],\n    basicMath = Object.freeze({\n  json: json$1\n}),\n    json$2 = [{\n  tfOpName: \"LoopCond\",\n  dlOpName: \"loopCond\",\n  category: \"control\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"pred\",\n    type: \"tensor\"\n  }]\n}, {\n  tfOpName: \"Switch\",\n  dlOpName: \"switch\",\n  category: \"control\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"data\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"pred\",\n    type: \"tensor\"\n  }]\n}, {\n  tfOpName: \"Merge\",\n  dlOpName: \"merge\",\n  category: \"control\",\n  params: [{\n    tfInputIndex: 0,\n    tfInputParamLength: 0,\n    dlParamName: \"tensors\",\n    type: \"tensors\"\n  }]\n}, {\n  tfOpName: \"Enter\",\n  dlOpName: \"enter\",\n  category: \"control\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"tensor\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }, {\n    tfParamName: \"frame_name\",\n    dlParamName: \"frameName\",\n    type: \"string\"\n  }, {\n    tfParamName: \"is_constant\",\n    dlParamName: \"isConstant\",\n    type: \"bool\"\n  }]\n}, {\n  tfOpName: \"Exit\",\n  dlOpName: \"exit\",\n  category: \"control\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"tensor\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"NextIteration\",\n  dlOpName: \"nextIteration\",\n  category: \"control\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"tensor\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"TensorArrayV3\",\n  dlOpName: \"tensorArray\",\n  category: \"control\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"size\",\n    type: \"number\"\n  }, {\n    tfParamName: \"dtype\",\n    dlParamName: \"dtype\",\n    type: \"dtype\"\n  }, {\n    tfParamName: \"element_shape\",\n    dlParamName: \"elementShape\",\n    type: \"shape\"\n  }, {\n    tfParamName: \"dynamic_size\",\n    dlParamName: \"dynamicSize\",\n    type: \"bool\"\n  }, {\n    tfParamName: \"clear_after_read\",\n    dlParamName: \"clearAfterRead\",\n    type: \"bool\"\n  }, {\n    tfParamName: \"identical_element_shapes\",\n    dlParamName: \"identicalElementShapes\",\n    type: \"bool\"\n  }, {\n    tfParamName: \"tensor_array_name\",\n    dlParamName: \"name\",\n    type: \"string\"\n  }]\n}, {\n  tfOpName: \"TensorArrayWriteV3\",\n  dlOpName: \"tensorArrayWrite\",\n  category: \"control\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"tensorArrayId\",\n    type: \"number\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"index\",\n    type: \"number\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"tensor\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 3,\n    dlParamName: \"flowIn\",\n    type: \"number\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"TensorArrayReadV3\",\n  dlOpName: \"tensorArrayRead\",\n  category: \"control\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"tensorArrayId\",\n    type: \"number\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"index\",\n    type: \"number\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"flowIn\",\n    type: \"number\"\n  }, {\n    tfParamName: \"dtype\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"TensorArrayGatherV3\",\n  dlOpName: \"tensorArrayGather\",\n  category: \"control\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"tensorArrayId\",\n    type: \"number\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"indices\",\n    type: \"number[]\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"flowIn\",\n    type: \"number\"\n  }, {\n    tfParamName: \"dtype\",\n    dlParamName: \"dtype\",\n    type: \"dtype\"\n  }, {\n    tfParamName: \"element_shape\",\n    dlParamName: \"elementShape\",\n    type: \"shape\"\n  }]\n}, {\n  tfOpName: \"TensorArrayScatterV3\",\n  dlOpName: \"tensorArrayScatter\",\n  category: \"control\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"tensorArrayId\",\n    type: \"number\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"indices\",\n    type: \"number[]\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"tensor\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 3,\n    dlParamName: \"flowIn\",\n    type: \"number\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\"\n  }]\n}, {\n  tfOpName: \"TensorArrayConcatV3\",\n  dlOpName: \"tensorArrayConcat\",\n  category: \"control\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"tensorArrayId\",\n    type: \"number\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"flowIn\",\n    type: \"number\"\n  }, {\n    tfParamName: \"dtype\",\n    dlParamName: \"dtype\",\n    type: \"dtype\"\n  }, {\n    tfParamName: \"element_shape_except0\",\n    dlParamName: \"elementShapeExcept0\",\n    type: \"shape\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"TensorArraySplitV3\",\n  dlOpName: \"tensorArraySplit\",\n  category: \"control\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"tensorArrayId\",\n    type: \"number\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"tensor\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"lengths\",\n    type: \"number[]\"\n  }, {\n    tfInputIndex: 3,\n    dlParamName: \"flowIn\",\n    type: \"number\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\"\n  }]\n}, {\n  tfOpName: \"TensorArraySizeV3\",\n  dlOpName: \"tensorArraySize\",\n  category: \"control\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"tensorArrayId\",\n    type: \"number\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"flowIn\",\n    type: \"number\"\n  }]\n}, {\n  tfOpName: \"TensorArrayCloseV3\",\n  dlOpName: \"tensorArrayClose\",\n  category: \"control\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"tensorArrayId\",\n    type: \"number\"\n  }]\n}],\n    control = Object.freeze({\n  json: json$2\n}),\n    json$3 = [{\n  tfOpName: \"AvgPool\",\n  dlOpName: \"avgPool\",\n  category: \"convolution\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"strides\",\n    dlParamName: \"strides\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"padding\",\n    dlParamName: \"pad\",\n    type: \"string\"\n  }, {\n    tfParamName: \"data_format\",\n    dlParamName: \"dataFormat\",\n    type: \"string\",\n    notSupported: !0\n  }, {\n    tfParamName: \"ksize\",\n    dlParamName: \"kernelSize\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"MaxPool\",\n  dlOpName: \"maxPool\",\n  category: \"convolution\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"strides\",\n    dlParamName: \"strides\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"padding\",\n    dlParamName: \"pad\",\n    type: \"string\"\n  }, {\n    tfParamName: \"data_format\",\n    dlParamName: \"dataFormat\",\n    type: \"string\",\n    notSupported: !0\n  }, {\n    tfParamName: \"ksize\",\n    dlParamName: \"kernelSize\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Conv1D\",\n  dlOpName: \"conv1d\",\n  category: \"convolution\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"filter\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"stride\",\n    dlParamName: \"stride\",\n    type: \"number\"\n  }, {\n    tfParamName: \"padding\",\n    dlParamName: \"pad\",\n    type: \"string\"\n  }, {\n    tfParamName: \"data_format\",\n    dlParamName: \"dataFormat\",\n    type: \"string\",\n    defaultValue: \"NWC\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }, {\n    tfParamName: \"dilation\",\n    dlParamName: \"dilation\",\n    type: \"number\",\n    defaultValue: 1\n  }]\n}, {\n  tfOpName: \"Conv2D\",\n  dlOpName: \"conv2d\",\n  category: \"convolution\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"filter\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }, {\n    tfParamName: \"strides\",\n    dlParamName: \"strides\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"padding\",\n    dlParamName: \"pad\",\n    type: \"string\"\n  }, {\n    tfParamName: \"useCudnnOnGpu\",\n    dlParamName: \"useCudnnOnGpu\",\n    type: \"bool\"\n  }, {\n    tfParamName: \"data_format\",\n    dlParamName: \"dataFormat\",\n    type: \"string\",\n    defaultValue: \"NHWC\"\n  }, {\n    tfParamName: \"dilations\",\n    dlParamName: \"dilations\",\n    type: \"number[]\"\n  }]\n}, {\n  tfOpName: \"Conv2DBackpropInput\",\n  dlOpName: \"conv2dTranspose\",\n  category: \"convolution\",\n  params: [{\n    tfInputIndex: 2,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"filter\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 0,\n    dlParamName: \"outputShape\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"strides\",\n    dlParamName: \"strides\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"padding\",\n    dlParamName: \"pad\",\n    type: \"string\"\n  }, {\n    tfParamName: \"data_format\",\n    dlParamName: \"dataFormat\",\n    type: \"string\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"DepthwiseConv2d\",\n  dlOpName: \"depthwiseConv2d\",\n  category: \"convolution\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"input\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"filter\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"strides\",\n    dlParamName: \"strides\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"padding\",\n    dlParamName: \"pad\",\n    type: \"string\"\n  }, {\n    tfParamName: \"data_format\",\n    dlParamName: \"dataFormat\",\n    type: \"string\",\n    defaultValue: \"NHWC\"\n  }, {\n    tfParamName: \"dilations\",\n    dlParamName: \"dilations\",\n    type: \"number[]\"\n  }]\n}, {\n  tfOpName: \"DepthwiseConv2dNative\",\n  dlOpName: \"depthwiseConv2d\",\n  category: \"convolution\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"input\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"filter\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"strides\",\n    dlParamName: \"strides\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"padding\",\n    dlParamName: \"pad\",\n    type: \"string\"\n  }, {\n    tfParamName: \"data_format\",\n    dlParamName: \"dataFormat\",\n    type: \"string\",\n    defaultValue: \"NHWC\"\n  }, {\n    tfParamName: \"dilations\",\n    dlParamName: \"dilations\",\n    type: \"number[]\"\n  }]\n}],\n    convolution = Object.freeze({\n  json: json$3\n}),\n    json$4 = [{\n  tfOpName: \"Fill\",\n  dlOpName: \"fill\",\n  category: \"creation\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"shape\",\n    type: \"number[]\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"value\",\n    type: \"number\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\"\n  }]\n}, {\n  tfOpName: \"LinSpace\",\n  dlOpName: \"linspace\",\n  category: \"creation\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"start\",\n    type: \"number\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"stop\",\n    type: \"number\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"num\",\n    type: \"number\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"OneHot\",\n  dlOpName: \"oneHot\",\n  category: \"creation\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"indices\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"depth\",\n    type: \"number\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"onValue\",\n    type: \"number\",\n    defaultValue: 1\n  }, {\n    tfInputIndex: 3,\n    dlParamName: \"offValue\",\n    type: \"number\",\n    defaultValue: 0\n  }, {\n    tfParamName: \"axis\",\n    dlParamName: \"axis\",\n    type: \"number\",\n    notSupported: !0\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Ones\",\n  dlOpName: \"ones\",\n  category: \"creation\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"shape\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\"\n  }]\n}, {\n  tfOpName: \"OnesLike\",\n  dlOpName: \"onesLike\",\n  category: \"creation\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"dtype\",\n    dlParamName: \"dtype\",\n    type: \"dtype\"\n  }]\n}, {\n  tfOpName: \"RandomUniform\",\n  dlOpName: \"randomUniform\",\n  category: \"creation\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"shape\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"minval\",\n    dlParamName: \"minval\",\n    type: \"number\",\n    defaultValue: 0\n  }, {\n    tfParamName: \"maxval\",\n    dlParamName: \"maxval\",\n    type: \"number\",\n    defaultValue: 1\n  }, {\n    tfParamName: \"dtype\",\n    dlParamName: \"dtype\",\n    type: \"dtype\"\n  }, {\n    tfParamName: \"seed\",\n    dlParamName: \"seed\",\n    type: \"number\",\n    defaultValue: 0\n  }, {\n    tfParamName: \"seed2\",\n    dlParamName: \"seed2\",\n    type: \"number\",\n    defaultValue: 0,\n    notSupported: !0\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"T\",\n    type: \"number\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Range\",\n  dlOpName: \"range\",\n  category: \"creation\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"start\",\n    type: \"number\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"stop\",\n    type: \"number\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"step\",\n    type: \"number\",\n    defaultValue: 0\n  }, {\n    tfParamName: \"Tidx\",\n    dlParamName: \"dtype\",\n    type: \"dtype\"\n  }]\n}, {\n  tfOpName: \"truncatedNormal\",\n  dlOpName: \"truncatedNormal\",\n  category: \"creation\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"shape\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"means\",\n    dlParamName: \"mean\",\n    type: \"number\",\n    defaultValue: 0\n  }, {\n    tfParamName: \"stddev\",\n    dlParamName: \"stdDev\",\n    type: \"number\",\n    defaultValue: 1\n  }, {\n    tfParamName: \"seed\",\n    dlParamName: \"seed\",\n    type: \"number\"\n  }, {\n    tfParamName: \"seed2\",\n    dlParamName: \"seed2\",\n    type: \"number\",\n    defaultValue: 0,\n    notSupported: !0\n  }, {\n    tfParamName: \"dtype\",\n    dlParamName: \"dtype\",\n    type: \"dtype\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"T\",\n    type: \"number\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Zeros\",\n  dlOpName: \"zeros\",\n  category: \"creation\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"shape\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\"\n  }]\n}, {\n  tfOpName: \"ZerosLike\",\n  dlOpName: \"zerosLike\",\n  category: \"creation\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\"\n  }]\n}],\n    creation = Object.freeze({\n  json: json$4\n}),\n    json$5 = [{\n  tfOpName: \"NonMaxSuppressionV2\",\n  dlOpName: \"nonMaxSuppression\",\n  category: \"dynamic\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"boxes\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"scores\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"maxOutputSize\",\n    type: \"number\"\n  }, {\n    tfInputIndex: 3,\n    dlParamName: \"iouThreshold\",\n    type: \"number\"\n  }]\n}, {\n  tfOpName: \"NonMaxSuppressionV3\",\n  dlOpName: \"nonMaxSuppression\",\n  category: \"dynamic\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"boxes\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"scores\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"maxOutputSize\",\n    type: \"number\"\n  }, {\n    tfInputIndex: 3,\n    dlParamName: \"iouThreshold\",\n    type: \"number\"\n  }, {\n    tfInputIndex: 4,\n    dlParamName: \"scoreThreshold\",\n    type: \"number\"\n  }]\n}, {\n  tfOpName: \"Where\",\n  dlOpName: \"whereAsync\",\n  category: \"dynamic\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"condition\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"ListDiff\",\n  dlOpName: \"setdiff1dAsync\",\n  category: \"dynamic\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"y\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}],\n    dynamic = Object.freeze({\n  json: json$5\n}),\n    json$6 = [{\n  tfOpName: \"TopKV2\",\n  dlOpName: \"topK\",\n  category: \"evaluation\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"k\",\n    type: \"number\"\n  }, {\n    tfParamName: \"sorted\",\n    dlParamName: \"sorted\",\n    type: \"bool\"\n  }]\n}],\n    evaluation = Object.freeze({\n  json: json$6\n}),\n    json$7 = [{\n  tfOpName: \"PlaceholderWithDefault\",\n  dlOpName: \"placeholder\",\n  category: \"graph\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"default\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"shape\",\n    dlParamName: \"shape\",\n    type: \"shape\"\n  }, {\n    tfParamName: \"dtype\",\n    dlParamName: \"dtype\",\n    type: \"dtype\"\n  }]\n}, {\n  tfOpName: \"Placeholder\",\n  dlOpName: \"placeholder\",\n  category: \"graph\",\n  params: [{\n    tfParamName: \"shape\",\n    dlParamName: \"shape\",\n    type: \"shape\"\n  }, {\n    tfParamName: \"dtype\",\n    dlParamName: \"dtype\",\n    type: \"dtype\"\n  }]\n}, {\n  tfOpName: \"Const\",\n  dlOpName: \"const\",\n  category: \"graph\"\n}, {\n  tfOpName: \"Identity\",\n  dlOpName: \"identity\",\n  category: \"graph\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }]\n}, {\n  tfOpName: \"Snapshot\",\n  dlOpName: \"snapshot\",\n  category: \"graph\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }]\n}, {\n  tfOpName: \"Rank\",\n  dlOpName: \"rank\",\n  category: \"graph\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }]\n}, {\n  tfOpName: \"Size\",\n  dlOpName: \"size\",\n  category: \"graph\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }]\n}, {\n  tfOpName: \"Shape\",\n  dlOpName: \"shape\",\n  category: \"graph\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }]\n}, {\n  tfOpName: \"ShapeN\",\n  dlOpName: \"shapeN\",\n  category: \"graph\",\n  params: [{\n    tfInputIndex: 0,\n    tfInputParamLength: 0,\n    dlParamName: \"x\",\n    type: \"tensors\"\n  }]\n}, {\n  tfOpName: \"Print\",\n  dlOpName: \"print\",\n  category: \"graph\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    tfInputParamLength: 1,\n    dlParamName: \"data\",\n    type: \"tensors\"\n  }, {\n    tfParamName: \"message\",\n    dlParamName: \"message\",\n    type: \"string\"\n  }, {\n    tfParamName: \"first_n\",\n    dlParamName: \"firstN\",\n    type: \"number\",\n    notSupprted: !0\n  }, {\n    tfParamName: \"summarize\",\n    dlParamName: \"summarize\",\n    type: \"number\",\n    defaultValue: 3\n  }]\n}, {\n  tfOpName: \"NoOp\",\n  dlOpName: \"noop\",\n  category: \"graph\",\n  params: []\n}, {\n  tfOpName: \"StopGradient\",\n  dlOpName: \"stopGradient\",\n  category: \"graph\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }]\n}, {\n  tfOpName: \"FakeQuantWithMinMaxVars\",\n  dlOpName: \"fakeQuantWithMinMaxVars\",\n  category: \"graph\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"min\",\n    dlParamName: \"min\",\n    type: \"number\"\n  }, {\n    tfParamName: \"max\",\n    dlParamName: \"max\",\n    type: \"number\"\n  }]\n}],\n    graph = Object.freeze({\n  json: json$7\n}),\n    json$8 = [{\n  tfOpName: \"ResizeBilinear\",\n  dlOpName: \"resizeBilinear\",\n  category: \"image\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"images\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"size\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"align_corners\",\n    dlParamName: \"alignCorners\",\n    type: \"bool\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"ResizeNearestNeighbor\",\n  dlOpName: \"resizeNearestNeighbor\",\n  category: \"image\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"images\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"size\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"align_corners\",\n    dlParamName: \"alignCorners\",\n    type: \"bool\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"CropAndResize\",\n  dlOpName: \"cropAndResize\",\n  category: \"image\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"image\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"boxes\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"boxInd\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 3,\n    dlParamName: \"cropSize\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"method\",\n    dlParamName: \"method\",\n    type: \"string\"\n  }, {\n    tfParamName: \"extrapolation_value\",\n    dlParamName: \"extrapolationValue\",\n    type: \"number\"\n  }]\n}],\n    image$1 = Object.freeze({\n  json: json$8\n}),\n    json$9 = [{\n  tfOpName: \"Equal\",\n  dlOpName: \"equal\",\n  category: \"logical\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"NotEqual\",\n  dlOpName: \"notEqual\",\n  category: \"logical\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Greater\",\n  dlOpName: \"greater\",\n  category: \"logical\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"GreaterEqual\",\n  dlOpName: \"greaterEqual\",\n  category: \"logical\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Less\",\n  dlOpName: \"less\",\n  category: \"logical\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"LessEqual\",\n  dlOpName: \"lessEqual\",\n  category: \"logical\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"LogicalAnd\",\n  dlOpName: \"logicalAnd\",\n  category: \"logical\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"LogicalNot\",\n  dlOpName: \"logicalNot\",\n  category: \"logical\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"LogicalOr\",\n  dlOpName: \"logicalOr\",\n  category: \"logical\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Select\",\n  dlOpName: \"where\",\n  category: \"logical\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"condition\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}],\n    logical = Object.freeze({\n  json: json$9\n}),\n    json$10 = [{\n  tfOpName: \"MatMul\",\n  dlOpName: \"matMul\",\n  category: \"matrices\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"transpose_a\",\n    dlParamName: \"transposeA\",\n    type: \"bool\",\n    defaultValue: !1\n  }, {\n    tfParamName: \"transpose_b\",\n    dlParamName: \"transposeB\",\n    type: \"bool\",\n    defaultValue: !1\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"BatchMatMul\",\n  dlOpName: \"matMul\",\n  category: \"matrices\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"a\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"b\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"adj_x\",\n    dlParamName: \"transposeA\",\n    type: \"bool\",\n    defaultValue: !1\n  }, {\n    tfParamName: \"adj_y\",\n    dlParamName: \"transposeB\",\n    type: \"bool\",\n    defaultValue: !1\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Transpose\",\n  dlOpName: \"transpose\",\n  category: \"matrices\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"perm\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"T\",\n    dlParamName: \"dtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }]\n}],\n    matrices = Object.freeze({\n  json: json$10\n}),\n    json$11 = [{\n  tfOpName: \"FusedBatchNorm\",\n  dlOpName: \"batchNormalization\",\n  category: \"normalization\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"scale\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"offset\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 3,\n    dlParamName: \"mean\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 4,\n    dlParamName: \"variance\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"epsilon\",\n    dlParamName: \"epsilon\",\n    type: \"number\",\n    defaultValue: .001\n  }, {\n    tfParamName: \"data_format\",\n    dlParamName: \"dataFormat\",\n    type: \"string\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"FusedBatchNormV2\",\n  dlOpName: \"batchNormalization\",\n  category: \"normalization\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"scale\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"offset\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 3,\n    dlParamName: \"mean\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 4,\n    dlParamName: \"variance\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"epsilon\",\n    dlParamName: \"epsilon\",\n    type: \"number\",\n    defaultValue: .001\n  }, {\n    tfParamName: \"data_format\",\n    dlParamName: \"dataFormat\",\n    type: \"string\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"LRN\",\n  dlOpName: \"localResponseNormalization\",\n  category: \"normalization\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"depth_radius\",\n    dlParamName: \"radius\",\n    type: \"number\",\n    defaultValue: 5\n  }, {\n    tfParamName: \"bias\",\n    dlParamName: \"bias\",\n    type: \"number\",\n    defaultValue: 1\n  }, {\n    tfParamName: \"alpha\",\n    dlParamName: \"alpha\",\n    type: \"number\",\n    defaultValue: 1\n  }, {\n    tfParamName: \"beta\",\n    dlParamName: \"beta\",\n    type: \"number\",\n    defaultValue: .5\n  }]\n}, {\n  tfOpName: \"Softmax\",\n  dlOpName: \"softmax\",\n  category: \"normalization\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }]\n}, {\n  tfOpName: \"LogSoftmax\",\n  dlOpName: \"logSoftmax\",\n  category: \"normalization\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }]\n}, {\n  tfOpName: \"SparseToDense\",\n  dlOpName: \"sparseToDense\",\n  category: \"normalization\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"sparseIndices\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"outputShape\",\n    type: \"number[]\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"sparseValues\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 3,\n    dlParamName: \"defaultValue\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"validate_indices\",\n    dlParamName: \"validateIndices\",\n    type: \"bool\",\n    defaultValue: !0,\n    notSupported: !0\n  }]\n}],\n    normalization = Object.freeze({\n  json: json$11\n}),\n    json$12 = [{\n  tfOpName: \"Max\",\n  dlOpName: \"max\",\n  category: \"reduction\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"axis\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"keep_dims\",\n    dlParamName: \"keepDims\",\n    type: \"bool\"\n  }]\n}, {\n  tfOpName: \"Mean\",\n  dlOpName: \"mean\",\n  category: \"reduction\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"axis\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"keep_dims\",\n    dlParamName: \"keepDims\",\n    type: \"bool\"\n  }]\n}, {\n  tfOpName: \"Min\",\n  dlOpName: \"min\",\n  category: \"reduction\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"axis\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"keep_dims\",\n    dlParamName: \"keepDims\",\n    type: \"bool\"\n  }]\n}, {\n  tfOpName: \"Sum\",\n  dlOpName: \"sum\",\n  category: \"reduction\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"axis\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"keep_dims\",\n    dlParamName: \"keepDims\",\n    type: \"bool\"\n  }]\n}, {\n  tfOpName: \"All\",\n  dlOpName: \"all\",\n  category: \"reduction\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"axis\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"keep_dims\",\n    dlParamName: \"keepDims\",\n    type: \"bool\"\n  }]\n}, {\n  tfOpName: \"Any\",\n  dlOpName: \"any\",\n  category: \"reduction\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"axis\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"keep_dims\",\n    dlParamName: \"keepDims\",\n    type: \"bool\"\n  }]\n}, {\n  tfOpName: \"ArgMax\",\n  dlOpName: \"argMax\",\n  category: \"reduction\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"axis\",\n    type: \"number\"\n  }]\n}, {\n  tfOpName: \"ArgMin\",\n  dlOpName: \"argMin\",\n  category: \"reduction\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"axis\",\n    type: \"number\"\n  }]\n}, {\n  tfOpName: \"Prod\",\n  dlOpName: \"prod\",\n  category: \"reduction\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"axis\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"keep_dims\",\n    dlParamName: \"keepDims\",\n    type: \"bool\"\n  }]\n}],\n    reduction = Object.freeze({\n  json: json$12\n}),\n    json$13 = [{\n  tfOpName: \"ConcatV2\",\n  dlOpName: \"concat\",\n  category: \"slice_join\",\n  params: [{\n    tfInputIndex: 0,\n    tfInputParamLength: 1,\n    dlParamName: \"tensors\",\n    type: \"tensors\"\n  }, {\n    tfInputIndex: -1,\n    dlParamName: \"axis\",\n    type: \"number\"\n  }]\n}, {\n  tfOpName: \"Concat\",\n  dlOpName: \"concat\",\n  category: \"slice_join\",\n  params: [{\n    tfInputIndex: 1,\n    tfInputParamLength: 1,\n    dlParamName: \"tensors\",\n    type: \"tensors\"\n  }, {\n    tfInputIndex: 0,\n    dlParamName: \"axis\",\n    type: \"number\"\n  }]\n}, {\n  tfOpName: \"GatherV2\",\n  dlOpName: \"gather\",\n  category: \"slice_join\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"indices\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"axis\",\n    type: \"number\",\n    defaultValue: 0\n  }]\n}, {\n  tfOpName: \"Gather\",\n  dlOpName: \"gather\",\n  category: \"slice_join\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"indices\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"axis\",\n    dlParamName: \"axis\",\n    type: \"number\",\n    defaultValue: 0\n  }, {\n    tfParamName: \"validate_indices\",\n    dlParamName: \"validateIndices\",\n    type: \"bool\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Reverse\",\n  dlOpName: \"reverse\",\n  category: \"slice_join\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"dims\",\n    type: \"bool\",\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"ReverseV2\",\n  dlOpName: \"reverse\",\n  category: \"slice_join\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"axis\",\n    type: \"number[]\"\n  }]\n}, {\n  tfOpName: \"Slice\",\n  dlOpName: \"slice\",\n  category: \"slice_join\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"begin\",\n    type: \"number[]\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"size\",\n    type: \"number[]\"\n  }]\n}, {\n  tfOpName: \"StridedSlice\",\n  dlOpName: \"stridedSlice\",\n  category: \"slice_join\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"begin\",\n    type: \"number[]\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"end\",\n    type: \"number[]\"\n  }, {\n    tfInputIndex: 3,\n    dlParamName: \"strides\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"begin_mask\",\n    dlParamName: \"beginMask\",\n    type: \"number\",\n    defaultValue: 0\n  }, {\n    tfParamName: \"end_mask\",\n    dlParamName: \"endMask\",\n    type: \"number\",\n    defaultValue: 0\n  }, {\n    tfParamName: \"new_axis_mask\",\n    dlParamName: \"newAxisMask\",\n    type: \"number\",\n    defaultValue: 0\n  }, {\n    tfParamName: \"ellipsis_mask\",\n    dlParamName: \"ellipsisMask\",\n    type: \"number\",\n    defaultValue: 0\n  }, {\n    tfParamName: \"shrink_axis_mask\",\n    dlParamName: \"shrinkAxisMask\",\n    type: \"number\",\n    defaultValue: 0\n  }]\n}, {\n  tfOpName: \"Pack\",\n  dlOpName: \"stack\",\n  category: \"slice_join\",\n  params: [{\n    tfInputIndex: 0,\n    tfInputParamLength: 0,\n    dlParamName: \"tensors\",\n    type: \"tensors\"\n  }, {\n    tfParamName: \"axis\",\n    dlParamName: \"axis\",\n    type: \"number\",\n    defaultValue: 0\n  }]\n}, {\n  tfOpName: \"Unpack\",\n  dlOpName: \"unstack\",\n  category: \"slice_join\",\n  params: [{\n    tfInputIndex: 0,\n    tfInputParamLength: 0,\n    dlParamName: \"tensor\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"axis\",\n    dlParamName: \"axis\",\n    type: \"number\",\n    defaultValue: 0\n  }, {\n    tfParamName: \"num\",\n    dlParamName: \"num\",\n    type: \"number\",\n    defaultValue: 0,\n    notSupported: !0\n  }]\n}, {\n  tfOpName: \"Tile\",\n  dlOpName: \"tile\",\n  category: \"slice_join\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"reps\",\n    type: \"number[]\"\n  }]\n}, {\n  tfOpName: \"Split\",\n  dlOpName: \"split\",\n  category: \"slice_join\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"axis\",\n    type: \"number\",\n    defaultValue: 0\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"num_split\",\n    dlParamName: \"numOrSizeSplits\",\n    type: \"number\",\n    defaultValue: 1\n  }]\n}, {\n  tfOpName: \"SplitV\",\n  dlOpName: \"split\",\n  category: \"slice_join\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"numOrSizeSplits\",\n    type: \"number[]\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"axis\",\n    type: \"number\",\n    defaultValue: 0\n  }]\n}, {\n  tfOpName: \"ScatterNd\",\n  dlOpName: \"scatterNd\",\n  category: \"slice_join\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"indices\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"values\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"shape\",\n    type: \"number[]\"\n  }]\n}, {\n  tfOpName: \"GatherNd\",\n  dlOpName: \"gatherNd\",\n  category: \"slice_join\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"indices\",\n    type: \"tensor\"\n  }]\n}, {\n  tfOpName: \"SparseToDense\",\n  dlOpName: \"sparseToDense\",\n  category: \"slice_join\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"sparseIndices\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"outputShape\",\n    type: \"number[]\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"sparseValues\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 3,\n    dlParamName: \"defaultValue\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"validate_indices\",\n    dlParamName: \"validateIndices\",\n    type: \"bool\",\n    defaultValue: !1,\n    notSupported: !0\n  }]\n}],\n    sliceJoin = Object.freeze({\n  json: json$13\n}),\n    json$14 = [{\n  tfOpName: \"FFT\",\n  dlOpName: \"fft\",\n  category: \"spectral\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }]\n}, {\n  tfOpName: \"IFFT\",\n  dlOpName: \"ifft\",\n  category: \"spectral\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }]\n}, {\n  tfOpName: \"RFFT\",\n  dlOpName: \"rfft\",\n  category: \"spectral\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"fft_length\",\n    type: \"number\",\n    unsupported: !0\n  }]\n}, {\n  tfOpName: \"IRFFT\",\n  dlOpName: \"irfft\",\n  category: \"spectral\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"fft_length\",\n    type: \"number\",\n    unsupported: !0\n  }]\n}],\n    spectral = Object.freeze({\n  json: json$14\n}),\n    json$15 = [{\n  tfOpName: \"Cast\",\n  dlOpName: \"cast\",\n  category: \"transformation\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"SrcT\",\n    dlParamName: \"sdtype\",\n    type: \"dtype\",\n    notSupported: !0\n  }, {\n    tfParamName: \"DstT\",\n    dlParamName: \"dtype\",\n    type: \"dtype\"\n  }]\n}, {\n  tfOpName: \"ExpandDims\",\n  dlOpName: \"expandDims\",\n  category: \"transformation\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    tfParamNameDeprecated: \"dim\",\n    dlParamName: \"axis\",\n    type: \"number\"\n  }]\n}, {\n  tfOpName: \"Pad\",\n  dlOpName: \"pad\",\n  category: \"transformation\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"padding\",\n    type: \"number[]\"\n  }, {\n    tfParamName: \"constant_value\",\n    dlParamName: \"constantValue\",\n    type: \"number\",\n    defaultValue: 0\n  }]\n}, {\n  tfOpName: \"PadV2\",\n  dlOpName: \"pad\",\n  category: \"transformation\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"padding\",\n    type: \"number[]\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"constantValue\",\n    type: \"number\",\n    defaultValue: 0\n  }]\n}, {\n  tfOpName: \"Reshape\",\n  dlOpName: \"reshape\",\n  category: \"transformation\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"shape\",\n    type: \"number[]\"\n  }]\n}, {\n  tfOpName: \"Squeeze\",\n  dlOpName: \"squeeze\",\n  category: \"transformation\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"axis\",\n    tfParamNameDeprecated: \"squeeze_dims\",\n    dlParamName: \"axis\",\n    type: \"number[]\"\n  }]\n}, {\n  tfOpName: \"SpaceToBatchND\",\n  dlOpName: \"spaceToBatchND\",\n  category: \"transformation\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"blockShape\",\n    type: \"number[]\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"paddings\",\n    type: \"number[]\"\n  }]\n}, {\n  tfOpName: \"BatchToSpaceND\",\n  dlOpName: \"batchToSpaceND\",\n  category: \"transformation\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfInputIndex: 1,\n    dlParamName: \"blockShape\",\n    type: \"number[]\"\n  }, {\n    tfInputIndex: 2,\n    dlParamName: \"crops\",\n    type: \"number[]\"\n  }]\n}, {\n  tfOpName: \"DepthToSpace\",\n  dlOpName: \"depthToSpace\",\n  category: \"transformation\",\n  params: [{\n    tfInputIndex: 0,\n    dlParamName: \"x\",\n    type: \"tensor\"\n  }, {\n    tfParamName: \"block_size\",\n    dlParamName: \"blockSize\",\n    type: \"number\"\n  }, {\n    tfParamName: \"data_format\",\n    dlParamName: \"dataFormat\",\n    type: \"string\"\n  }]\n}],\n    transformation = Object.freeze({\n  json: json$15\n}),\n    CONTROL_FLOW_OPS = [\"Switch\", \"Merge\", \"Enter\", \"Exit\", \"NextIteration\"],\n    DYNAMIC_SHAPE_OPS = [\"NonMaxSuppressionV2\", \"NonMaxSuppressionV3\", \"Where\"],\n    OperationMapper = function () {\n  function e() {\n    var e = [arithmetic, basicMath, control, convolution, creation, dynamic, evaluation, logical, image$1, graph, matrices, normalization, reduction, sliceJoin, spectral, transformation],\n        t = [].concat.apply([], e.map(function (e) {\n      return e.json;\n    }));\n    this.opMappers = t.reduce(function (e, t) {\n      return e[t.tfOpName] = t, e;\n    }, {});\n  }\n\n  return Object.defineProperty(e, \"Instance\", {\n    get: function get() {\n      return this._instance || (this._instance = new this());\n    },\n    enumerable: !0,\n    configurable: !0\n  }), e.prototype.isControlFlow = function (e) {\n    return CONTROL_FLOW_OPS.some(function (t) {\n      return t === e.op;\n    });\n  }, e.prototype.isDynamicShape = function (e) {\n    return DYNAMIC_SHAPE_OPS.some(function (t) {\n      return t === e.op;\n    });\n  }, e.prototype.transformGraph = function (e) {\n    var t = this,\n        a = !1,\n        r = !1,\n        n = [],\n        o = [],\n        s = e.node.reduce(function (e, s) {\n      return e[s.name] = t.mapNode(s), t.isControlFlow(s) && (a = !0), t.isDynamicShape(s) && (r = !0), \"Placeholder\" === s.op && n.push(e[s.name]), \"Const\" === s.op && o.push(e[s.name]), e;\n    }, {}),\n        i = [],\n        p = [];\n    return Object.keys(s).forEach(function (e) {\n      var t = s[e];\n      t.inputNames.forEach(function (e) {\n        var a = getNodeNameAndIndex(e)[0];\n        t.inputs.push(s[a]), s[a].children.push(t);\n      }), 0 === t.inputs.length && i.push(t);\n    }), Object.keys(s).forEach(function (e) {\n      var t = s[e];\n      0 === t.children.length && p.push(t);\n    }), {\n      nodes: s,\n      inputs: i,\n      outputs: p,\n      weights: o,\n      placeholders: n,\n      withControlFlow: a,\n      withDynamicShape: r\n    };\n  }, e.prototype.mapNode = function (e) {\n    var t = this,\n        a = this.opMappers[e.op];\n    if (void 0 === a) throw new Error(\"Tensorflow Op is not supported: \" + e.op);\n    var r = {\n      name: e.name,\n      op: a.dlOpName,\n      category: a.category,\n      inputNames: (e.input || []).map(function (e) {\n        return e.startsWith(\"^\") ? e.substr(1) : e;\n      }),\n      inputs: [],\n      children: [],\n      params: {}\n    };\n    return a.params && (r.params = a.params.reduce(function (a, r) {\n      var n = r.tfInputIndex,\n          o = r.tfInputParamLength,\n          s = r.type,\n          i = void 0;\n      if (void 0 === n) switch (r.type) {\n        case \"string\":\n          void 0 === (i = t.getStringParam(e.attr, r.tfParamName, r.defaultValue)) && r.tfParamNameDeprecated && (i = t.getStringParam(e.attr, r.tfParamNameDeprecated, r.defaultValue));\n          break;\n\n        case \"number\":\n          void 0 === (i = t.getNumberParam(e.attr, r.tfParamName, r.defaultValue || 0)) && r.tfParamNameDeprecated && (i = t.getNumberParam(e.attr, r.tfParamNameDeprecated, r.defaultValue));\n          break;\n\n        case \"number[]\":\n          void 0 === (i = t.getNumericArrayParam(e.attr, r.tfParamName, r.defaultValue)) && r.tfParamNameDeprecated && (i = t.getNumericArrayParam(e.attr, r.tfParamNameDeprecated, r.defaultValue));\n          break;\n\n        case \"bool\":\n          void 0 === (i = t.getBoolParam(e.attr, r.tfParamName, r.defaultValue)) && r.tfParamNameDeprecated && (i = t.getBoolParam(e.attr, r.tfParamNameDeprecated, r.defaultValue));\n          break;\n\n        case \"shape\":\n          void 0 === (i = t.getTensorShapeParam(e.attr, r.tfParamName, r.defaultValue)) && r.tfParamNameDeprecated && (i = t.getTensorShapeParam(e.attr, r.tfParamNameDeprecated, r.defaultValue));\n          break;\n\n        case \"dtype\":\n          void 0 === (i = t.getDtypeParam(e.attr, r.tfParamName, r.defaultValue)) && r.tfParamNameDeprecated && (i = t.getDtypeParam(e.attr, r.tfParamNameDeprecated, r.defaultValue));\n          break;\n\n        case \"tensor\":\n        case \"tensors\":\n          break;\n\n        default:\n          throw new Error(\"Unsupported param type: \" + r.type + \" for op: \" + e.op);\n      }\n      return a[r.dlParamName] = {\n        value: i,\n        inputIndex: n,\n        type: s,\n        inputParamLength: o\n      }, a;\n    }, {})), r;\n  }, e.prototype.getStringParam = function (e, t, a, r) {\n    void 0 === r && (r = !1);\n    var n = e[t];\n\n    if (void 0 !== n) {\n      var o = String.fromCharCode.apply(null, n.s);\n      return r ? o : o.toLowerCase();\n    }\n\n    return a;\n  }, e.prototype.getBoolParam = function (e, t, a) {\n    var r = e[t];\n    return r ? r.b : a;\n  }, e.prototype.getNumberParam = function (e, t, a) {\n    var r = e[t],\n        n = r ? r[r.value] : a;\n    return \"number\" == typeof n ? n : n.toInt();\n  }, e.prototype.getDtypeParam = function (e, t, a) {\n    var r = e[t];\n    if (r && r.type) switch (r.type) {\n      case compiled_api_1.DataType.DT_FLOAT:\n        return \"float32\";\n\n      case compiled_api_1.DataType.DT_INT32:\n        return \"int32\";\n\n      case compiled_api_1.DataType.DT_BOOL:\n        return \"bool\";\n\n      default:\n        return a;\n    }\n    return a;\n  }, e.prototype.getTensorShapeParam = function (e, t, a) {\n    var r = e[t];\n    return r && r.shape ? r.shape.dim.map(function (e) {\n      return \"number\" == typeof e.size ? e.size : e.size.toInt();\n    }) : a;\n  }, e.prototype.getNumericArrayParam = function (e, t, a) {\n    var r = e[t];\n    return r ? (r.list.f && r.list.f.length ? r.list.f : r.list.i).map(function (e) {\n      return \"number\" == typeof e ? e : e.toInt();\n    }) : a;\n  }, e;\n}(),\n    executeOp = function executeOp(e, t, a) {\n  switch (e.op) {\n    case \"add\":\n      return [add(getParamValue(\"a\", e, t, a), getParamValue(\"b\", e, t, a))];\n\n    case \"addN\":\n      return [addN(getParamValue(\"tensors\", e, t, a))];\n\n    case \"mod\":\n      return [mod(getParamValue(\"a\", e, t, a), getParamValue(\"b\", e, t, a))];\n\n    case \"mul\":\n      return [mul(getParamValue(\"a\", e, t, a), getParamValue(\"b\", e, t, a))];\n\n    case \"div\":\n      return [div(getParamValue(\"a\", e, t, a), getParamValue(\"b\", e, t, a))];\n\n    case \"floorDiv\":\n      return [floorDiv(getParamValue(\"a\", e, t, a), getParamValue(\"b\", e, t, a))];\n\n    case \"sub\":\n      return [sub(getParamValue(\"a\", e, t, a), getParamValue(\"b\", e, t, a))];\n\n    case \"minimum\":\n      return [minimum(getParamValue(\"a\", e, t, a), getParamValue(\"b\", e, t, a))];\n\n    case \"maximum\":\n      return [maximum(getParamValue(\"a\", e, t, a), getParamValue(\"b\", e, t, a))];\n\n    case \"pow\":\n      return [pow(getParamValue(\"a\", e, t, a), getParamValue(\"b\", e, t, a))];\n\n    case \"squaredDifference\":\n      return [squaredDifference(getParamValue(\"a\", e, t, a), getParamValue(\"b\", e, t, a))];\n\n    default:\n      throw TypeError(\"Node type \" + e.op + \" is not implemented\");\n  }\n},\n    executeOp$1 = function executeOp$1(e, t, a) {\n  switch (e.op) {\n    case \"abs\":\n      return [abs(getParamValue(\"x\", e, t, a))];\n\n    case \"acos\":\n      return [acos(getParamValue(\"x\", e, t, a))];\n\n    case \"acosh\":\n      return [acosh(getParamValue(\"x\", e, t, a))];\n\n    case \"asin\":\n      return [asin(getParamValue(\"x\", e, t, a))];\n\n    case \"asinh\":\n      return [asinh(getParamValue(\"x\", e, t, a))];\n\n    case \"atan\":\n      return [atan(getParamValue(\"x\", e, t, a))];\n\n    case \"atan2\":\n      return [atan2(getParamValue(\"x\", e, t, a), getParamValue(\"y\", e, t, a))];\n\n    case \"atanh\":\n      return [atanh(getParamValue(\"x\", e, t, a))];\n\n    case \"ceil\":\n      return [ceil(getParamValue(\"x\", e, t, a))];\n\n    case \"cos\":\n      return [cos(getParamValue(\"x\", e, t, a))];\n\n    case \"cosh\":\n      return [cosh(getParamValue(\"x\", e, t, a))];\n\n    case \"elu\":\n      return [elu(getParamValue(\"x\", e, t, a))];\n\n    case \"erf\":\n      return [erf(getParamValue(\"x\", e, t, a))];\n\n    case \"exp\":\n      return [exp(getParamValue(\"x\", e, t, a))];\n\n    case \"expm1\":\n      return [expm1(getParamValue(\"x\", e, t, a))];\n\n    case \"floor\":\n      return [floor(getParamValue(\"x\", e, t, a))];\n\n    case \"log\":\n      return [log(getParamValue(\"x\", e, t, a))];\n\n    case \"log1p\":\n      return [log1p(getParamValue(\"x\", e, t, a))];\n\n    case \"neg\":\n      return [neg(getParamValue(\"x\", e, t, a))];\n\n    case \"reciprocal\":\n      return [reciprocal(getParamValue(\"x\", e, t, a))];\n\n    case \"relu\":\n      return [relu(getParamValue(\"x\", e, t, a))];\n\n    case \"round\":\n      return [round(getParamValue(\"x\", e, t, a))];\n\n    case \"selu\":\n      return [selu(getParamValue(\"x\", e, t, a))];\n\n    case \"sigmoid\":\n      return [sigmoid(getParamValue(\"x\", e, t, a))];\n\n    case \"sin\":\n      return [sin(getParamValue(\"x\", e, t, a))];\n\n    case \"sign\":\n      return [sign(getParamValue(\"x\", e, t, a))];\n\n    case \"sinh\":\n      return [sinh(getParamValue(\"x\", e, t, a))];\n\n    case \"softplus\":\n      return [softplus(getParamValue(\"x\", e, t, a))];\n\n    case \"sqrt\":\n      return [sqrt(getParamValue(\"x\", e, t, a))];\n\n    case \"square\":\n      return [square(getParamValue(\"x\", e, t, a))];\n\n    case \"tanh\":\n      return [tanh(getParamValue(\"x\", e, t, a))];\n\n    case \"tan\":\n      return [tan(getParamValue(\"x\", e, t, a))];\n\n    case \"clipByValue\":\n      return [clipByValue(getParamValue(\"x\", e, t, a), getParamValue(\"clipValueMin\", e, t, a), getParamValue(\"clipValueMax\", e, t, a))];\n\n    case \"rsqrt\":\n      return [div(scalar(1, \"float32\"), sqrt(getTensor(e.inputNames[0], t, a)))];\n\n    case \"prod\":\n      return [prod(getParamValue(\"x\", e, t, a), getParamValue(\"axes\", e, t, a))];\n\n    case \"leakyRelu\":\n      return [leakyRelu(getParamValue(\"x\", e, t, a), getParamValue(\"alpha\", e, t, a))];\n\n    default:\n      throw TypeError(\"Node type \" + e.op + \" is not implemented\");\n  }\n},\n    TensorArray = function () {\n  function e(t, a, r, n, o, s, i) {\n    this.name = t, this.dtype = a, this.maxSize = r, this.elementShape = n, this.identicalElementShapes = o, this.dynamicSize = s, this.clearAfterRead = i, this.tensors = [], this.closed_ = !1, this.id = e.nextId++;\n  }\n\n  return Object.defineProperty(e.prototype, \"closed\", {\n    get: function get() {\n      return this.closed_;\n    },\n    enumerable: !0,\n    configurable: !0\n  }), e.prototype.clearAndClose = function () {\n    this.tensors.forEach(function (e) {\n      return e.tensor.dispose();\n    }), this.tensors = [], this.closed_ = !0;\n  }, e.prototype.size = function () {\n    return this.tensors.length;\n  }, e.prototype.read = function (e) {\n    if (this.closed_) throw new Error(\"TensorArray \" + this.name + \" has already been closed.\");\n    if (e < 0 || e >= this.tensors.length) throw new Error(\"Tried to read from index \" + e + \", but array size is: \" + this.tensors.length);\n    var t = this.tensors[e];\n    if (t.cleared) throw new Error(\"TensorArray \" + this.name + \": Could not read index \" + e + \" twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).\");\n    return this.clearAfterRead && (t.cleared = !0), t.read = !0, t.tensor;\n  }, e.prototype.readMany = function (e) {\n    var t = this;\n    return e.map(function (e) {\n      return t.read(e);\n    });\n  }, e.prototype.write = function (e, t) {\n    if (this.closed_) throw new Error(\"TensorArray \" + this.name + \" has already been closed.\");\n    if (e < 0 || !this.dynamicSize && e >= this.maxSize) throw new Error(\"Tried to write to index \" + e + \", but array is not resizeable and size is: \" + this.maxSize);\n    var a = this.tensors[e] || {};\n    if (t.dtype !== this.dtype) throw new Error(\"TensorArray \" + this.name + \": Could not write to TensorArray index \" + e + \",\\n          because the value dtype is \" + t.dtype + \", but TensorArray dtype is \" + this.dtype + \".\");\n    if (0 === this.size() && 0 === this.elementShape.length && (this.elementShape = t.shape), this.assertShapesMatch(this.elementShape, t.shape, \"TensorArray \" + this.name + \": Could not write to TensorArray index \" + e + \".\"), a && a.read) throw new Error(\"TensorArray \" + this.name + \": Could not write to TensorArray index \" + e + \", because it has already been read.\");\n    if (a && a.written) throw new Error(\"TensorArray \" + this.name + \": Could not write to TensorArray index \" + e + \", because it has already been written.\");\n    a.tensor = t, a.written = !0, this.tensors[e] = a;\n  }, e.prototype.writeMany = function (e, t) {\n    var a = this;\n    if (e.length !== t.length) throw new Error(\"TensorArray \" + this.name + \": could not write multiple tensors,because the index size: \" + e.length + \" is not the same as tensors size: \" + t.length + \".\");\n    e.forEach(function (e, r) {\n      return a.write(e, t[r]);\n    });\n  }, e.prototype.gather = function (e, t) {\n    if (t && t !== this.dtype) throw new Error(\"TensorArray dtype is \" + this.dtype + \" but gather requested dtype \" + t);\n\n    if (!e) {\n      e = [];\n\n      for (var a = 0; a < this.size(); a++) {\n        e.push(a);\n      }\n    }\n\n    if (0 === e.length) return tensor([], [0].concat(this.elementShape));\n    var r = this.readMany(e);\n    return this.assertShapesMatch(this.elementShape, r[0].shape, \"TensorArray shape mismatch: \"), stack(r, 0);\n  }, e.prototype.concat = function (e) {\n    if (e && e !== this.dtype) throw new Error(\"TensorArray dtype is \" + this.dtype + \" but concat requested dtype \" + e);\n    if (0 === this.size()) return tensor([], [0].concat(this.elementShape));\n\n    for (var t = [], a = 0; a < this.size(); a++) {\n      t.push(a);\n    }\n\n    var r = this.readMany(t);\n    return this.assertShapesMatch(this.elementShape, r[0].shape, \"TensorArray shape mismatch: tensor array shape (\" + this.elementShape + \") vs first tensor shape (\" + r[0].shape + \")\"), concat(r, 0);\n  }, e.prototype.scatter = function (e, t) {\n    if (t.dtype !== this.dtype) throw new Error(\"TensorArray dtype is \" + this.dtype + \" but tensor has dtype \" + t.dtype);\n    if (e.length !== t.shape[0]) throw new Error(\"Expected len(indices) == tensor.shape[0], but saw: \" + e.length + \" vs. \" + t.shape[0]);\n    var a = Math.max.apply(Math, e);\n    if (!this.dynamicSize && a >= this.maxSize) throw new Error(\"Max index must be < array size (\" + a + \"  vs. \" + this.maxSize + \")\");\n    this.writeMany(e, unstack(t, 0));\n  }, e.prototype.split = function (e, t) {\n    var a = this;\n    if (t.dtype !== this.dtype) throw new Error(\"TensorArray dtype is \" + this.dtype + \" but tensor has dtype \" + t.dtype);\n    var r = 0,\n        n = e.map(function (e) {\n      return r += e;\n    });\n    if (r !== t.shape[0]) throw new Error(\"Expected sum of lengths to be equal to\\n          tensor.shape[0], but sum of lengths is\\n        \" + r + \", and tensor's shape is: \" + t.shape);\n    if (!this.dynamicSize && e.length !== this.maxSize) throw new Error(\"TensorArray's size is not equal to the size of lengths (\" + this.maxSize + \" vs. \" + e.length + \"), and the TensorArray is not marked as dynamically resizeable\");\n    var o = 0 === r ? 0 : t.size / r,\n        s = [];\n    tidy(function () {\n      t = t.reshape([1, r, o]);\n\n      for (var i = 0; i < e.length; ++i) {\n        var p = [0, 0 === i ? 0 : n[i - 1], 0],\n            m = [1, e[i], o];\n        s[i] = slice(t, p, m).reshape(a.elementShape);\n      }\n\n      return s;\n    });\n\n    for (var i = [], p = 0; p < e.length; p++) {\n      i[p] = p;\n    }\n\n    this.writeMany(i, s);\n  }, e.prototype.assertShapesMatch = function (e, t, a) {\n    void 0 === a && (a = \"\"), util.assert(this.arraysEqual(e, t), a + \" Shapes \" + e + \" and \" + t + \" must match\");\n  }, e.prototype.arraysEqual = function (e, t) {\n    if (e.length !== t.length) return !1;\n\n    for (var a = 0; a < e.length; a++) {\n      if (-1 !== e[a] && -1 !== t[a] && e[a] !== t[a]) return !1;\n    }\n\n    return !0;\n  }, e.nextId = 0, e;\n}();\n\nfunction executeOp$2(e, t, a) {\n  return __awaiter(this, void 0, void 0, function () {\n    var r, n, o, s, i, p, m, u, l, d, f, c, y, h, N, g, P, x, b, I, v, O, V, w, T, k, S, _, A, $, D, E, j, R, C;\n\n    return __generator(this, function (L) {\n      switch (L.label) {\n        case 0:\n          switch (e.op) {\n            case \"loopCond\":\n              return [3, 1];\n\n            case \"switch\":\n              return [3, 2];\n\n            case \"merge\":\n              return [3, 4];\n\n            case \"enter\":\n              return [3, 5];\n\n            case \"exit\":\n              return [3, 6];\n\n            case \"nextIteration\":\n              return [3, 7];\n\n            case \"tensorArray\":\n              return [3, 8];\n\n            case \"tensorArrayWrite\":\n              return [3, 9];\n\n            case \"tensorArrayRead\":\n              return [3, 10];\n\n            case \"tensorArrayGather\":\n              return [3, 11];\n\n            case \"tensorArrayScatter\":\n              return [3, 12];\n\n            case \"tensorArrayConcat\":\n              return [3, 13];\n\n            case \"tensorArraySplit\":\n              return [3, 14];\n\n            case \"tensorArraySize\":\n              return [3, 15];\n\n            case \"tensorArrayClose\":\n              return [3, 16];\n          }\n\n          return [3, 17];\n\n        case 1:\n          return [2, [getParamValue(\"pred\", e, t, a).clone()]];\n\n        case 2:\n          return r = getParamValue(\"pred\", e, t, a), n = getParamValue(\"data\", e, t, a), [4, r.data()];\n\n        case 3:\n          return [2, L.sent()[0] ? [void 0, n.clone()] : [n.clone(), void 0]];\n\n        case 4:\n          return [2, (o = e.inputNames.find(function (e) {\n            return void 0 !== getTensor(e, t, a);\n          })) ? [getTensor(o, t, a).clone()] : void 0];\n\n        case 5:\n          return s = getParamValue(\"frameName\", e, t, a), i = getParamValue(\"tensor\", e, t, a), a.enterFrame(s), [2, [i.clone()]];\n\n        case 6:\n          return p = getParamValue(\"tensor\", e, t, a), a.exitFrame(), [2, [p.clone()]];\n\n        case 7:\n          return m = getParamValue(\"tensor\", e, t, a), a.nextIteration(), [2, [m.clone()]];\n\n        case 8:\n          return u = getParamValue(\"size\", e, t, a), l = getParamValue(\"dtype\", e, t, a), d = getParamValue(\"elementShape\", e, t, a), f = getParamValue(\"dynamicSize\", e, t, a), c = getParamValue(\"clearAfterRead\", e, t, a), y = getParamValue(\"identicalElementShapes\", e, t, a), h = getParamValue(\"name\", e, t, a), N = new TensorArray(h, l, u, d, y, f, c), a.addTensorArray(N), [2, [scalar(N.id), scalar(1)]];\n\n        case 9:\n          return g = getParamValue(\"tensorArrayId\", e, t, a), P = getParamValue(\"index\", e, t, a), x = getParamValue(\"tensor\", e, t, a), a.getTensorArray(g).write(P, x), [2, [scalar(1)]];\n\n        case 10:\n          return b = getParamValue(\"tensorArrayId\", e, t, a), I = getParamValue(\"index\", e, t, a), [2, [a.getTensorArray(b).read(I)]];\n\n        case 11:\n          return v = getParamValue(\"tensorArrayId\", e, t, a), O = getParamValue(\"indices\", e, t, a), V = getParamValue(\"dtype\", e, t, a), [2, [a.getTensorArray(v).gather(O, V)]];\n\n        case 12:\n          return w = getParamValue(\"tensorArrayId\", e, t, a), T = getParamValue(\"indices\", e, t, a), k = getParamValue(\"tensor\", e, t, a), a.getTensorArray(w).scatter(T, k), [2, [scalar(1)]];\n\n        case 13:\n          return S = getParamValue(\"tensorArrayId\", e, t, a), _ = a.getTensorArray(S), A = getParamValue(\"dtype\", e, t, a), [2, [_.concat(A)]];\n\n        case 14:\n          return $ = getParamValue(\"tensorArrayId\", e, t, a), D = getParamValue(\"tensor\", e, t, a), E = getParamValue(\"lengths\", e, t, a), a.getTensorArray($).split(E, D), [2, [scalar(1)]];\n\n        case 15:\n          return j = getParamValue(\"tensorArrayId\", e, t, a), R = a.getTensorArray(j), [2, [scalar(R.size(), \"int32\")]];\n\n        case 16:\n          return C = getParamValue(\"tensorArrayId\", e, t, a), a.getTensorArray(C).clearAndClose(), [2, []];\n\n        case 17:\n          throw TypeError(\"Node type \" + e.op + \" is not implemented\");\n      }\n    });\n  });\n}\n\nvar executeOp$3 = function executeOp$3(e, t, a) {\n  switch (e.op) {\n    case \"conv1d\":\n      var r = getParamValue(\"stride\", e, t, a),\n          n = getParamValue(\"pad\", e, t, a),\n          o = getParamValue(\"dataFormat\", e, t, a).toUpperCase(),\n          s = getParamValue(\"dilation\", e, t, a);\n      return [conv1d(getParamValue(\"x\", e, t, a), getParamValue(\"filter\", e, t, a), r, n, o, s)];\n\n    case \"conv2d\":\n      r = getParamValue(\"strides\", e, t, a), n = getParamValue(\"pad\", e, t, a), o = getParamValue(\"dataFormat\", e, t, a).toUpperCase();\n      var i = getParamValue(\"dilations\", e, t, a);\n      return [conv2d(getParamValue(\"x\", e, t, a), getParamValue(\"filter\", e, t, a), [r[1], r[2]], n, o, [i[0], i[1]])];\n\n    case \"conv2dTranspose\":\n      var p = getParamValue(\"outputShape\", e, t, a);\n      r = getParamValue(\"strides\", e, t, a), n = getParamValue(\"pad\", e, t, a);\n      return [conv2dTranspose(getParamValue(\"x\", e, t, a), getParamValue(\"filter\", e, t, a), p, [r[1], r[2]], n)];\n\n    case \"depthwiseConv2d\":\n      r = getParamValue(\"strides\", e, t, a), n = getParamValue(\"pad\", e, t, a), i = getParamValue(\"dilations\", e, t, a), o = getParamValue(\"dataFormat\", e, t, a).toUpperCase();\n      return [depthwiseConv2d(getParamValue(\"input\", e, t, a), getParamValue(\"filter\", e, t, a), [r[1], r[2]], n, o, [i[0], i[1]])];\n\n    case \"avgPool\":\n      r = getParamValue(\"strides\", e, t, a), n = getParamValue(\"pad\", e, t, a);\n      var m = getParamValue(\"kernelSize\", e, t, a);\n      return [avgPool(getParamValue(\"x\", e, t, a), [m[1], m[2]], [r[1], r[2]], n)];\n\n    case \"maxPool\":\n      r = getParamValue(\"strides\", e, t, a), n = getParamValue(\"pad\", e, t, a), m = getParamValue(\"kernelSize\", e, t, a);\n      return [maxPool(getParamValue(\"x\", e, t, a), [m[1], m[2]], [r[1], r[2]], n)];\n\n    default:\n      throw TypeError(\"Node type \" + e.op + \" is not implemented\");\n  }\n},\n    executeOp$4 = function executeOp$4(e, t, a) {\n  switch (e.op) {\n    case \"fill\":\n      var r = getParamValue(\"shape\", e, t, a),\n          n = getParamValue(\"dtype\", e, t, a),\n          o = getParamValue(\"value\", e, t, a);\n      return [fill(r, o, n)];\n\n    case \"linspace\":\n      var s = getParamValue(\"start\", e, t, a),\n          i = getParamValue(\"stop\", e, t, a),\n          p = getParamValue(\"num\", e, t, a);\n      return [linspace(s, i, p)];\n\n    case \"oneHot\":\n      var m = getParamValue(\"indices\", e, t, a),\n          u = getParamValue(\"depth\", e, t, a),\n          l = getParamValue(\"onValue\", e, t, a),\n          d = getParamValue(\"offValue\", e, t, a);\n      return [oneHot(m, u, l, d)];\n\n    case \"ones\":\n      return [ones(getParamValue(\"shape\", e, t, a), getParamValue(\"dtype\", e, t, a))];\n\n    case \"onesLike\":\n      return [onesLike(getParamValue(\"x\", e, t, a))];\n\n    case \"randomUniform\":\n      return [randomUniform(getParamValue(\"shape\", e, t, a), getParamValue(\"minval\", e, t, a), getParamValue(\"maxval\", e, t, a), getParamValue(\"dtype\", e, t, a))];\n\n    case \"range\":\n      s = getParamValue(\"start\", e, t, a);\n      var f = getParamValue(\"stop\", e, t, a),\n          c = getParamValue(\"step\", e, t, a);\n      return [range(s, f, c, getParamValue(\"dtype\", e, t, a))];\n\n    case \"truncatedNormal\":\n      r = getParamValue(\"shape\", e, t, a);\n      var y = getParamValue(\"mean\", e, t, a),\n          h = getParamValue(\"stdDev\", e, t, a),\n          N = getParamValue(\"seed\", e, t, a);\n      return [truncatedNormal(r, y, h, getParamValue(\"dtype\", e, t, a), N)];\n\n    case \"zeros\":\n      return [zeros(getParamValue(\"shape\", e, t, a), getParamValue(\"dtype\", e, t, a))];\n\n    case \"zerosLike\":\n      return [zerosLike(getParamValue(\"x\", e, t, a))];\n\n    default:\n      throw TypeError(\"Node type \" + e.op + \" is not implemented\");\n  }\n};\n\nfunction executeOp$5(e, t, a) {\n  return __awaiter(this, void 0, void 0, function () {\n    var r, n, o, s, i;\n    return __generator(this, function (p) {\n      switch (p.label) {\n        case 0:\n          switch (e.op) {\n            case \"nonMaxSuppression\":\n              return [3, 1];\n\n            case \"whereAsync\":\n              return [3, 3];\n\n            case \"setdiff1dAsync\":\n              return [3, 5];\n          }\n\n          return [3, 7];\n\n        case 1:\n          return r = getParamValue(\"boxes\", e, t, a), n = getParamValue(\"scores\", e, t, a), o = getParamValue(\"maxOutputSize\", e, t, a), s = getParamValue(\"iouThreshold\", e, t, a), i = getParamValue(\"scoreThreshold\", e, t, a), [4, image.nonMaxSuppressionAsync(r, n, o, s, i)];\n\n        case 2:\n          return [2, [p.sent()]];\n\n        case 3:\n          return [4, whereAsync(getParamValue(\"condition\", e, t, a))];\n\n        case 4:\n          return [2, [p.sent()]];\n\n        case 5:\n          return [4, setdiff1dAsync(getParamValue(\"x\", e, t, a), getParamValue(\"y\", e, t, a))];\n\n        case 6:\n          return [2, p.sent()];\n\n        case 7:\n          throw TypeError(\"Node type \" + e.op + \" is not implemented\");\n      }\n    });\n  });\n}\n\nvar executeOp$6 = function executeOp$6(e, t, a) {\n  switch (e.op) {\n    case \"topK\":\n      var r = getParamValue(\"x\", e, t, a),\n          n = getParamValue(\"k\", e, t, a),\n          o = getParamValue(\"sorted\", e, t, a),\n          s = topk(r, n, o);\n      return [s.values, s.indices];\n\n    default:\n      throw TypeError(\"Node type \" + e.op + \" is not implemented\");\n  }\n},\n    executeOp$7 = function executeOp$7(e, t, a) {\n  switch (e.op) {\n    case \"const\":\n      return t[e.name];\n\n    case \"placeholder\":\n      var r = getParamValue(\"default\", e, t, a);\n      return [getTensor(e.name, t, a) || r];\n\n    case \"identity\":\n    case \"stopGradient\":\n    case \"fakeQuantWithMinMaxVars\":\n      return [getParamValue(\"x\", e, t, a).clone()];\n\n    case \"snapshot\":\n      return [getParamValue(\"x\", e, t, a).clone()];\n\n    case \"shape\":\n      return [tensor1d(getParamValue(\"x\", e, t, a).shape, \"int32\")];\n\n    case \"shapeN\":\n      return getParamValue(\"x\", e, t, a).map(function (e) {\n        return tensor1d(e.shape);\n      });\n\n    case \"size\":\n      return [scalar(getParamValue(\"x\", e, t, a).size, \"int32\")];\n\n    case \"rank\":\n      return [scalar(getParamValue(\"x\", e, t, a).rank, \"int32\")];\n\n    case \"noop\":\n      return [];\n\n    case \"print\":\n      var n = getParamValue(\"x\", e, t, a),\n          o = getParamValue(\"data\", e, t, a),\n          s = getParamValue(\"message\", e, t, a),\n          i = getParamValue(\"summarize\", e, t, a);\n      console.warn(\"The graph has a tf.print() operation,usually used for debugging, which slows down performance.\"), console.log(s);\n\n      for (var p = 0; p < o.length; p++) {\n        console.log(Array.prototype.slice.call(o[0].dataSync()).slice(0, i));\n      }\n\n      return [n];\n\n    default:\n      throw TypeError(\"Node type \" + e.op + \" is not implemented\");\n  }\n},\n    executeOp$8 = function executeOp$8(e, t, a) {\n  switch (e.op) {\n    case \"resizeBilinear\":\n      var r = getParamValue(\"images\", e, t, a),\n          n = getParamValue(\"size\", e, t, a),\n          o = getParamValue(\"alignCorners\", e, t, a);\n      return [image.resizeBilinear(r, [n[0], n[1]], o)];\n\n    case \"resizeNearestNeighbor\":\n      r = getParamValue(\"images\", e, t, a), n = getParamValue(\"size\", e, t, a), o = getParamValue(\"alignCorners\", e, t, a);\n      return [image.resizeNearestNeighbor(r, [n[0], n[1]], o)];\n\n    case \"cropAndResize\":\n      var s = getParamValue(\"image\", e, t, a),\n          i = getParamValue(\"boxes\", e, t, a),\n          p = getParamValue(\"boxInd\", e, t, a),\n          m = getParamValue(\"cropSize\", e, t, a),\n          u = getParamValue(\"method\", e, t, a),\n          l = getParamValue(\"extrapolationValue\", e, t, a);\n      return [image.cropAndResize(s, i, p, m, u, l)];\n\n    default:\n      throw TypeError(\"Node type \" + e.op + \" is not implemented\");\n  }\n},\n    executeOp$9 = function executeOp$9(e, t, a) {\n  switch (e.op) {\n    case \"equal\":\n      return [equal(getParamValue(\"a\", e, t, a), getParamValue(\"b\", e, t, a))];\n\n    case \"notEqual\":\n      return [notEqual(getParamValue(\"a\", e, t, a), getParamValue(\"b\", e, t, a))];\n\n    case \"greater\":\n      return [greater(getParamValue(\"a\", e, t, a), getParamValue(\"b\", e, t, a))];\n\n    case \"greaterEqual\":\n      return [greaterEqual(getParamValue(\"a\", e, t, a), getParamValue(\"b\", e, t, a))];\n\n    case \"less\":\n      return [less(getParamValue(\"a\", e, t, a), getParamValue(\"b\", e, t, a))];\n\n    case \"lessEqual\":\n      return [lessEqual(getParamValue(\"a\", e, t, a), getParamValue(\"b\", e, t, a))];\n\n    case \"logicalAnd\":\n      return [logicalAnd(getParamValue(\"a\", e, t, a), getParamValue(\"b\", e, t, a))];\n\n    case \"logicalNot\":\n      return [logicalNot(getParamValue(\"a\", e, t, a))];\n\n    case \"logicalOr\":\n      return [logicalOr(getParamValue(\"a\", e, t, a), getParamValue(\"b\", e, t, a))];\n\n    case \"where\":\n      return [where(getParamValue(\"condition\", e, t, a), getParamValue(\"a\", e, t, a), getParamValue(\"b\", e, t, a))];\n\n    default:\n      throw TypeError(\"Node type \" + e.op + \" is not implemented\");\n  }\n},\n    executeOp$10 = function executeOp$10(e, t, a) {\n  switch (e.op) {\n    case \"matMul\":\n      return [matMul(getParamValue(\"a\", e, t, a), getParamValue(\"b\", e, t, a), getParamValue(\"transposeA\", e, t, a), getParamValue(\"transposeB\", e, t, a))];\n\n    case \"transpose\":\n      return [transpose(getParamValue(\"x\", e, t, a), getParamValue(\"perm\", e, t, a))];\n\n    default:\n      throw TypeError(\"Node type \" + e.op + \" is not implemented\");\n  }\n},\n    executeOp$11 = function executeOp$11(e, t, a) {\n  switch (e.op) {\n    case \"batchNormalization\":\n      return [batchNormalization(getParamValue(\"x\", e, t, a), getParamValue(\"mean\", e, t, a), getParamValue(\"variance\", e, t, a), getParamValue(\"epsilon\", e, t, a), getParamValue(\"scale\", e, t, a), getParamValue(\"offset\", e, t, a))];\n\n    case \"localResponseNormalization\":\n      return [localResponseNormalization(getParamValue(\"x\", e, t, a), getParamValue(\"radius\", e, t, a), getParamValue(\"bias\", e, t, a), getParamValue(\"alpha\", e, t, a), getParamValue(\"beta\", e, t, a))];\n\n    case \"softmax\":\n      return [softmax(getParamValue(\"x\", e, t, a))];\n\n    case \"logSoftmax\":\n      return [logSoftmax(getParamValue(\"x\", e, t, a))];\n\n    case \"sparseToDense\":\n      return [sparseToDense(getParamValue(\"sparseIndices\", e, t, a), getParamValue(\"outputShape\", e, t, a), getParamValue(\"sparseValues\", e, t, a), getParamValue(\"defaultValue\", e, t, a))];\n\n    default:\n      throw TypeError(\"Node type \" + e.op + \" is not implemented\");\n  }\n},\n    executeOp$12 = function executeOp$12(e, t, a) {\n  switch (e.op) {\n    case \"max\":\n      var r = getParamValue(\"axis\", e, t, a),\n          n = getParamValue(\"keepDims\", e, t, a);\n      return [max(getParamValue(\"x\", e, t, a), r, n)];\n\n    case \"mean\":\n      r = getParamValue(\"axis\", e, t, a), n = getParamValue(\"keepDims\", e, t, a);\n      return [mean(getParamValue(\"x\", e, t, a), r, n)];\n\n    case \"min\":\n      r = getParamValue(\"axis\", e, t, a), n = getParamValue(\"keepDims\", e, t, a);\n      return [min(getParamValue(\"x\", e, t, a), r, n)];\n\n    case \"sum\":\n      r = getParamValue(\"axis\", e, t, a), n = getParamValue(\"keepDims\", e, t, a);\n      return [sum(getParamValue(\"x\", e, t, a), r, n)];\n\n    case \"all\":\n      r = getParamValue(\"axis\", e, t, a), n = getParamValue(\"keepDims\", e, t, a);\n      return [all(getParamValue(\"x\", e, t, a), r, n)];\n\n    case \"any\":\n      r = getParamValue(\"axis\", e, t, a), n = getParamValue(\"keepDims\", e, t, a);\n      return [any(getParamValue(\"x\", e, t, a), r, n)];\n\n    case \"argMax\":\n      r = getParamValue(\"axis\", e, t, a);\n      return [argMax(getParamValue(\"x\", e, t, a), r)];\n\n    case \"argMin\":\n      r = getParamValue(\"axis\", e, t, a);\n      return [argMin(getParamValue(\"x\", e, t, a), r)];\n\n    case \"prod\":\n      r = getParamValue(\"axis\", e, t, a), n = getParamValue(\"keepDims\", e, t, a);\n      return [prod(getParamValue(\"x\", e, t, a), r, n)];\n\n    default:\n      throw TypeError(\"Node type \" + e.op + \" is not implemented\");\n  }\n},\n    executeOp$13 = function executeOp$13(e, t, a) {\n  switch (e.op) {\n    case \"concat\":\n      var r = getParamValue(\"axis\", e, t, a),\n          n = getParamValue(\"tensors\", e, t, a);\n      return [concat(n, r)];\n\n    case \"gather\":\n      r = getParamValue(\"axis\", e, t, a);\n      var o = getParamValue(\"x\", e, t, a),\n          s = getParamValue(\"indices\", e, t, a);\n      return [gather(o, s, r)];\n\n    case \"reverse\":\n      r = getParamValue(\"axis\", e, t, a), o = getParamValue(\"x\", e, t, a);\n      return [reverse(o, r)];\n\n    case \"slice\":\n      var i = getParamValue(\"begin\", e, t, a),\n          p = getParamValue(\"size\", e, t, a);\n      return [slice(getParamValue(\"x\", e, t, a), i, p)];\n\n    case \"stridedSlice\":\n      i = getParamValue(\"begin\", e, t, a);\n      var m = getParamValue(\"end\", e, t, a),\n          u = getParamValue(\"strides\", e, t, a),\n          l = getParamValue(\"beginMask\", e, t, a),\n          d = getParamValue(\"endMask\", e, t, a),\n          f = getParamValue(\"ellipsisMask\", e, t, a),\n          c = getParamValue(\"newAxisMask\", e, t, a),\n          y = getParamValue(\"shrinkAxisMask\", e, t, a),\n          h = getParamValue(\"x\", e, t, a);\n      if (1 === i.length && h.shape.length > 1) for (var N = 1; N < h.shape.length; N++) {\n        i.push(0), m.push(h.shape[N]), u.push(u[0]);\n      }\n      return [stridedSlice(h, i, m, u, l, d, f, c, y)];\n\n    case \"stack\":\n      return tidy(function () {\n        var r = getParamValue(\"axis\", e, t, a),\n            n = getParamValue(\"tensors\", e, t, a),\n            o = n[0].shape,\n            s = n[0].squeeze().shape,\n            i = n.map(function (e) {\n          var t = util.arraysEqual(e.shape, o);\n          if (!t && !util.arraysEqual(e.squeeze().shape, s)) throw new Error(\"the input tensors shape does not match\");\n          return t ? e : e.reshape(o);\n        });\n        return [stack(i, r)];\n      });\n\n    case \"unstack\":\n      return tidy(function () {\n        var r = getParamValue(\"axis\", e, t, a),\n            n = getParamValue(\"tensor\", e, t, a);\n        return unstack(n, r);\n      });\n\n    case \"tile\":\n      var g = getParamValue(\"reps\", e, t, a);\n      return [tile(getParamValue(\"x\", e, t, a), g)];\n\n    case \"split\":\n      r = getParamValue(\"axis\", e, t, a);\n      var P = getParamValue(\"numOrSizeSplits\", e, t, a);\n      return split(getParamValue(\"x\", e, t, a), P, r);\n\n    case \"scatterNd\":\n      s = getParamValue(\"indices\", e, t, a);\n      var x = getParamValue(\"values\", e, t, a),\n          b = getParamValue(\"shape\", e, t, a);\n      return [scatterND(s, x, b)];\n\n    case \"gatherNd\":\n      var I = getParamValue(\"x\", e, t, a);\n      s = getParamValue(\"indices\", e, t, a);\n      return [gatherND(I, s)];\n\n    case \"sparseToDense\":\n      s = getParamValue(\"sparseIndices\", e, t, a), b = getParamValue(\"outputShape\", e, t, a);\n      var v = getParamValue(\"sparseValues\", e, t, a),\n          O = getParamValue(\"defaultValue\", e, t, a);\n      return [sparseToDense(s, v, b, O)];\n\n    default:\n      throw TypeError(\"Node type \" + e.op + \" is not implemented\");\n  }\n},\n    executeOp$14 = function executeOp$14(e, t, a) {\n  switch (e.op) {\n    case \"fft\":\n      return [fft(getParamValue(\"x\", e, t, a))];\n\n    case \"ifft\":\n      return [ifft(getParamValue(\"x\", e, t, a))];\n\n    case \"rfft\":\n      return [rfft(getParamValue(\"x\", e, t, a))];\n\n    case \"irfft\":\n      return [irfft(getParamValue(\"x\", e, t, a))];\n\n    default:\n      throw TypeError(\"Node type \" + e.op + \" is not implemented\");\n  }\n},\n    executeOp$15 = function executeOp$15(e, t, a) {\n  switch (e.op) {\n    case \"cast\":\n      return [cast(getParamValue(\"x\", e, t, a), getParamValue(\"dtype\", e, t, a))];\n\n    case \"expandDims\":\n      var r = getParamValue(\"axis\", e, t, a);\n      return [expandDims(getParamValue(\"x\", e, t, a), r)];\n\n    case \"squeeze\":\n      r = getParamValue(\"axis\", e, t, a);\n      return [squeeze(getParamValue(\"x\", e, t, a), r)];\n\n    case \"reshape\":\n      return [reshape(getParamValue(\"x\", e, t, a), getParamValue(\"shape\", e, t, a))];\n\n    case \"pad\":\n      return [pad(getParamValue(\"x\", e, t, a), split$1(getParamValue(\"padding\", e, t, a), 2), getParamValue(\"constantValue\", e, t, a))];\n\n    case \"spaceToBatchND\":\n      var n = getParamValue(\"blockShape\", e, t, a),\n          o = split$1(getParamValue(\"paddings\", e, t, a), 2);\n      return [spaceToBatchND(getParamValue(\"x\", e, t, a), n, o)];\n\n    case \"batchToSpaceND\":\n      n = getParamValue(\"blockShape\", e, t, a);\n      var s = split$1(getParamValue(\"crops\", e, t, a), 2);\n      return [batchToSpaceND(getParamValue(\"x\", e, t, a), n, s)];\n\n    case \"depthToSpace\":\n      var i = getParamValue(\"blockSize\", e, t, a),\n          p = getParamValue(\"dataFormat\", e, t, a);\n      return [depthToSpace(getParamValue(\"x\", e, t, a), i, p)];\n\n    default:\n      throw TypeError(\"Node type \" + e.op + \" is not implemented\");\n  }\n};\n\nfunction executeOp$16(e, t, a) {\n  switch (e.category) {\n    case \"arithmetic\":\n      return executeOp(e, t, a);\n\n    case \"basic_math\":\n      return executeOp$1(e, t, a);\n\n    case \"control\":\n      return executeOp$2(e, t, a);\n\n    case \"convolution\":\n      return executeOp$3(e, t, a);\n\n    case \"creation\":\n      return executeOp$4(e, t, a);\n\n    case \"dynamic\":\n      return executeOp$5(e, t, a);\n\n    case \"evaluation\":\n      return executeOp$6(e, t, a);\n\n    case \"image\":\n      return executeOp$8(e, t, a);\n\n    case \"graph\":\n      return executeOp$7(e, t, a);\n\n    case \"logical\":\n      return executeOp$9(e, t, a);\n\n    case \"matrices\":\n      return executeOp$10(e, t, a);\n\n    case \"normalization\":\n      return executeOp$11(e, t, a);\n\n    case \"reduction\":\n      return executeOp$12(e, t, a);\n\n    case \"slice_join\":\n      return executeOp$13(e, t, a);\n\n    case \"spectral\":\n      return executeOp$14(e, t, a);\n\n    case \"transformation\":\n      return executeOp$15(e, t, a);\n\n    default:\n      throw TypeError(\"Node type \" + e.op + \" is not implemented\");\n  }\n}\n\nvar ExecutionContext = function () {\n  function e(e, t) {\n    this.weightMap = e, this.tensorArrayMap = t, this.rootContext = {\n      id: 0,\n      frameName: \"\",\n      iterationId: 0\n    }, this.contexts = [this.rootContext], this.lastId = 0, this.generateCurrentContextIds();\n  }\n\n  return e.prototype.newFrame = function (e, t) {\n    return {\n      id: e,\n      frameName: t,\n      iterationId: 0\n    };\n  }, Object.defineProperty(e.prototype, \"currentContext\", {\n    get: function get() {\n      return this.contexts;\n    },\n    set: function set(e) {\n      this.contexts !== e && (this.contexts = e, this.generateCurrentContextIds());\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(e.prototype, \"currentContextId\", {\n    get: function get() {\n      return this._currentContextIds[0];\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(e.prototype, \"currentContextIds\", {\n    get: function get() {\n      return this._currentContextIds;\n    },\n    enumerable: !0,\n    configurable: !0\n  }), e.prototype.generateCurrentContextIds = function () {\n    for (var e = [], t = 0; t < this.contexts.length - 1; t++) {\n      var a = this.contexts.slice(0, this.contexts.length - t);\n      e.push(this.contextIdforContexts(a));\n    }\n\n    e.push(\"\"), this._currentContextIds = e;\n  }, e.prototype.contextIdforContexts = function (e) {\n    return e ? e.map(function (e) {\n      return 0 === e.id && 0 === e.iterationId ? \"\" : e.frameName + \"-\" + e.iterationId;\n    }).join(\"/\") : \"\";\n  }, e.prototype.enterFrame = function (e) {\n    this.contexts && (this.lastId++, this.contexts = this.contexts.slice(), this.contexts.push(this.newFrame(this.lastId, e)), this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)));\n  }, e.prototype.exitFrame = function () {\n    if (!(this.contexts && this.contexts.length > 1)) throw new Error(\"Cannot exit frame, the context is empty\");\n    this.contexts = this.contexts.slice(), this.contexts.splice(-1), this.currentContextIds.shift();\n  }, e.prototype.nextIteration = function () {\n    if (!(this.contexts && this.contexts.length > 0)) throw new Error(\"Cannot increase frame iteration, the context is empty\");\n    this.contexts = this.contexts.slice(), this.lastId++;\n    var e = Object.assign({}, this.contexts[this.contexts.length - 1]);\n    e.iterationId += 1, e.id = this.lastId, this.contexts.splice(-1, 1, e), this._currentContextIds.splice(0, 1, this.contextIdforContexts(this.contexts));\n  }, e.prototype.getWeight = function (e) {\n    return this.weightMap[e];\n  }, e.prototype.addTensorArray = function (e) {\n    this.tensorArrayMap[e.id] = e;\n  }, e.prototype.getTensorArray = function (e) {\n    return this.tensorArrayMap[e];\n  }, e;\n}(),\n    GraphExecutor = function () {\n  function e(e) {\n    this.graph = e, this.compiledMap = new Map(), this._weightMap = {}, this.SEPERATOR = \",\", this.placeholders = e.placeholders, this._outputs = e.outputs, this.compile();\n  }\n\n  return Object.defineProperty(e.prototype, \"weightMap\", {\n    get: function get() {\n      return this._weightMap;\n    },\n    set: function set(e) {\n      var t = Object.keys(e).map(function (t) {\n        return e[t].map(function (e) {\n          return e.id;\n        });\n      });\n      this.weightIds = [].concat.apply([], t), this._weightMap = e;\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(e.prototype, \"inputs\", {\n    get: function get() {\n      return this.placeholders.map(function (e) {\n        return {\n          name: e.name,\n          shape: e.params.shape ? e.params.shape.value : void 0,\n          dtype: e.params.dtype ? e.params.dtype.value : void 0\n        };\n      });\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(e.prototype, \"outputs\", {\n    get: function get() {\n      return this._outputs.map(function (e) {\n        return {\n          name: e.name,\n          shape: e.params.shape ? e.params.shape.value : void 0,\n          dtype: e.params.dtype ? e.params.dtype.value : void 0\n        };\n      });\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(e.prototype, \"inputNodes\", {\n    get: function get() {\n      return this.placeholders.map(function (e) {\n        return e.name;\n      });\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(e.prototype, \"outputNodes\", {\n    get: function get() {\n      return this.outputs.map(function (e) {\n        return e.name;\n      });\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(e.prototype, \"isControlFlowModel\", {\n    get: function get() {\n      return this.graph.withControlFlow;\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(e.prototype, \"isDynamicShapeModel\", {\n    get: function get() {\n      return this.graph.withDynamicShape;\n    },\n    enumerable: !0,\n    configurable: !0\n  }), e.prototype.compile = function (e) {\n    if (!this.graph.withControlFlow && !this.graph.withDynamicShape) {\n      var t = [],\n          a = e || this.graph.placeholders,\n          r = a.map(function (e) {\n        return e.name;\n      }).sort().join(this.SEPERATOR);\n\n      if (!this.compiledMap.get(r)) {\n        for (var n = a.concat(this.graph.weights), o = {}; n.length > 0;) {\n          var s = n.pop();\n          o[s.name] = !0, t.push(s), s.children.forEach(function (e) {\n            !o[e.name] && e.inputNames.every(function (e) {\n              var t = getNodeNameAndIndex(e)[0];\n              return o[t];\n            }) && n.push(e);\n          });\n        }\n\n        this.compiledMap.set(r, t);\n      }\n    }\n  }, e.prototype.execute = function (e, t, a) {\n    var r = this;\n    void 0 === t && (t = !0);\n    var n = Object.keys(e).sort();\n    this.checkInput(e, t), this.checkInputShapeAndType(e, t), this.compile(n.map(function (e) {\n      return r.graph.nodes[e];\n    }));\n    var o = this.calculateOutputs(a);\n    this.checkOutput(this.compiledMap.get(n.join(this.SEPERATOR)), o);\n    var s = {};\n    return tidy(function () {\n      for (var t = new ExecutionContext(r._weightMap, s), a = __assign({}, r.weightMap, e), i = r.getFrozenTensorIds(a), p = {}, m = r.compiledMap.get(n.join(r.SEPERATOR)), u = 0; u < m.length; u++) {\n        var l = m[u];\n        if (a[l.name] || (a[l.name] = executeOp$16(l, a, t), r.checkTensorForDisposal(l.name, l, a, t, i, o, p)), o.every(function (e) {\n          return !!a[e];\n        })) break;\n      }\n\n      return r.findOutputs(a, t, o);\n    });\n  }, e.prototype.getFrozenTensorIds = function (e) {\n    var t = [].concat.apply([], Object.keys(e).map(function (t) {\n      return e[t];\n    }).map(function (e) {\n      return e.map(function (e) {\n        return e.id;\n      });\n    }));\n    return new Set(t);\n  }, e.prototype.checkTensorForDisposal = function (e, t, a, r, n, o, s) {\n    \"control\" !== t.category && -1 === o.indexOf(e) && (a[e].forEach(function (e) {\n      null != e && (s[e.id] = (s[e.id] || 0) + t.children.length);\n    }), t.inputs.forEach(function (e) {\n      if (\"control\" !== e.category) {\n        var t = getTensorsForCurrentContenxt(e.name, a, r);\n        null != t && t.forEach(function (e) {\n          if (e && !n.has(e.id)) {\n            var t = s[e.id];\n            1 === t ? (e.dispose(), delete s[e.id]) : null != t && s[e.id]--;\n          }\n        });\n      }\n    }));\n  }, e.prototype.executeAsync = function (e, t) {\n    return __awaiter(this, void 0, void 0, function () {\n      var a,\n          r,\n          n,\n          o,\n          s,\n          i,\n          p,\n          m,\n          u = this;\n      return __generator(this, function (l) {\n        switch (l.label) {\n          case 0:\n            return this.checkInput(e, !1), this.checkInputShapeAndType(e, !1), a = {}, r = new ExecutionContext(this._weightMap, a), n = this.calculateOutputs(t), [4, this.executeWithControlFlow(e, r, n)];\n\n          case 1:\n            return o = l.sent(), s = this.findOutputs(o, r, t), i = Object.keys(s).map(function (e) {\n              return s[e].id;\n            }), p = Object.keys(e).map(function (t) {\n              return e[t].map(function (e) {\n                return e.id;\n              });\n            }), m = [].concat.apply([], p), Object.keys(o).forEach(function (e) {\n              o[e].forEach(function (e) {\n                e && -1 === i.indexOf(e.id) && -1 === m.indexOf(e.id) && -1 === u.weightIds.indexOf(e.id) && e.dispose();\n              });\n            }), [2, s];\n        }\n      });\n    });\n  }, e.prototype.executeWithControlFlow = function (e, t, a) {\n    return __awaiter(this, void 0, void 0, function () {\n      var r,\n          n,\n          o,\n          s,\n          i,\n          p,\n          m,\n          u,\n          l = this;\n      return __generator(this, function (d) {\n        switch (d.label) {\n          case 0:\n            r = Object.keys(e), n = r.map(function (e) {\n              return l.graph.nodes[e];\n            }), o = n.concat(this.graph.weights).map(function (e) {\n              return {\n                node: e,\n                contexts: t.currentContext\n              };\n            }), s = __assign({}, this.weightMap, e), i = {}, p = this.getFrozenTensorIds(s), m = {}, d.label = 1;\n\n          case 1:\n            return o.length > 0 ? (u = this.processStack(n, o, t, s, m, p, a, i), [4, Promise.all(u)]) : [3, 3];\n\n          case 2:\n            return d.sent(), [3, 1];\n\n          case 3:\n            return [2, s];\n        }\n      });\n    });\n  }, e.prototype.processStack = function (e, t, a, r, n, o, s, i) {\n    for (var p = this, m = [], u = function u() {\n      var u = t.pop();\n      a.currentContext = u.contexts;\n      var d = \"\";\n\n      if (\"enter\" === u.node.op && getParamValue(\"isConstant\", u.node, r, a) && (d = getNodeNameAndIndex(u.node.name, a)[0]), -1 === e.indexOf(u.node)) {\n        var f = executeOp$16(u.node, r, a);\n        d || (d = getNodeNameAndIndex(u.node.name, a)[0]);\n        var c = a.currentContext;\n        f instanceof Promise ? m.push(f.then(function (e) {\n          return r[d] = e, a.currentContext = c, p.checkTensorForDisposal(d, u.node, r, a, o, s, i), p.processChildNodes(u.node, t, a, r, n), e;\n        })) : (r[d] = f, l.checkTensorForDisposal(d, u.node, r, a, o, s, i), l.processChildNodes(u.node, t, a, r, n));\n      } else l.processChildNodes(u.node, t, a, r, n);\n    }, l = this; t.length > 0;) {\n      u();\n    }\n\n    return m;\n  }, e.prototype.processChildNodes = function (e, t, a, r, n) {\n    e.children.forEach(function (e) {\n      var o = getNodeNameAndIndex(e.name, a)[0];\n      n[o] || (\"merge\" === e.op ? e.inputNames.some(function (e) {\n        return !!getTensor(e, r, a);\n      }) && (n[o] = !0, t.push({\n        contexts: a.currentContext,\n        node: e\n      })) : e.inputNames.every(function (e) {\n        return !!getTensor(e, r, a);\n      }) && (n[o] = !0, t.push({\n        contexts: a.currentContext,\n        node: e\n      })));\n    });\n  }, e.prototype.calculateOutputs = function (e) {\n    return !e || e instanceof Array || (e = [e]), e || this.graph.outputs.map(function (e) {\n      return e.name;\n    });\n  }, e.prototype.findOutputs = function (e, t, a) {\n    return this.calculateOutputs(a).reduce(function (a, r) {\n      return a[r] = getTensor(r, e, t), a;\n    }, {});\n  }, e.prototype.dispose = function () {\n    var e = this;\n    Object.keys(this.weightMap).forEach(function (t) {\n      return e.weightMap[t].forEach(function (e) {\n        return e.dispose();\n      });\n    });\n  }, e.prototype.checkInputShapeAndType = function (e, t) {\n    void 0 === t && (t = !0), this.placeholders.forEach(function (a) {\n      var r = e[a.name];\n\n      if (t || r) {\n        var n = r[0];\n\n        if (a.params.shape && a.params.shape.value) {\n          var o = a.params.shape.value,\n              s = o.length === n.shape.length && n.shape.every(function (e, t) {\n            return -1 === o[t] || o[t] === e;\n          });\n          util.assert(s, \"The shape of dict['\" + a.name + \"'] provided in model.execute(dict) must be [\" + o + \"], but was [\" + n.shape + \"]\");\n        }\n\n        a.params.dtype && a.params.dtype.value && util.assert(n.dtype === a.params.dtype.value, \"The dtype of dict['\" + a.name + \"'] provided in model.execute(dict) must be \" + a.params.dtype.value + \", but was \" + n.dtype);\n      }\n    });\n  }, e.prototype.checkInput = function (e, t) {\n    var a = this;\n    void 0 === t && (t = !0);\n    var r = Object.keys(e),\n        n = [],\n        o = [];\n    this.inputNodes.forEach(function (e) {\n      -1 === r.indexOf(e) && n.push(e);\n    }), r.forEach(function (e) {\n      -1 === a.inputNodes.indexOf(e) && o.push(e);\n    });\n    var s = o.filter(function (e) {\n      return !a.graph.nodes[e];\n    });\n    if (n.length > 0 && t) throw new Error(\"The dict provided in model.execute(dict) has the keys [\" + r + \"], but is missing the required keys: [\" + n + \"].\");\n    if (o.length > 0 && t) throw new Error(\"The dict provided in model.execute(dict) has unused keys: [\" + o + \"]. Please provide only the following keys: [\" + this.inputNodes + \"].\");\n    if (s.length > 0) throw new Error(\"The dict provided in model.execute(dict) has keys: [\" + s + \"] not part of model graph.\");\n  }, e.prototype.checkOutput = function (e, t) {\n    var a = e.map(function (e) {\n      return e.name;\n    }),\n        r = [];\n    if (t.forEach(function (e) {\n      -1 === a.indexOf(e) && r.push(e);\n    }), r.length > 0) throw new Error(\"The following outputs are not generated by the execution: [\" + r + \"].\");\n  }, e;\n}(),\n    TFHUB_SEARCH_PARAM = \"?tfjs-format=file\",\n    DEFAULT_MODEL_NAME = \"tensorflowjs_model.pb\",\n    DEFAULT_MANIFEST_NAME = \"weights_manifest.json\",\n    FrozenModel = function () {\n  function e(e, t, a, r) {\n    this.modelUrl = e, this.weightManifestUrl = t, this.requestOption = a, this.weightPrefix = r, this.version = \"n/a\";\n  }\n\n  return Object.defineProperty(e.prototype, \"modelVersion\", {\n    get: function get() {\n      return this.version;\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(e.prototype, \"inputNodes\", {\n    get: function get() {\n      return this.executor.inputNodes;\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(e.prototype, \"outputNodes\", {\n    get: function get() {\n      return this.executor.outputNodes;\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(e.prototype, \"inputs\", {\n    get: function get() {\n      return this.executor.inputs;\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(e.prototype, \"outputs\", {\n    get: function get() {\n      return this.executor.outputs;\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(e.prototype, \"weights\", {\n    get: function get() {\n      return this.executor.weightMap;\n    },\n    enumerable: !0,\n    configurable: !0\n  }), e.prototype.findIOHandler = function () {\n    var e = [this.modelUrl, this.weightManifestUrl];\n    if (this.requestOption) this.handler = io.browserHTTPRequest(e, this.requestOption, this.weightPrefix);else {\n      var t = io.getLoadHandlers(e);\n      if (0 === t.length) t.push(io.browserHTTPRequest(e, this.requestOption));else if (t.length > 1) throw new Error(\"Found more than one (\" + t.length + \") load handlers for URL '\" + [e] + \"'\");\n      this.handler = t[0];\n    }\n  }, e.prototype.load = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var e, t, a;\n      return __generator(this, function (r) {\n        switch (r.label) {\n          case 0:\n            if (this.findIOHandler(), null == this.handler.load) throw new Error(\"Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.\");\n            return [4, this.handler.load()];\n\n          case 1:\n            return e = r.sent(), t = compiled_api_1.GraphDef.decode(new Uint8Array(e.modelTopology)), this.version = t.versions.producer + \".\" + t.versions.minConsumer, a = io.decodeWeights(e.weightData, e.weightSpecs), this.executor = new GraphExecutor(OperationMapper.Instance.transformGraph(t)), this.executor.weightMap = this.convertTensorMapToTensorsMap(a), [2, !0];\n        }\n      });\n    });\n  }, e.prototype.predict = function (e, t) {\n    return this.execute_(e, !0, this.outputNodes);\n  }, e.prototype.constructTensorMap = function (e) {\n    var t = e instanceof Tensor ? [e] : e;\n    if (t.length !== this.inputNodes.length) throw new Error(\"Input tensor count mismatch,the frozen model has \" + this.inputNodes.length + \" placeholders, while there are \" + t.length + \" input tensors.\");\n    return this.inputNodes.reduce(function (e, a, r) {\n      return e[a] = t[r], e;\n    }, {});\n  }, e.prototype.execute = function (e, t) {\n    return this.execute_(e, !1, t);\n  }, e.prototype.execute_ = function (e, t, a) {\n    if (void 0 === t && (t = !0), a = a || this.outputNodes, (e instanceof Tensor || Array.isArray(e)) && (e = this.constructTensorMap(e)), this.executor.isControlFlowModel || this.executor.isDynamicShapeModel) throw new Error(\"The model contains control flow or dynamic shape ops, please use executeAsync method\");\n    var r = this.executor.execute(this.convertTensorMapToTensorsMap(e), t, a),\n        n = Object.keys(r);\n    return Array.isArray(a) && a.length > 1 ? a.map(function (e) {\n      return r[e];\n    }) : r[n[0]];\n  }, e.prototype.executeAsync = function (e, t) {\n    return __awaiter(this, void 0, void 0, function () {\n      var a, r;\n      return __generator(this, function (n) {\n        switch (n.label) {\n          case 0:\n            if (!this.executor.isControlFlowModel && !this.executor.isDynamicShapeModel) throw new Error(\"The model does not contain control flow or dynamic shape ops, please use execute method for better performance.\");\n            return t = t || this.outputNodes, (e instanceof Tensor || Array.isArray(e)) && (e = this.constructTensorMap(e)), [4, this.executor.executeAsync(this.convertTensorMapToTensorsMap(e), t)];\n\n          case 1:\n            return a = n.sent(), r = Object.keys(a), [2, Array.isArray(t) && t.length > 1 ? t.map(function (e) {\n              return a[e];\n            }) : a[r[0]]];\n        }\n      });\n    });\n  }, e.prototype.convertTensorMapToTensorsMap = function (e) {\n    return Object.keys(e).reduce(function (t, a) {\n      return t[a] = [e[a]], t;\n    }, {});\n  }, e.prototype.dispose = function () {\n    this.executor.dispose();\n  }, e;\n}();\n\nfunction loadFrozenModel(e, t, a) {\n  return __awaiter(this, void 0, void 0, function () {\n    var r;\n    return __generator(this, function (n) {\n      switch (n.label) {\n        case 0:\n          return [4, (r = new FrozenModel(e, t, a)).load()];\n\n        case 1:\n          return n.sent(), [2, r];\n      }\n    });\n  });\n}\n\nfunction loadTfHubModule(e, t) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (a) {\n      return e.endsWith(\"/\") || (e += \"/\"), [2, loadFrozenModel(\"\" + e + DEFAULT_MODEL_NAME + TFHUB_SEARCH_PARAM, \"\" + e + DEFAULT_MANIFEST_NAME + TFHUB_SEARCH_PARAM, t)];\n    });\n  });\n}\n\nvar version = \"0.7.2\";\nexport { FrozenModel, loadFrozenModel, loadTfHubModule, version as version_converter };","map":{"version":3,"sources":["../node_modules/@protobufjs/aspromise/index.js","../node_modules/@protobufjs/base64/index.js","../node_modules/@protobufjs/eventemitter/index.js","../node_modules/@protobufjs/float/index.js","../node_modules/@protobufjs/inquire/index.js","../node_modules/@protobufjs/utf8/index.js","../node_modules/@protobufjs/pool/index.js","../node_modules/protobufjs/src/util/longbits.js","../node_modules/protobufjs/src/util/minimal.js","../node_modules/protobufjs/src/writer.js","../node_modules/protobufjs/src/writer_buffer.js","../node_modules/protobufjs/src/reader.js","../node_modules/protobufjs/src/reader_buffer.js","../node_modules/protobufjs/src/rpc/service.js","../node_modules/protobufjs/src/rpc.js","../node_modules/protobufjs/src/index-minimal.js","../node_modules/protobufjs/minimal.js","../src/data/compiled_api.js","../src/operations/executors/utils.ts","../src/operations/op_list/arithmetic.ts","../src/operations/op_list/basic_math.ts","../src/operations/op_list/control.ts","../src/operations/op_list/convolution.ts","../src/operations/op_list/creation.ts","../src/operations/op_list/dynamic.ts","../src/operations/op_list/evaluation.ts","../src/operations/op_list/graph.ts","../src/operations/op_list/image.ts","../src/operations/op_list/logical.ts","../src/operations/op_list/matrices.ts","../src/operations/op_list/normalization.ts","../src/operations/op_list/reduction.ts","../src/operations/op_list/slice_join.ts","../src/operations/op_list/spectral.ts","../src/operations/op_list/transformation.ts","../src/operations/operation_mapper.ts","../src/operations/executors/arithmetic_executor.ts","../src/operations/executors/basic_math_executor.ts","../src/executor/tensor_array.ts","../src/operations/executors/control_executor.ts","../src/operations/executors/convolution_executor.ts","../src/operations/executors/creation_executor.ts","../src/operations/executors/dynamic_executor.ts","../src/operations/executors/evaluation_executor.ts","../src/operations/executors/graph_executor.ts","../src/operations/executors/image_executor.ts","../src/operations/executors/logical_executor.ts","../src/operations/executors/matrices_executor.ts","../src/operations/executors/normalization_executor.ts","../src/operations/executors/reduction_executor.ts","../src/operations/executors/slice_join_executor.ts","../src/operations/executors/spectral_executor.ts","../src/operations/executors/transformation_executor.ts","../src/operations/operation_executor.ts","../src/executor/execution_context.ts","../src/executor/graph_executor.ts","../src/executor/frozen_model.ts","../src/version.ts"],"names":["asPromise","fn","ctx","params","Array","arguments","length","offset","index","pending","Promise","resolve","reject","err","apply","base64","exports","string","p","n","charAt","Math","ceil","b64","s64","i","encode","buffer","start","end","parts","chunk","j","t","b","push","String","fromCharCode","slice","join","decode","c","charCodeAt","undefined","Error","test","EventEmitter","this","_listeners","prototype","on","evt","off","listeners","splice","emit","args","factory","Float32Array","f32","f8b","Uint8Array","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","writeFloatLE","writeFloatBE","readFloat_f32_cpy","readFloat_f32_rev","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","floor","log","LN2","pow","bind","writeUintLE","writeUintBE","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDouble_f64_cpy","readDouble_f64_rev","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","replace","Object","keys","e","utf8","len","read","write","c1","c2","pool","alloc","size","SIZE","MAX","slab","call","LongBits","zero","toNumber","zzEncode","zzDecode","zeroHash","fromNumber","value","from","util","isString","Long","fromString","parseInt","low","high","unsigned","toLong","Boolean","fromHash","hash","toHash","mask","part0","part1","part2","require$$0","require$$1","require$$2","float","require$$3","require$$4","require$$5","require$$6","require$$7","emptyArray","freeze","emptyObject","isNode","global","process","versions","node","isInteger","Number","isFinite","isObject","isset","isSet","obj","prop","hasOwnProperty","isArray","Buffer","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","bits","fromBits","merge","dst","src","ifNotSet","lcFirst","str","toLowerCase","substring","newError","name","CustomError","message","properties","defineProperty","get","captureStackTrace","stack","create","constructor","toString","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","bytes","json","_configure","encoding","allocUnsafe","Writer","BufferWriter","Op","next","noop","State","writer","head","tail","states","subarray","_push","writeByte","writeVarint32","VarintOp","uint32","int32","writeVarint64","sint32","uint64","int64","sint64","bool","writeFixed32","fixed32","sfixed32","fixed64","sfixed64","double","writeBytes","set","fork","reset","ldelim","finish","BufferWriter_","writeBytesBuffer","copy","writeStringBuffer","byteLength","Reader","BufferReader","indexOutOfRange","reader","writeLength","RangeError","create_array","isBuffer","_slice","readLongVarint","readFixed32_end","readFixed64","skip","skipType","wireType","BufferReader_","utf8Slice","min","Service","rpcImpl","requestDelimited","responseDelimited","TypeError","rpcCall","method","requestCtor","responseCtor","request","callback","self","setTimeout","response","endedByRPC","protobuf","build","rpc","roots","configure","$Reader","$protobuf","$util","$root","tensorflow","Any","ks","typeUrl","r","l","m","DataType","valuesById","values","TensorShape","dim","unknownRank","Dim","Tensor","floatVal","doubleVal","intVal","stringVal","scomplexVal","int64Val","boolVal","uint32Val","uint64Val","dtype","tensorShape","versionNumber","tensorContent","AttrValue","list","s","f","type","shape","tensor","placeholder","func","$oneOfFields","ListValue","NameAttrList","attr","k","NodeDef","input","op","device","VersionDef","badConsumers","producer","minConsumer","GraphDef","library","FunctionDefLibrary","CollectionDef","nodeList","bytesList","int64List","floatList","anyList","NodeList","BytesList","Int64List","FloatList","AnyList","SaverDef","filenameTensorName","saveTensorName","restoreOpName","maxToKeep","sharded","keepCheckpointEveryNHours","version","CheckpointFormatVersion","TensorInfo","cooSparse","CooSparse","valuesTensorName","indicesTensorName","denseShapeTensorName","SignatureDef","inputs","outputs","methodName","AssetFileDef","tensorInfo","filename","OpDef","inputArg","outputArg","deprecation","summary","description","isCommutative","isAggregate","isStateful","allowsUninitializedInput","ArgDef","AttrDef","OpDeprecation","typeAttr","numberAttr","typeListAttr","isRef","defaultValue","hasMinimum","minimum","allowedValues","explanation","OpList","MetaGraphDef","collectionDef","signatureDef","assetFileDef","metaInfoDef","graphDef","saverDef","MetaInfoDef","tags","metaGraphVersion","strippedOpList","anyInfo","tensorflowVersion","tensorflowGitVersion","SavedModel","metaGraphs","savedModelSchemaVersion","gradient","FunctionDef","GradientDef","nodeDef","ret","signature","functionName","gradientFunc","paramName","tensorMap","context","param","inputIndex","getTensor","inputNames","inputParamLength","map","data","dataSync","tensorsMap","nodeName","contextId","currentContextIds","find","getNodeNameWithContextId","currentContextId","inputName","lastIndexOf","arr","res","tfOpName","dlOpName","category","tfInputIndex","dlParamName","tfParamName","notSupported","tfInputParamLength","notSupprted","unsupported","tfParamNameDeprecated","CONTROL_FLOW_OPS","DYNAMIC_SHAPE_OPS","OperationMapper","_instance","ops","arithmetic","basicMath","control","convolution","creation","dynamic","evaluation","logical","image","graph","matrices","normalization","reduction","sliceJoin","spectral","transformation","mappersJson","concat","opMappers","reduce","mapper","some","withControlFlow","withDynamicShape","placeholders","weights","nodes","_this","mapNode","isControlFlow","isDynamicShape","forEach","key","children","newNode","startsWith","substr","getStringParam","getNumberParam","getNumericArrayParam","getBoolParam","getTensorShapeParam","getDtypeParam","attrs","def","keepCase","DT_FLOAT","DT_INT32","DT_BOOL","v","executeOp","tfc.add","getParamValue","tfc.addN","tfc.mod","tfc.mul","tfc.div","tfc.floorDiv","tfc.sub","tfc.minimum","tfc.maximum","tfc.pow","tfc.squaredDifference","tfc.abs","tfc.acos","tfc.acosh","tfc.asin","tfc.asinh","tfc.atan","tfc.atan2","tfc.atanh","tfc.ceil","tfc.cos","tfc.cosh","tfc.elu","tfc.erf","tfc.exp","tfc.expm1","tfc.floor","tfc.log","tfc.log1p","tfc.neg","tfc.reciprocal","tfc.relu","tfc.round","tfc.selu","tfc.sigmoid","tfc.sin","tfc.sign","tfc.sinh","tfc.softplus","tfc.sqrt","tfc.square","tfc.tanh","tfc.tan","tfc.clipByValue","tfc.scalar","tfc.prod","tfc.leakyRelu","TensorArray","maxSize","elementShape","identicalElementShapes","dynamicSize","clearAfterRead","id","nextId","closed_","tensors","dispose","tensorWithState","cleared","indices","assertShapesMatch","written","readMany","maxIndex","max","writeMany","unstack","totalLength","cumulativeLengths","elementPerRow","tidy","reshape","indices_1","sizes","shapeA","shapeB","errorMessagePrefix","assert","arraysEqual","n1","n2","clone","pred","data_1","frameId","enterFrame","exitFrame","nextIteration","name_1","tensorArray","addTensorArray","scalar","writeTensor","getTensorArray","readId","readIndex","gatherId","gatherIndices","gatherDtype","gather","scatterId","scatterIndices","scatterTensor","scatter","concatId","concatTensorArray","concatDtype","splitId","splitTensor","lengths","split","sizeId","sizeTensorArray","closeId","clearAndClose","stride","pad","dataFormat","toUpperCase","dilation","tfc.conv1d","dilations","tfc.conv2d","tfc.conv2dTranspose","tfc.depthwiseConv2d","kernelSize","tfc.avgPool","tfc.maxPool","tfc.fill","stop_1","num","tfc.linspace","depth","onValue","offValue","tfc.oneHot","tfc.ones","tfc.onesLike","tfc.randomUniform","stop_2","step","tfc.range","mean","stdDev","seed","tfc.truncatedNormal","tfc.zeros","tfc.zerosLike","boxes","scores","maxOutputSize","iouThreshold","scoreThreshold","tfc.image","nonMaxSuppressionAsync","tfc.whereAsync","tfc.setdiff1dAsync","x","sorted","result","tfc.topk","tfc.tensor1d","rank","summarize","console","warn","images","alignCorners","resizeBilinear","resizeNearestNeighbor","boxInd","cropSize","extrapolationValue","cropAndResize","tfc.equal","tfc.notEqual","tfc.greater","tfc.greaterEqual","tfc.less","tfc.lessEqual","tfc.logicalAnd","tfc.logicalNot","tfc.logicalOr","tfc.where","tfc.matMul","tfc.transpose","tfc.batchNormalization","tfc.localResponseNormalization","tfc.softmax","tfc.logSoftmax","tfc.sparseToDense","axis","keepDims","tfc.max","tfc.mean","tfc.min","tfc.sum","tfc.all","tfc.any","tfc.argMax","tfc.argMin","tfc.concat","tfc.gather","tfc.reverse","begin","tfc.slice","strides","beginMask","endMask","ellipsisMask","newAxisMask","shrinkAxisMask","tfc.stridedSlice","tfc.tidy","squeezedShape","squeeze","mapped","sameShape","tfc.util","tfc.stack","tfc.unstack","reps","tfc.tile","numOrSizeSplits","tfc.split","tfc.scatterND","tfc.gatherND","sparseValues","tfc.fft","tfc.ifft","tfc.rfft","tfc.irfft","tfc.cast","tfc.expandDims","tfc.squeeze","tfc.reshape","tfc.pad","blockShape","paddings","tfc.spaceToBatchND","crops","tfc.batchToSpaceND","blockSize","tfc.depthToSpace","arithmetic.executeOp","basicMath.executeOp","control.executeOp","convolution.executeOp","creation.executeOp","dynamic.executeOp","evaluation.executeOp","image.executeOp","graph.executeOp","logical.executeOp","matrices.executeOp","normalization.executeOp","reduction.executeOp","sliceJoin.executeOp","spectral.executeOp","transformation.executeOp","frameName","iterationId","rootContext","weightMap","tensorArrayMap","generateCurrentContextIds","ExecutionContext","contexts","_currentContextIds","names","contextIdforContexts","lastId","newFrame","unshift","shift","assign","Map","GraphExecutor","_weightMap","weightIds","_outputs","compile","startNodes","compiledOrder","sort","nameKey","SEPERATOR","compiledMap","visited","pop","childNode","every","strictInputCheck","checkInput","checkInputShapeAndType","outputNames","calculateOutputs","checkOutput","tensorsToKeep","getFrozenTensorIds","intermediateTensorConsumerCount","compiledNodes","checkTensorForDisposal","findOutputs","ids","Set","indexOf","getTensorsForCurrentContenxt","has","count","executeWithControlFlow","results","outputIds","inputIdArray","inputIds","inputNodes","currentContext","added","promises","processStack","_a","all","item","currentContext_1","then","processChildNodes","this_1","inputTensors","shape_1","match","inputKeys","missing","extra","notInGraph","filter","compiledNodeNames","TFHUB_SEARCH_PARAM","DEFAULT_MODEL_NAME","DEFAULT_MANIFEST_NAME","FrozenModel","executor","outputNodes","modelUrl","weightManifestUrl","requestOption","weightPrefix","path","handler","tfc.io","browserHTTPRequest","handlers","getLoadHandlers","findIOHandler","load","artifacts","modelTopology","decodeWeights","weightData","weightSpecs","Instance","transformGraph","convertTensorMapToTensorsMap","config","execute_","inputArray","tfc.Tensor","constructTensorMap","isControlFlowModel","isDynamicShapeModel","execute","executeAsync","newMap","weightsManifestUrl","model","tfhubModuleUrl","endsWith","loadFrozenModel"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAAA,IAAA,SAAA,GAAiBA,SAAjB;;AAmBA,SAASA,SAAT,CAAmBC,CAAnB,EAAuBC,CAAvB,EAAuBA;AAKnB,OAJA,IAAIC,CAAAA,GAAU,IAAIC,KAAJ,CAAUC,SAAAA,CAAUC,MAAVD,GAAmB,CAA7B,CAAd,EACIE,CAAAA,GAAU,CADd,EAEIC,CAAAA,GAAU,CAFd,EAGIC,CAAAA,GAAAA,CAAU,CACd,EAAOD,CAAAA,GAAQH,SAAAA,CAAUC,MAAzB;AACIH,IAAAA,CAAAA,CAAOI,CAAAA,EAAPJ,CAAAA,GAAmBE,SAAAA,CAAUG,CAAAA,EAAVH,CAAnBF;AADJ;;AAEA,SAAO,IAAIO,OAAJ,CAAY,UAAkBC,CAAlB,EAA2BC,CAA3B,EAA2BA;AAC1CT,IAAAA,CAAAA,CAAOI,CAAPJ,CAAAA,GAAiB,UAAkBU,CAAlB,EAAkBA;AAC/B,UAAIJ,CAAJ,EAEI,IADAA,CAAAA,GAAAA,CAAU,CAAVA,EACII,CAAJ,EACID,CAAAA,CAAOC,CAAPD,CAAAA,CADJ,KAEK;AAGD,aAFA,IAAIT,CAAAA,GAAS,IAAIC,KAAJ,CAAUC,SAAAA,CAAUC,MAAVD,GAAmB,CAA7B,CAAb,EACIE,CAAAA,GAAS,CACb,EAAOA,CAAAA,GAASJ,CAAAA,CAAOG,MAAvB;AACIH,UAAAA,CAAAA,CAAOI,CAAAA,EAAPJ,CAAAA,GAAmBE,SAAAA,CAAUE,CAAVF,CAAnBF;AADJ;;AAEAQ,QAAAA,CAAAA,CAAQG,KAARH,CAAc,IAAdA,EAAoBR,CAApBQ;AAAoBR;AAAAA,KAVhCA;;AAcA,QAAA;AACIF,MAAAA,CAAAA,CAAGa,KAAHb,CAASC,CAAAA,IAAO,IAAhBD,EAAsBE,CAAtBF;AACF,KAFF,CAEE,OAAOY,CAAP,EAAOA;AACDJ,MAAAA,CAAAA,KACAA,CAAAA,GAAAA,CAAU,CAAVA,EACAG,CAAAA,CAAOC,CAAPD,CAFAH,CAAAA;AAEOI;AAAAA,GApBZ,CAAP;AAoBmBA;;AAAAA,IAAAA,QAAAA,GAAAA,oBAAAA,CAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;ACxCvB,MAAIE,CAAAA,GAASC,CAAb;;AAOAD,EAAAA,CAAAA,CAAOT,MAAPS,GAAgB,UAAgBE,CAAhB,EAAgBA;AAC5B,QAAIC,CAAAA,GAAID,CAAAA,CAAOX,MAAf;AACA,QAAA,CAAKY,CAAL,EACI,OAAO,CAAP;;AAEJ,SADA,IAAIC,CAAAA,GAAI,CACR,EADQ,EACCD,CADD,GACK,CADL,GACS,CADT,IACmC,QAArBD,CAAAA,CAAOG,MAAPH,CAAcC,CAAdD,CAAtB;AAAoCC,QAC9BC,CAD8BD;AAApC;;AAEA,WAAOG,IAAAA,CAAKC,IAALD,CAA0B,IAAhBJ,CAAAA,CAAOX,MAAjBe,IAA+B,CAA/BA,GAAmCF,CAA1C;AAA0CA,GAP9CJ;;AAiBA,OANA,IAAIQ,CAAAA,GAAM,IAAInB,KAAJ,CAAU,EAAV,CAAV,EAGIoB,CAAAA,GAAM,IAAIpB,KAAJ,CAAU,GAAV,CAHV,EAMSqB,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAI,EAApB;AACID,IAAAA,CAAAA,CAAID,CAAAA,CAAIE,CAAJF,CAAAA,GAASE,CAAAA,GAAI,EAAJA,GAASA,CAAAA,GAAI,EAAbA,GAAkBA,CAAAA,GAAI,EAAJA,GAASA,CAAAA,GAAI,EAAbA,GAAkBA,CAAAA,GAAI,EAAJA,GAASA,CAAAA,GAAI,CAAbA,GAAiBA,CAAAA,GAAI,EAAJA,GAAS,EAA3ED,CAAAA,GAAiFC,CAAAA,EAAjFD;AADJ;;AAUAT,EAAAA,CAAAA,CAAOW,MAAPX,GAAgB,UAAgBY,CAAhB,EAAwBC,CAAxB,EAA+BC,CAA/B,EAA+BA;AAM3C,SALA,IAIII,CAJJ,EAAIH,CAAAA,GAAQ,IAAZ,EACIC,CAAAA,GAAAA,EADJ,EAEIN,CAAAA,GAAI,CAFR,EAGIO,CAAAA,GAAI,CAER,EAAOJ,CAAAA,GAAQC,CAAf,GAAoB;AAChB,UAAIK,CAAAA,GAAIP,CAAAA,CAAOC,CAAAA,EAAPD,CAAR;;AACA,cAAQK,CAAR;AACI,aAAK,CAAL;AACID,UAAAA,CAAAA,CAAMN,CAAAA,EAANM,CAAAA,GAAaR,CAAAA,CAAIW,CAAAA,IAAK,CAATX,CAAbQ,EACAE,CAAAA,GAAAA,CAAS,IAAJC,CAALD,KAAe,CADfF,EAEAC,CAAAA,GAAI,CAFJD;AAGA;;AACJ,aAAK,CAAL;AACIA,UAAAA,CAAAA,CAAMN,CAAAA,EAANM,CAAAA,GAAaR,CAAAA,CAAIU,CAAAA,GAAIC,CAAAA,IAAK,CAAbX,CAAbQ,EACAE,CAAAA,GAAAA,CAAS,KAAJC,CAALD,KAAgB,CADhBF,EAEAC,CAAAA,GAAI,CAFJD;AAGA;;AACJ,aAAK,CAAL;AACIA,UAAAA,CAAAA,CAAMN,CAAAA,EAANM,CAAAA,GAAaR,CAAAA,CAAIU,CAAAA,GAAIC,CAAAA,IAAK,CAAbX,CAAbQ,EACAA,CAAAA,CAAMN,CAAAA,EAANM,CAAAA,GAAaR,CAAAA,CAAQ,KAAJW,CAAJX,CADbQ,EAEAC,CAAAA,GAAI,CAFJD;AAZR;;AAiBIN,MAAAA,CAAAA,GAAI,IAAJA,KAAI,CACHK,CAAAA,KAAUA,CAAAA,GAAAA,EAAVA,CADG,EACoBK,IADpB,CACyBC,MAAAA,CAAOC,YAAPD,CAAoBtB,KAApBsB,CAA0BA,MAA1BA,EAAkCL,CAAlCK,CADzB,GAEJX,CAAAA,GAAI,CAFJA;AAWR;;AAAA,WANIO,CAAAA,KACAD,CAAAA,CAAMN,CAAAA,EAANM,CAAAA,GAAaR,CAAAA,CAAIU,CAAJV,CAAbQ,EACAA,CAAAA,CAAMN,CAAAA,EAANM,CAAAA,GAAa,EADbA,EAEU,MAANC,CAAM,KACND,CAAAA,CAAMN,CAAAA,EAANM,CAAAA,GAAa,EADP,CAHVC,CAAAA,EAMAF,CAAAA,IACIL,CAAAA,IACAK,CAAAA,CAAMK,IAANL,CAAWM,MAAAA,CAAOC,YAAPD,CAAoBtB,KAApBsB,CAA0BA,MAA1BA,EAAkCL,CAAAA,CAAMO,KAANP,CAAY,CAAZA,EAAeN,CAAfM,CAAlCK,CAAXN,CADAL,EAEGK,CAAAA,CAAMS,IAANT,CAAW,EAAXA,CAHPA,IAKGM,MAAAA,CAAOC,YAAPD,CAAoBtB,KAApBsB,CAA0BA,MAA1BA,EAAkCL,CAAAA,CAAMO,KAANP,CAAY,CAAZA,EAAeN,CAAfM,CAAlCK,CALP;AAKwDX,GAzC5DV;;AAsDAA,EAAAA,CAAAA,CAAOyB,MAAPzB,GAAgB,UAAgBE,CAAhB,EAAwBU,CAAxB,EAAgCpB,CAAhC,EAAgCA;AAI5C,SAHA,IAEI0B,CAFJ,EAAIL,CAAAA,GAAQrB,CAAZ,EACIyB,CAAAA,GAAI,CADR,EAGSP,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAIR,CAAAA,CAAOX,MAA3B,GAAoC;AAChC,UAAImC,CAAAA,GAAIxB,CAAAA,CAAOyB,UAAPzB,CAAkBQ,CAAAA,EAAlBR,CAAR;AACA,UAAU,OAANwB,CAAM,IAAMT,CAAAA,GAAI,CAApB,EACI;AACJ,UAAA,KAAqBW,CAArB,MAAKF,CAAAA,GAAIjB,CAAAA,CAAIiB,CAAJjB,CAAT,CAAA,EACI,MAAMoB,KAAAA,CAnBI,kBAmBJA,CAAN;;AACJ,cAAQZ,CAAR;AACI,aAAK,CAAL;AACIC,UAAAA,CAAAA,GAAIQ,CAAJR,EACAD,CAAAA,GAAI,CADJC;AAEA;;AACJ,aAAK,CAAL;AACIN,UAAAA,CAAAA,CAAOpB,CAAAA,EAAPoB,CAAAA,GAAmBM,CAAAA,IAAK,CAALA,GAAK,CAAS,KAAJQ,CAAL,KAAgB,CAAxCd,EACAM,CAAAA,GAAIQ,CADJd,EAEAK,CAAAA,GAAI,CAFJL;AAGA;;AACJ,aAAK,CAAL;AACIA,UAAAA,CAAAA,CAAOpB,CAAAA,EAAPoB,CAAAA,GAAOpB,CAAiB,KAAJ0B,CAAb1B,KAAwB,CAAxBA,GAAwB,CAAS,KAAJkC,CAAL,KAAgB,CAA/Cd,EACAM,CAAAA,GAAIQ,CADJd,EAEAK,CAAAA,GAAI,CAFJL;AAGA;;AACJ,aAAK,CAAL;AACIA,UAAAA,CAAAA,CAAOpB,CAAAA,EAAPoB,CAAAA,GAAOpB,CAAiB,IAAJ0B,CAAb1B,KAAuB,CAAvBA,GAA2BkC,CAAlCd,EACAK,CAAAA,GAAI,CADJL;AAhBR;AAqBJ;;AAAA,QAAU,MAANK,CAAJ,EACI,MAAMY,KAAAA,CA1CQ,kBA0CRA,CAAN;AACJ,WAAOrC,CAAAA,GAASqB,CAAhB;AAAgBA,GAjCpBb,EAyCAA,CAAAA,CAAO8B,IAAP9B,GAAc,UAAcE,CAAd,EAAcA;AACxB,WAAO,mEAAmE4B,IAAnE,CAAwE5B,CAAxE,CAAP;AAA+EA,GA1CnFF;AA0CmFE,CD1F5DJ,CAAAA;AAAAA,IC0F4DI,YAAAA,GCxIlE6B,YF8CMjC;;AEtCvB,SAASiC,YAAT,GAASA;AAOLC,OAAKC,UAALD,GAAKC,EAALD;AAUJD;;AAAAA,YAAAA,CAAaG,SAAbH,CAAuBI,EAAvBJ,GAA4B,UAAYK,CAAZ,EAAiBlD,CAAjB,EAAqBC,CAArB,EAAqBA;AAK7C,SAAA,CAJC6C,KAAKC,UAALD,CAAgBI,CAAhBJ,MAAyBA,KAAKC,UAALD,CAAgBI,CAAhBJ,IAAgBI,EAAzCJ,CAID,EAJsDZ,IAItD,CAJsDA;AAClDlC,IAAAA,EAAAA,EAAMA,CAD4CkC;AAElDjC,IAAAA,GAAAA,EAAMA,CAAAA,IAAO6C;AAFqCZ,GAItD,GAAOY,IAAP;AAAOA,CALXD,EAcAA,YAAAA,CAAaG,SAAbH,CAAuBM,GAAvBN,GAA6B,UAAaK,CAAb,EAAkBlD,CAAlB,EAAkBA;AAC3C,MAAA,KAAY0C,CAAZ,KAAIQ,CAAJ,EACIJ,KAAKC,UAALD,GAAKC,EAALD,CADJ,KAGI,IAAA,KAAWJ,CAAX,KAAI1C,CAAJ,EACI8C,KAAKC,UAALD,CAAgBI,CAAhBJ,IAAgBI,EAAhBJ,CADJ,KAII,KADA,IAAIM,CAAAA,GAAYN,KAAKC,UAALD,CAAgBI,CAAhBJ,CAAhB,EACStB,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAI4B,CAAAA,CAAU/C,MAA9B;AACQ+C,IAAAA,CAAAA,CAAU5B,CAAV4B,CAAAA,CAAapD,EAAboD,KAAoBpD,CAApBoD,GACAA,CAAAA,CAAUC,MAAVD,CAAiB5B,CAAjB4B,EAAoB,CAApBA,CADAA,GACoB,EAElB5B,CAHF4B;AADR;AAOR,SAAON,IAAP;AAAOA,CA7BXD,EAsCAA,YAAAA,CAAaG,SAAbH,CAAuBS,IAAvBT,GAA8B,UAAcK,CAAd,EAAcA;AACxC,MAAIE,CAAAA,GAAYN,KAAKC,UAALD,CAAgBI,CAAhBJ,CAAhB;;AACA,MAAIM,CAAJ,EAAe;AAGX,SAFA,IAAIG,CAAAA,GAAAA,EAAJ,EACI/B,CAAAA,GAAI,CACR,EAAOA,CAAAA,GAAIpB,SAAAA,CAAUC,MAArB;AACIkD,MAAAA,CAAAA,CAAKrB,IAALqB,CAAUnD,SAAAA,CAAUoB,CAAAA,EAAVpB,CAAVmD;AADJ;;AAEA,SAAK/B,CAAAA,GAAI,CAAT,EAAYA,CAAAA,GAAI4B,CAAAA,CAAU/C,MAA1B;AACI+C,MAAAA,CAAAA,CAAU5B,CAAV4B,CAAAA,CAAapD,EAAboD,CAAgBvC,KAAhBuC,CAAsBA,CAAAA,CAAU5B,CAAAA,EAAV4B,CAAAA,CAAenD,GAArCmD,EAA0CG,CAA1CH;AADJ;AAGJ;;AAAA,SAAON,IAAP;AAAOA,CAhDXD;ACxBA,IAAA,OAAA,GAAiBW,OAAAA,CAAQA,OAARA,CAAjB;;AAqFA,SAASA,OAAT,CAAiBzC,CAAjB,EAAiBA;AAwNb,SArN4B,eAAA,OAAjB0C,YAAiB,GAAa,YAAA;AAErC,QAAIC,CAAAA,GAAM,IAAID,YAAJ,CAAIA,CAAAA,CAAgB,CAAhBA,CAAJ,CAAV;AAAA,QACIE,CAAAA,GAAM,IAAIC,UAAJ,CAAeF,CAAAA,CAAIhC,MAAnB,CADV;AAAA,QAEImC,CAAAA,GAAiB,QAAXF,CAAAA,CAAI,CAAJA,CAFV;;AAIA,aAASG,CAAT,CAA4BC,CAA5B,EAAiCC,CAAjC,EAAsCC,CAAtC,EAAsCA;AAClCP,MAAAA,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAATL,EACAM,CAAAA,CAAIC,CAAJD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CADfD,EAEAM,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CAFfD,EAGAM,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CAHfD,EAIAM,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CAJfD;AAOJ;;AAAA,aAASQ,CAAT,CAA4BH,CAA5B,EAAiCC,CAAjC,EAAsCC,CAAtC,EAAsCA;AAClCP,MAAAA,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAATL,EACAM,CAAAA,CAAIC,CAAJD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CADfD,EAEAM,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CAFfD,EAGAM,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CAHfD,EAIAM,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CAJfD;AAYJ;;AAAA,aAASW,CAAT,CAA2BL,CAA3B,EAAgCC,CAAhC,EAAgCA;AAK5B,aAJAN,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAJD,CAATL,EACAA,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CADTL,EAEAA,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAFTL,EAGAA,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAHTL,EAIOD,CAAAA,CAAI,CAAJA,CAAP;AAGJ;;AAAA,aAASY,CAAT,CAA2BN,CAA3B,EAAgCC,CAAhC,EAAgCA;AAK5B,aAJAN,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAJD,CAATL,EACAA,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CADTL,EAEAA,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAFTL,EAGAA,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAHTL,EAIOD,CAAAA,CAAI,CAAJA,CAAP;AAjBJ3C;;AAAAA,IAAAA,CAAAA,CAAQoD,YAARpD,GAAuB8C,CAAAA,GAAKC,CAALD,GAA0BK,CAAjDnD,EAEAA,CAAAA,CAAQqD,YAARrD,GAAuB8C,CAAAA,GAAKK,CAALL,GAA0BC,CAFjD/C,EAqBAA,CAAAA,CAAQwD,WAARxD,GAAsB8C,CAAAA,GAAKQ,CAALR,GAAyBS,CArB/CvD,EAuBAA,CAAAA,CAAQyD,WAARzD,GAAsB8C,CAAAA,GAAKS,CAALT,GAAyBQ,CAvB/CtD;AAvBqC,GAAA,EAAb,GAiDjB,YAAA;AAEP,aAAS0D,CAAT,CAA4BC,CAA5B,EAAuCX,CAAvC,EAA4CC,CAA5C,EAAiDC,CAAjD,EAAiDA;AAC7C,UAAIU,CAAAA,GAAOZ,CAAAA,GAAM,CAANA,GAAU,CAAVA,GAAc,CAAzB;AAGA,UAFIY,CAAAA,KACAZ,CAAAA,GAAAA,CAAOA,CADPY,CAAAA,EAEQ,MAARZ,CAAJ,EACIW,CAAAA,CAAU,IAAIX,CAAJ,GAAU,CAAV,GAA6B,CAA7B,GAAkD,UAA5DW,EAAwEV,CAAxEU,EAA6ET,CAA7ES,CAAAA,CADJ,KAEK,IAAIE,KAAAA,CAAMb,CAANa,CAAJ,EACDF,CAAAA,CAAU,UAAVA,EAAsBV,CAAtBU,EAA2BT,CAA3BS,CAAAA,CADC,KAEA,IAAIX,CAAAA,GAAM,qBAAV,EACDW,CAAAA,CAAAA,CAAWC,CAAAA,IAAQ,EAARA,GAAa,UAAxBD,MAAwC,CAAxCA,EAA2CV,CAA3CU,EAAgDT,CAAhDS,CAAAA,CADC,KAEA,IAAIX,CAAAA,GAAM,sBAAV,EACDW,CAAAA,CAAAA,CAAWC,CAAAA,IAAQ,EAARA,GAAavD,IAAAA,CAAKyD,KAALzD,CAAW2C,CAAAA,GAAM,qBAAjB3C,CAAxBsD,MAAqE,CAArEA,EAAwEV,CAAxEU,EAA6ET,CAA7ES,CAAAA,CADC,KAEA;AACD,YAAII,CAAAA,GAAW1D,IAAAA,CAAK2D,KAAL3D,CAAWA,IAAAA,CAAK4D,GAAL5D,CAAS2C,CAAT3C,IAAgBA,IAAAA,CAAK6D,GAAhC7D,CAAf;AAEAsD,QAAAA,CAAAA,CAAAA,CAAWC,CAAAA,IAAQ,EAARA,GAAaG,CAAAA,GAAW,GAAXA,IAAkB,EAA/BH,GADyD,UAArDvD,IAAAA,CAAKyD,KAALzD,CAAW2C,CAAAA,GAAM3C,IAAAA,CAAK8D,GAAL9D,CAAS,CAATA,EAAS,CAAI0D,CAAb1D,CAAN2C,GAA+B,OAA1C3C,CACfsD,MAA6D,CAA7DA,EAAgEV,CAAhEU,EAAqET,CAArES,CAAAA;AAAqET;AAO7E;;AAAA,aAASqB,CAAT,CAA2BC,CAA3B,EAAqCvB,CAArC,EAA0CC,CAA1C,EAA0CA;AACtC,UAAIuB,CAAAA,GAAOD,CAAAA,CAASvB,CAATuB,EAActB,CAAdsB,CAAX;AAAA,UACIZ,CAAAA,GAAsB,KAAda,CAAAA,IAAQ,EAAM,IAAI,CAD9B;AAAA,UAEIV,CAAAA,GAAWU,CAAAA,KAAS,EAATA,GAAc,GAF7B;AAAA,UAGIC,CAAAA,GAAkB,UAAPD,CAHf;AAIA,aAAoB,QAAbV,CAAa,GACdW,CAAAA,GACAC,GADAD,GAEAd,CAAAA,IAAOgB,IAAAA,CAAPhB,CAHc,GAID,MAAbG,CAAa,GACN,wBAAPH,CAAO,GAAwBc,CADlB,GAEbd,CAAAA,GAAOvD,IAAAA,CAAK8D,GAAL9D,CAAS,CAATA,EAAY0D,CAAAA,GAAW,GAAvB1D,CAAPuD,IAAsCc,CAAAA,GAAW,OAAjDd,CANN;AARJ5D;;AAAAA,IAAAA,CAAAA,CAAQoD,YAARpD,GAAuB0D,CAAAA,CAAmBU,IAAnBV,CAAwB,IAAxBA,EAA8BW,WAA9BX,CAAvB1D,EACAA,CAAAA,CAAQqD,YAARrD,GAAuB0D,CAAAA,CAAmBU,IAAnBV,CAAwB,IAAxBA,EAA8BY,WAA9BZ,CADvB1D,EAiBAA,CAAAA,CAAQwD,WAARxD,GAAsBuE,CAAAA,CAAkBH,IAAlBG,CAAuB,IAAvBA,EAA6BM,UAA7BN,CAjBtBvE,EAkBAA,CAAAA,CAAQyD,WAARzD,GAAsBuE,CAAAA,CAAkBH,IAAlBG,CAAuB,IAAvBA,EAA6BO,UAA7BP,CAlBtBvE;AArBO,GAAA,EAjDiB,EA6FA,eAAA,OAAjB+E,YAAiB,GAAa,YAAA;AAErC,QAAIC,CAAAA,GAAM,IAAID,YAAJ,CAAIA,CAAAA,CAAe,CAAfA,CAAJ,CAAV;AAAA,QACInC,CAAAA,GAAM,IAAIC,UAAJ,CAAemC,CAAAA,CAAIrE,MAAnB,CADV;AAAA,QAEImC,CAAAA,GAAiB,QAAXF,CAAAA,CAAI,CAAJA,CAFV;;AAIA,aAASqC,CAAT,CAA6BjC,CAA7B,EAAkCC,CAAlC,EAAuCC,CAAvC,EAAuCA;AACnC8B,MAAAA,CAAAA,CAAI,CAAJA,CAAAA,GAAShC,CAATgC,EACA/B,CAAAA,CAAIC,CAAJD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CADfoC,EAEA/B,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CAFfoC,EAGA/B,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CAHfoC,EAIA/B,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CAJfoC,EAKA/B,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CALfoC,EAMA/B,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CANfoC,EAOA/B,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CAPfoC,EAQA/B,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CARfoC;AAWJ;;AAAA,aAASE,CAAT,CAA6BlC,CAA7B,EAAkCC,CAAlC,EAAuCC,CAAvC,EAAuCA;AACnC8B,MAAAA,CAAAA,CAAI,CAAJA,CAAAA,GAAShC,CAATgC,EACA/B,CAAAA,CAAIC,CAAJD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CADfoC,EAEA/B,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CAFfoC,EAGA/B,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CAHfoC,EAIA/B,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CAJfoC,EAKA/B,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CALfoC,EAMA/B,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CANfoC,EAOA/B,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CAPfoC,EAQA/B,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAeL,CAAAA,CAAI,CAAJA,CARfoC;AAgBJ;;AAAA,aAASK,CAAT,CAA4BpC,CAA5B,EAAiCC,CAAjC,EAAiCA;AAS7B,aARAN,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAJD,CAATL,EACAA,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CADTL,EAEAA,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAFTL,EAGAA,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAHTL,EAIAA,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAJTL,EAKAA,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CALTL,EAMAA,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CANTL,EAOAA,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAPTL,EAQOoC,CAAAA,CAAI,CAAJA,CAAP;AAGJ;;AAAA,aAASM,CAAT,CAA4BrC,CAA5B,EAAiCC,CAAjC,EAAiCA;AAS7B,aARAN,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAJD,CAATL,EACAA,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CADTL,EAEAA,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAFTL,EAGAA,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAHTL,EAIAA,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAJTL,EAKAA,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CALTL,EAMAA,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CANTL,EAOAA,CAAAA,CAAI,CAAJA,CAAAA,GAASK,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAPTL,EAQOoC,CAAAA,CAAI,CAAJA,CAAP;AAzBJhF;;AAAAA,IAAAA,CAAAA,CAAQmF,aAARnF,GAAwB8C,CAAAA,GAAKmC,CAALnC,GAA2BoC,CAAnDlF,EAEAA,CAAAA,CAAQoF,aAARpF,GAAwB8C,CAAAA,GAAKoC,CAALpC,GAA2BmC,CAFnDjF,EA6BAA,CAAAA,CAAQuF,YAARvF,GAAuB8C,CAAAA,GAAKuC,CAALvC,GAA0BwC,CA7BjDtF,EA+BAA,CAAAA,CAAQwF,YAARxF,GAAuB8C,CAAAA,GAAKwC,CAALxC,GAA0BuC,CA/BjDrF;AA/BqC,GAAA,EAAb,GAiEjB,YAAA;AAEP,aAASyF,CAAT,CAA6B9B,CAA7B,EAAwC+B,CAAxC,EAA8CC,CAA9C,EAAoD3C,CAApD,EAAyDC,CAAzD,EAA8DC,CAA9D,EAA8DA;AAC1D,UAAIU,CAAAA,GAAOZ,CAAAA,GAAM,CAANA,GAAU,CAAVA,GAAc,CAAzB;AAGA,UAFIY,CAAAA,KACAZ,CAAAA,GAAAA,CAAOA,CADPY,CAAAA,EAEQ,MAARZ,CAAJ,EACIW,CAAAA,CAAU,CAAVA,EAAaV,CAAbU,EAAkBT,CAAAA,GAAMwC,CAAxB/B,CAAAA,EACAA,CAAAA,CAAU,IAAIX,CAAJ,GAAU,CAAV,GAA6B,CAA7B,GAAkD,UAA5DW,EAAwEV,CAAxEU,EAA6ET,CAAAA,GAAMyC,CAAnFhC,CADAA,CADJ,KAGO,IAAIE,KAAAA,CAAMb,CAANa,CAAJ,EACHF,CAAAA,CAAU,CAAVA,EAAaV,CAAbU,EAAkBT,CAAAA,GAAMwC,CAAxB/B,CAAAA,EACAA,CAAAA,CAAU,UAAVA,EAAsBV,CAAtBU,EAA2BT,CAAAA,GAAMyC,CAAjChC,CADAA,CADG,KAGA,IAAIX,CAAAA,GAAM,sBAAV,EACHW,CAAAA,CAAU,CAAVA,EAAaV,CAAbU,EAAkBT,CAAAA,GAAMwC,CAAxB/B,CAAAA,EACAA,CAAAA,CAAAA,CAAWC,CAAAA,IAAQ,EAARA,GAAa,UAAxBD,MAAwC,CAAxCA,EAA2CV,CAA3CU,EAAgDT,CAAAA,GAAMyC,CAAtDhC,CADAA,CADG,KAGA;AACH,YAAIe,CAAJ;AACA,YAAI1B,CAAAA,GAAM,uBAAV,EAEIW,CAAAA,CAAAA,CADAe,CAAAA,GAAW1B,CAAAA,GAAM,MACjBW,MAAuB,CAAvBA,EAA0BV,CAA1BU,EAA+BT,CAAAA,GAAMwC,CAArC/B,CAAAA,EACAA,CAAAA,CAAAA,CAAWC,CAAAA,IAAQ,EAARA,GAAac,CAAAA,GAAW,UAAnCf,MAAmD,CAAnDA,EAAsDV,CAAtDU,EAA2DT,CAAAA,GAAMyC,CAAjEhC,CADAA,CAFJ,KAIO;AACH,cAAII,CAAAA,GAAW1D,IAAAA,CAAK2D,KAAL3D,CAAWA,IAAAA,CAAK4D,GAAL5D,CAAS2C,CAAT3C,IAAgBA,IAAAA,CAAK6D,GAAhC7D,CAAf;AACiB,mBAAb0D,CAAa,KACbA,CAAAA,GAAW,IADE,GAGjBJ,CAAAA,CAAqB,oBADrBe,CAAAA,GAAW1B,CAAAA,GAAM3C,IAAAA,CAAK8D,GAAL9D,CAAS,CAATA,EAAS,CAAI0D,CAAb1D,CACI,MAAqB,CAA1CsD,EAA6CV,CAA7CU,EAAkDT,CAAAA,GAAMwC,CAAxD/B,CAHiB,EAIjBA,CAAAA,CAAAA,CAAWC,CAAAA,IAAQ,EAARA,GAAaG,CAAAA,GAAW,IAAXA,IAAmB,EAAhCH,GAAgD,UAAXc,CAAW,GAAU,OAArEf,MAAkF,CAAlFA,EAAqFV,CAArFU,EAA0FT,CAAAA,GAAMyC,CAAhGhC,CAJiB;AAI+EgC;AAAAA;AAQ5G;;AAAA,aAASC,CAAT,CAA4BpB,CAA5B,EAAsCkB,CAAtC,EAA4CC,CAA5C,EAAkD1C,CAAlD,EAAuDC,CAAvD,EAAuDA;AACnD,UAAI2C,CAAAA,GAAKrB,CAAAA,CAASvB,CAATuB,EAActB,CAAAA,GAAMwC,CAApBlB,CAAT;AAAA,UACIsB,CAAAA,GAAKtB,CAAAA,CAASvB,CAATuB,EAActB,CAAAA,GAAMyC,CAApBnB,CADT;AAAA,UAEIZ,CAAAA,GAAoB,KAAZkC,CAAAA,IAAM,EAAM,IAAI,CAF5B;AAAA,UAGI/B,CAAAA,GAAW+B,CAAAA,KAAO,EAAPA,GAAY,IAH3B;AAAA,UAIIpB,CAAAA,GAAW,cAAmB,UAALoB,CAAd,IAA8BD,CAJ7C;AAKA,aAAoB,SAAb9B,CAAa,GACdW,CAAAA,GACAC,GADAD,GAEAd,CAAAA,IAAOgB,IAAAA,CAAPhB,CAHc,GAID,MAAbG,CAAa,GACN,SAAPH,CAAO,GAASc,CADH,GAEbd,CAAAA,GAAOvD,IAAAA,CAAK8D,GAAL9D,CAAS,CAATA,EAAY0D,CAAAA,GAAW,IAAvB1D,CAAPuD,IAAuCc,CAAAA,GAAW,gBAAlDd,CANN;AATJ5D;;AAAAA,IAAAA,CAAAA,CAAQmF,aAARnF,GAAwByF,CAAAA,CAAoBrB,IAApBqB,CAAyB,IAAzBA,EAA+BpB,WAA/BoB,EAA4C,CAA5CA,EAA+C,CAA/CA,CAAxBzF,EACAA,CAAAA,CAAQoF,aAARpF,GAAwByF,CAAAA,CAAoBrB,IAApBqB,CAAyB,IAAzBA,EAA+BnB,WAA/BmB,EAA4C,CAA5CA,EAA+C,CAA/CA,CADxBzF,EAkBAA,CAAAA,CAAQuF,YAARvF,GAAuB4F,CAAAA,CAAmBxB,IAAnBwB,CAAwB,IAAxBA,EAA8Bf,UAA9Be,EAA0C,CAA1CA,EAA6C,CAA7CA,CAlBvB5F,EAmBAA,CAAAA,CAAQwF,YAARxF,GAAuB4F,CAAAA,CAAmBxB,IAAnBwB,CAAwB,IAAxBA,EAA8Bd,UAA9Bc,EAA0C,CAA1CA,EAA6C,CAA7CA,CAnBvB5F;AAhCO,GAAA,EA9JiB,EAqNrBA,CAAP;AAKJ;;AAAA,SAASqE,WAAT,CAAqBrB,CAArB,EAA0BC,CAA1B,EAA+BC,CAA/B,EAA+BA;AAC3BD,EAAAA,CAAAA,CAAIC,CAAJD,CAAAA,GAA6B,MAAbD,CAAhBC,EACAA,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAgBD,CAAAA,KAAQ,CAARA,GAAa,GAD7BC,EAEAA,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAgBD,CAAAA,KAAQ,EAARA,GAAa,GAF7BC,EAGAA,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAgBD,CAAAA,KAAQ,EAHxBC;AAMJ;;AAAA,SAASqB,WAAT,CAAqBtB,CAArB,EAA0BC,CAA1B,EAA+BC,CAA/B,EAA+BA;AAC3BD,EAAAA,CAAAA,CAAIC,CAAJD,CAAAA,GAAgBD,CAAAA,KAAQ,EAAxBC,EACAA,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAgBD,CAAAA,KAAQ,EAARA,GAAa,GAD7BC,EAEAA,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAgBD,CAAAA,KAAQ,CAARA,GAAa,GAF7BC,EAGAA,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAA6B,MAAbD,CAHhBC;AAMJ;;AAAA,SAAS4B,UAAT,CAAoB5B,CAApB,EAAyBC,CAAzB,EAAyBA;AACrB,SAAA,CAAQD,CAAAA,CAAIC,CAAJD,CAAAA,GACAA,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,IAAgB,CADhBA,GAEAA,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,IAAgB,EAFhBA,GAGAA,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,IAAgB,EAHxB,MAGgC,CAHhC;AAMJ;;AAAA,SAAS6B,UAAT,CAAoB7B,CAApB,EAAyBC,CAAzB,EAAyBA;AACrB,SAAA,CAAQD,CAAAA,CAAIC,CAAJD,CAAAA,IAAgB,EAAhBA,GACAA,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,IAAgB,EADhBA,GAEAA,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,IAAgB,CAFhBA,GAGAA,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAHR,MAG0B,CAH1B;ACzUJ;;AAAA,IAAA,SAAA,GAAiB8C,OAAjB;;AAQA,SAASA,OAAT,CAAiBC,UAAjB,EAAiBA;AACb,MAAA;AACI,QAAIC,MAAAA,GAAMC,IAAAA,CAAK,QAAQC,OAAR,CAAgB,GAAhB,EAALD,IAAK,CAALA,CAAAA,CAAgCF,UAAhCE,CAAV;AACA,QAAID,MAAAA,KAAQA,MAAAA,CAAI3G,MAAJ2G,IAAcG,MAAAA,CAAOC,IAAPD,CAAYH,MAAZG,EAAiB9G,MAAvC2G,CAAJ,EACI,OAAOA,MAAP;AACN,GAJF,CAIE,OAAOK,CAAP,EAAOA,CACT;;AAAA,SAAO,IAAP;AAAO;;AAAA,IAAA,MAAA,GAAA,oBAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA;ACRX,MAAIC,CAAAA,GAAOvG,CAAX;AAOAuG,EAAAA,CAAAA,CAAKjH,MAALiH,GAAc,UAAqBtG,CAArB,EAAqBA;AAG/B,SAFA,IAAIuG,CAAAA,GAAM,CAAV,EACI/E,CAAAA,GAAI,CADR,EAEShB,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAIR,CAAAA,CAAOX,MAA3B,EAA2BA,EAAUmB,CAArC;AAAqCA,OACjCgB,CAAAA,GAAIxB,CAAAA,CAAOyB,UAAPzB,CAAkBQ,CAAlBR,CAD6BQ,IAEzB,GAFyBA,GAG7B+F,CAAAA,IAAO,CAHsB/F,GAIxBgB,CAAAA,GAAI,IAAJA,GACL+E,CAAAA,IAAO,CADF/E,GAEiB,UAAZ,QAAJA,CAAgB,KAAkD,UAAZ,QAA3BxB,CAAAA,CAAOyB,UAAPzB,CAAkBQ,CAAAA,GAAI,CAAtBR,CAAuC,CAAlD,IAAiC,EACrDQ,CADqD,EAEvD+F,CAAAA,IAAO,CAFe,IAItBA,CAAAA,IAAO,CAVsB/F;AAArC;;AAYA,WAAO+F,CAAP;AAAOA,GAfXD,EAyBAA,CAAAA,CAAKE,IAALF,GAAY,UAAmB5F,CAAnB,EAA2BC,CAA3B,EAAkCC,CAAlC,EAAkCA;AAE1C,QADUA,CAAAA,GAAMD,CAANC,GACA,CAAV,EACI,OAAO,EAAP;;AAKJ,SAJA,IAGII,CAHJ,EAAIH,CAAAA,GAAQ,IAAZ,EACIC,CAAAA,GAAAA,EADJ,EAEIN,CAAAA,GAAI,CAER,EAAOG,CAAAA,GAAQC,CAAf;AAAeA,OACXI,CAAAA,GAAIN,CAAAA,CAAOC,CAAAA,EAAPD,CADOE,IAEH,GAFGA,GAGPE,CAAAA,CAAMN,CAAAA,EAANM,CAAAA,GAAaE,CAHNJ,GAIFI,CAAAA,GAAI,GAAJA,IAAWA,CAAAA,GAAI,GAAfA,GACLF,CAAAA,CAAMN,CAAAA,EAANM,CAAAA,GAAMN,CAAY,KAAJQ,CAARR,KAAmB,CAAnBA,GAAyC,KAAlBE,CAAAA,CAAOC,CAAAA,EAAPD,CADxBM,GAEAA,CAAAA,GAAI,GAAJA,IAAWA,CAAAA,GAAI,GAAfA,IACLA,CAAAA,GAAAA,CAAAA,CAAU,IAAJA,CAANA,KAAgB,EAAhBA,GAAgB,CAAwB,KAAlBN,CAAAA,CAAOC,CAAAA,EAAPD,CAAN,KAA+B,EAA/CM,GAA+C,CAAwB,KAAlBN,CAAAA,CAAOC,CAAAA,EAAPD,CAAN,KAA+B,CAA9EM,GAAoG,KAAlBN,CAAAA,CAAOC,CAAAA,EAAPD,CAAlFM,IAA0G,KAA1GA,EACAF,CAAAA,CAAMN,CAAAA,EAANM,CAAAA,GAAa,SAAUE,CAAAA,IAAK,EAAf,CADbA,EAEAF,CAAAA,CAAMN,CAAAA,EAANM,CAAAA,GAAa,SAAc,OAAJE,CAAV,CAHRA,IAKLF,CAAAA,CAAMN,CAAAA,EAANM,CAAAA,GAAMN,CAAY,KAAJQ,CAARR,KAAmB,EAAnBA,GAAmB,CAAwB,KAAlBE,CAAAA,CAAOC,CAAAA,EAAPD,CAAN,KAA+B,CAAlDF,GAAwE,KAAlBE,CAAAA,CAAOC,CAAAA,EAAPD,CAXrDE,EAYPJ,CAAAA,GAAI,IAAJA,KAAI,CACHK,CAAAA,KAAUA,CAAAA,GAAAA,EAAVA,CADG,EACoBK,IADpB,CACyBC,MAAAA,CAAOC,YAAPD,CAAoBtB,KAApBsB,CAA0BA,MAA1BA,EAAkCL,CAAlCK,CADzB,GAEJX,CAAAA,GAAI,CAFJA,CAZOI;AAAf;;AAiBA,WAAIC,CAAAA,IACIL,CAAAA,IACAK,CAAAA,CAAMK,IAANL,CAAWM,MAAAA,CAAOC,YAAPD,CAAoBtB,KAApBsB,CAA0BA,MAA1BA,EAAkCL,CAAAA,CAAMO,KAANP,CAAY,CAAZA,EAAeN,CAAfM,CAAlCK,CAAXN,CADAL,EAEGK,CAAAA,CAAMS,IAANT,CAAW,EAAXA,CAHPA,IAKGM,MAAAA,CAAOC,YAAPD,CAAoBtB,KAApBsB,CAA0BA,MAA1BA,EAAkCL,CAAAA,CAAMO,KAANP,CAAY,CAAZA,EAAeN,CAAfM,CAAlCK,CALP;AAKwDX,GAvD5D8F,EAiEAA,CAAAA,CAAKG,KAALH,GAAa,UAAoBtG,CAApB,EAA4BU,CAA5B,EAAoCpB,CAApC,EAAoCA;AAI7C,SAHA,IACIoH,CADJ,EAEIC,CAFJ,EAAIhG,CAAAA,GAAQrB,CAAZ,EAGSkB,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAIR,CAAAA,CAAOX,MAA3B,EAA2BA,EAAUmB,CAArC;AAAqCA,OACjCkG,CAAAA,GAAK1G,CAAAA,CAAOyB,UAAPzB,CAAkBQ,CAAlBR,CAD4BQ,IAExB,GAFwBA,GAG7BE,CAAAA,CAAOpB,CAAAA,EAAPoB,CAAAA,GAAmBgG,CAHUlG,GAItBkG,CAAAA,GAAK,IAALA,IACPhG,CAAAA,CAAOpB,CAAAA,EAAPoB,CAAAA,GAAmBgG,CAAAA,IAAM,CAANA,GAAgB,GAAnChG,EACAA,CAAAA,CAAOpB,CAAAA,EAAPoB,CAAAA,GAA8B,KAAXgG,CAAW,GAAK,GAF5BA,IAGkB,UAAZ,QAALA,CAAiB,KAAyD,UAAZ,SAAjCC,CAAAA,GAAK3G,CAAAA,CAAOyB,UAAPzB,CAAkBQ,CAAAA,GAAI,CAAtBR,CAA4B,CAAY,CAAzD,IACzB0G,CAAAA,GAAK,SAAA,CAAiB,OAALA,CAAZ,KAA4B,EAA5B,KAAwC,OAALC,CAAnC,CAALD,EAAwCC,EACtCnG,CADFkG,EAEAhG,CAAAA,CAAOpB,CAAAA,EAAPoB,CAAAA,GAAmBgG,CAAAA,IAAM,EAANA,GAAgB,GAFnCA,EAGAhG,CAAAA,CAAOpB,CAAAA,EAAPoB,CAAAA,GAAmBgG,CAAAA,IAAM,EAANA,GAAW,EAAXA,GAAgB,GAHnCA,EAIAhG,CAAAA,CAAOpB,CAAAA,EAAPoB,CAAAA,GAAmBgG,CAAAA,IAAM,CAANA,GAAW,EAAXA,GAAgB,GAJnCA,EAKAhG,CAAAA,CAAOpB,CAAAA,EAAPoB,CAAAA,GAA8B,KAAXgG,CAAW,GAAK,GANV,KAQzBhG,CAAAA,CAAOpB,CAAAA,EAAPoB,CAAAA,GAAmBgG,CAAAA,IAAM,EAANA,GAAgB,GAAnChG,EACAA,CAAAA,CAAOpB,CAAAA,EAAPoB,CAAAA,GAAmBgG,CAAAA,IAAM,CAANA,GAAW,EAAXA,GAAgB,GADnChG,EAEAA,CAAAA,CAAOpB,CAAAA,EAAPoB,CAAAA,GAA8B,KAAXgG,CAAW,GAAK,GAVV,CAPIlG;AAArC;;AAoBA,WAAOlB,CAAAA,GAASqB,CAAhB;AAAgBA,GAzFpB2F;AAyFoB3F,CDxFT,CAAA;AAAA,ICwFSA,MAAAA,GCtGHiG,IFcN;;AEeX,SAASA,IAAT,CAAcC,CAAd,EAAqBxF,CAArB,EAA4ByF,CAA5B,EAA4BA;AACxB,MAAIC,CAAAA,GAASD,CAAAA,IAAQ,IAArB;AAAA,MACIE,CAAAA,GAASD,CAAAA,KAAS,CADtB;AAAA,MAEIE,CAAAA,GAAS,IAFb;AAAA,MAGI3H,CAAAA,GAASyH,CAHb;AAIA,SAAO,UAAoBD,CAApB,EAAoBA;AACvB,QAAIA,CAAAA,GAAO,CAAPA,IAAYA,CAAAA,GAAOE,CAAvB,EACI,OAAOH,CAAAA,CAAMC,CAAND,CAAP;AACAvH,IAAAA,CAAAA,GAASwH,CAATxH,GAAgByH,CAAhBzH,KACA2H,CAAAA,GAAOJ,CAAAA,CAAME,CAANF,CAAPI,EACA3H,CAAAA,GAAS,CAFTA;AAIJ,QAAI0D,CAAAA,GAAM3B,CAAAA,CAAM6F,IAAN7F,CAAW4F,CAAX5F,EAAiB/B,CAAjB+B,EAAyB/B,CAAAA,IAAUwH,CAAnCzF,CAAV;AAGA,WAFa,IAAT/B,CAAS,KACTA,CAAAA,GAAwB,KAAL,IAATA,CAAc,CADf,GAEN0D,CAAP;AAAOA,GAVX;AClCJ;;AAAA,IAAA,QAAA,GAAiBmE,QAAjB;;AAYA,SAASA,QAAT,CAAkBvB,CAAlB,EAAsBC,CAAtB,EAAsBA;AASlB/D,OAAK8D,EAAL9D,GAAU8D,CAAAA,KAAO,CAAjB9D,EAMAA,KAAK+D,EAAL/D,GAAU+D,CAAAA,KAAO,CANjB/D;AAcJ;;AAAA,IAAIsF,IAAAA,GAAOD,QAAAA,CAASC,IAATD,GAAgB,IAAIA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAA3B;AAEAC,IAAAA,CAAKC,QAALD,GAAgB,YAAA;AAAa,SAAO,CAAP;AAAO,CAApCA,EACAA,IAAAA,CAAKE,QAALF,GAAgBA,IAAAA,CAAKG,QAALH,GAAgB,YAAA;AAAa,SAAOtF,IAAP;AAAOA,CADpDsF,EAEAA,IAAAA,CAAK/H,MAAL+H,GAAc,YAAA;AAAa,SAAO,CAAP;AAAO,CAFlCA;AASA,IAAII,QAAAA,GAAWL,QAAAA,CAASK,QAATL,GAAoB,kBAAnC;AAOAA,QAAAA,CAASM,UAATN,GAAsB,UAAoBO,CAApB,EAAoBA;AACtC,MAAc,MAAVA,CAAJ,EACI,OAAON,IAAP;AACJ,MAAIzD,CAAAA,GAAO+D,CAAAA,GAAQ,CAAnB;AACI/D,EAAAA,CAAAA,KACA+D,CAAAA,GAAAA,CAASA,CADT/D,CAAAA;AAEJ,MAAIiC,CAAAA,GAAK8B,CAAAA,KAAU,CAAnB;AAAA,MACI7B,CAAAA,GAAAA,CAAM6B,CAAAA,GAAQ9B,CAAdC,IAAoB,UAApBA,KAAmC,CADvC;AAWA,SATIlC,CAAAA,KACAkC,CAAAA,GAAAA,CAAMA,CAANA,KAAa,CAAbA,EACAD,CAAAA,GAAAA,CAAMA,CAANA,KAAa,CADbC,EACa,EACPD,CADO,GACF,UADE,KAETA,CAAAA,GAAK,CAALA,EAAK,EACCC,CADD,GACM,UADN,KAEDA,CAAAA,GAAK,CAFJ,CAFI,CAFblC,CAAAA,EASG,IAAIwD,QAAJ,CAAavB,CAAb,EAAiBC,CAAjB,CAAP;AAAwBA,CAjB5BsB,EAyBAA,QAAAA,CAASQ,IAATR,GAAgB,UAAcO,CAAd,EAAcA;AAC1B,MAAqB,YAAA,OAAVA,CAAX,EACI,OAAOP,QAAAA,CAASM,UAATN,CAAoBO,CAApBP,CAAP;;AACJ,MAAIS,OAAAA,CAAKC,QAALD,CAAcF,CAAdE,CAAJ,EAA0B;AAEtB,QAAA,CAAIA,OAAAA,CAAKE,IAAT,EAGI,OAAOX,QAAAA,CAASM,UAATN,CAAoBa,QAAAA,CAASN,CAATM,EAAgB,EAAhBA,CAApBb,CAAP;AAFAO,IAAAA,CAAAA,GAAQE,OAAAA,CAAKE,IAALF,CAAUG,UAAVH,CAAqBF,CAArBE,CAARF;AAIR;;AAAA,SAAOA,CAAAA,CAAMO,GAANP,IAAaA,CAAAA,CAAMQ,IAAnBR,GAA0B,IAAIP,QAAJ,CAAaO,CAAAA,CAAMO,GAANP,KAAc,CAA3B,EAA8BA,CAAAA,CAAMQ,IAANR,KAAe,CAA7C,CAA1BA,GAA4EN,IAAnF;AAAmFA,CAnCvFD,EA2CAA,QAAAA,CAASnF,SAATmF,CAAmBE,QAAnBF,GAA8B,UAAkBgB,CAAlB,EAAkBA;AAC5C,MAAA,CAAKA,CAAL,IAAiBrG,KAAK+D,EAAL/D,KAAY,EAA7B,EAAiC;AAC7B,QAAI8D,CAAAA,GAAgB,IAAA,CAAV9D,KAAK8D,EAAK,KAAM,CAA1B;AAAA,QACIC,CAAAA,GAAAA,CAAM/D,KAAK+D,EAAXA,KAAsB,CAD1B;AAIA,WAFKD,CAAAA,KACDC,CAAAA,GAAKA,CAAAA,GAAK,CAALA,KAAW,CADfD,CAAAA,EACe,EACXA,CAAAA,GAAU,aAALC,CADM,CACpB;AAEJ;;AAAA,SAAO/D,KAAK8D,EAAL9D,GAAoB,aAAVA,KAAK+D,EAAtB;AAAsBA,CAnD1BsB,EA2DAA,QAAAA,CAASnF,SAATmF,CAAmBiB,MAAnBjB,GAA4B,UAAgBgB,CAAhB,EAAgBA;AACxC,SAAOP,OAAAA,CAAKE,IAALF,GACD,IAAIA,OAAAA,CAAKE,IAAT,CAAwB,IAAVhG,KAAK8D,EAAnB,EAAqC,IAAV9D,KAAK+D,EAAhC,EAAwCwC,OAAAA,CAAQF,CAARE,CAAxC,CADCT,GAC+CO;AAE9CF,IAAAA,GAAAA,EAAe,IAAVnG,KAAK8D,EAFoCuC;AAE5BD,IAAAA,IAAAA,EAAgB,IAAVpG,KAAK+D,EAFiBsC;AAETA,IAAAA,QAAAA,EAAUE,OAAAA,CAAQF,CAARE;AAFDF,GADtD;AAG+DA,CA/DnEhB;AAkEA,IAAI1F,UAAAA,GAAaN,MAAAA,CAAOa,SAAPb,CAAiBM,UAAlC;AAOA0F,QAAAA,CAASmB,QAATnB,GAAoB,UAAkBoB,CAAlB,EAAkBA;AAClC,SAAIA,CAAAA,KAASf,QAATe,GACOnB,IADPmB,GAEG,IAAIpB,QAAJ,CAAIA,CACL1F,UAAAA,CAAWyF,IAAXzF,CAAgB8G,CAAhB9G,EAAsB,CAAtBA,IACAA,UAAAA,CAAWyF,IAAXzF,CAAgB8G,CAAhB9G,EAAsB,CAAtBA,KAA4B,CAD5BA,GAEAA,UAAAA,CAAWyF,IAAXzF,CAAgB8G,CAAhB9G,EAAsB,CAAtBA,KAA4B,EAF5BA,GAGAA,UAAAA,CAAWyF,IAAXzF,CAAgB8G,CAAhB9G,EAAsB,CAAtBA,KAA4B,EAJvB0F,MAI+B,CAJnC,EAImC,CAEpC1F,UAAAA,CAAWyF,IAAXzF,CAAgB8G,CAAhB9G,EAAsB,CAAtBA,IACAA,UAAAA,CAAWyF,IAAXzF,CAAgB8G,CAAhB9G,EAAsB,CAAtBA,KAA4B,CAD5BA,GAEAA,UAAAA,CAAWyF,IAAXzF,CAAgB8G,CAAhB9G,EAAsB,CAAtBA,KAA4B,EAF5BA,GAGAA,UAAAA,CAAWyF,IAAXzF,CAAgB8G,CAAhB9G,EAAsB,CAAtBA,KAA4B,EALQ,MAKA,CATnC,CAFP;AAW0C,CAZ9C0F,EAoBAA,QAAAA,CAASnF,SAATmF,CAAmBqB,MAAnBrB,GAA4B,YAAA;AACxB,SAAOhG,MAAAA,CAAOC,YAAPD,CACc,MAAjBW,KAAK8D,EADFzE,EAEHW,KAAK8D,EAAL9D,KAAY,CAAZA,GAAiB,GAFdX,EAGHW,KAAK8D,EAAL9D,KAAY,EAAZA,GAAiB,GAHdX,EAIHW,KAAK8D,EAAL9D,KAAY,EAJTX,EAKc,MAAjBW,KAAK+D,EALF1E,EAMHW,KAAK+D,EAAL/D,KAAY,CAAZA,GAAiB,GANdX,EAOHW,KAAK+D,EAAL/D,KAAY,EAAZA,GAAiB,GAPdX,EAQHW,KAAK+D,EAAL/D,KAAY,EARTX,CAAP;AAQgB,CA7BpBgG,EAqCAA,QAAAA,CAASnF,SAATmF,CAAmBG,QAAnBH,GAA8B,YAAA;AAC1B,MAAIsB,CAAAA,GAAS3G,KAAK+D,EAAL/D,IAAW,EAAxB;AAGA,SAFAA,KAAK+D,EAAL/D,GAAK+D,CAAAA,CAAQ/D,KAAK+D,EAAL/D,IAAW,CAAXA,GAAeA,KAAK8D,EAAL9D,KAAY,EAAnC+D,IAAyC4C,CAAzC5C,MAAmD,CAAxD/D,EACAA,KAAK8D,EAAL9D,GAAK8D,CAAQ9D,KAAK8D,EAAL9D,IAAW,CAAXA,GAAiC2G,CAAzC7C,MAAmD,CADxD9D,EAEOA,IAAP;AAAOA,CAzCXqF,EAgDAA,QAAAA,CAASnF,SAATmF,CAAmBI,QAAnBJ,GAA8B,YAAA;AAC1B,MAAIsB,CAAAA,GAAAA,EAAmB,IAAV3G,KAAK8D,EAAd6C,CAAJ;AAGA,SAFA3G,KAAK8D,EAAL9D,GAAK8D,CAAAA,CAAQ9D,KAAK8D,EAAL9D,KAAY,CAAZA,GAAgBA,KAAK+D,EAAL/D,IAAW,EAAnC8D,IAAyC6C,CAAzC7C,MAAmD,CAAxD9D,EACAA,KAAK+D,EAAL/D,GAAK+D,CAAQ/D,KAAK+D,EAAL/D,KAAY,CAAZA,GAAiC2G,CAAzC5C,MAAmD,CADxD/D,EAEOA,IAAP;AAAOA,CApDXqF,EA2DAA,QAAAA,CAASnF,SAATmF,CAAmB9H,MAAnB8H,GAA4B,YAAA;AACxB,MAAIuB,CAAAA,GAAS5G,KAAK8D,EAAlB;AAAA,MACI+C,CAAAA,GAAAA,CAAS7G,KAAK8D,EAAL9D,KAAY,EAAZA,GAAiBA,KAAK+D,EAAL/D,IAAW,CAArC6G,MAA4C,CADhD;AAAA,MAEIC,CAAAA,GAAS9G,KAAK+D,EAAL/D,KAAY,EAFzB;AAGA,SAAiB,MAAV8G,CAAU,GACA,MAAVD,CAAU,GACRD,CAAAA,GAAQ,KAARA,GACEA,CAAAA,GAAQ,GAARA,GAAc,CAAdA,GAAkB,CADpBA,GAEEA,CAAAA,GAAQ,OAARA,GAAkB,CAAlBA,GAAsB,CAHhB,GAIRC,CAAAA,GAAQ,KAARA,GACEA,CAAAA,GAAQ,GAARA,GAAc,CAAdA,GAAkB,CADpBA,GAEEA,CAAAA,GAAQ,OAARA,GAAkB,CAAlBA,GAAsB,CAPhB,GAQVC,CAAAA,GAAQ,GAARA,GAAc,CAAdA,GAAkB,EARzB;AAQyB,CAvE7BzB;AAuE6B,IAAA,OAAA,GAAA,oBAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA;ACtM7B,MACIS,CAAAA,GAAO7H,CADX;;AA6NA,WAASuL,CAAT,CAAeC,CAAf,EAAoBC,CAApB,EAAyBC,CAAzB,EAAyBA;AACrB,SAAK,IAAIrF,CAAAA,GAAOD,MAAAA,CAAOC,IAAPD,CAAYqF,CAAZrF,CAAX,EAA6B3F,CAAAA,GAAI,CAAtC,EAAyCA,CAAAA,GAAI4F,CAAAA,CAAK/G,MAAlD,EAAkDA,EAAUmB,CAA5D;AAA4DA,WACnCkB,CADmClB,KACpD+K,CAAAA,CAAInF,CAAAA,CAAK5F,CAAL4F,CAAJmF,CADoD/K,IACrBiL,CADqBjL,KAEpD+K,CAAAA,CAAInF,CAAAA,CAAK5F,CAAL4F,CAAJmF,CAAAA,GAAeC,CAAAA,CAAIpF,CAAAA,CAAK5F,CAAL4F,CAAJoF,CAFqChL;AAA5D;;AAGA,WAAO+K,CAAP;AAoBJ;;AAAA,WAASO,CAAT,CAAkBC,CAAlB,EAAkBA;AAEd,aAASC,CAAT,CAAqBC,CAArB,EAA8BC,CAA9B,EAA8BA;AAE1B,UAAA,EAAMpK,gBAAgBkK,CAAtB,CAAA,EACI,OAAO,IAAIA,CAAJ,CAAgBC,CAAhB,EAAyBC,CAAzB,CAAP;AAKJ/F,MAAAA,MAAAA,CAAOgG,cAAPhG,CAAsBrE,IAAtBqE,EAA4B,SAA5BA,EAA4B;AAAaiG,QAAAA,GAAAA,EAAK,eAAA;AAAa,iBAAOH,CAAP;AAAOA;AAAtC,OAA5B9F,GAGIxE,KAAAA,CAAM0K,iBAAN1K,GACAA,KAAAA,CAAM0K,iBAAN1K,CAAwBG,IAAxBH,EAA8BqK,CAA9BrK,CADAA,GAGAwE,MAAAA,CAAOgG,cAAPhG,CAAsBrE,IAAtBqE,EAA4B,OAA5BA,EAA4B;AAAWuB,QAAAA,KAAAA,EAAO,IAAK/F,KAAL,EAAP+F,CAAqB4E,KAArB5E,IAA8B;AAAzC,OAA5BvB,CANJA,EAQI+F,CAAAA,IACAZ,CAAAA,CAAMxJ,IAANwJ,EAAYY,CAAZZ,CATJnF;AAoBJ;;AAAA,WAAA,CARC6F,CAAAA,CAAYhK,SAAZgK,GAAwB7F,MAAAA,CAAOoG,MAAPpG,CAAcxE,KAAAA,CAAMK,SAApBmE,CAQzB,EARyDqG,WAQzD,GARuER,CAQvE,EANA7F,MAAAA,CAAOgG,cAAPhG,CAAsB6F,CAAAA,CAAYhK,SAAlCmE,EAA6C,MAA7CA,EAA6C;AAAUiG,MAAAA,GAAAA,EAAK,eAAA;AAAa,eAAOL,CAAP;AAAOA;AAAnC,KAA7C5F,CAMA,EAJA6F,CAAAA,CAAYhK,SAAZgK,CAAsBS,QAAtBT,GAAiC,YAAA;AAC7B,aAAOlK,KAAKiK,IAALjK,GAAY,IAAZA,GAAmBA,KAAKmK,OAA/B;AAA+BA,KAGnC,EAAOD,CAAP;AA/QJpE;;AAAAA,EAAAA,CAAAA,CAAK7I,SAAL6I,GAAiBiB,SAAjBjB,EAGAA,CAAAA,CAAK9H,MAAL8H,GAAckB,QAHdlB,EAMAA,CAAAA,CAAK/F,YAAL+F,GAAoBmB,YANpBnB,EASAA,CAAAA,CAAKoB,KAALpB,GAAaqB,OATbrB,EAYAA,CAAAA,CAAK9B,OAAL8B,GAAesB,SAZftB,EAeAA,CAAAA,CAAKtB,IAALsB,GAAYuB,MAfZvB,EAkBAA,CAAAA,CAAKhB,IAALgB,GAAYwB,MAlBZxB,EAqBAA,CAAAA,CAAKT,QAALS,GAAgByB,QArBhBzB,EA6BAA,CAAAA,CAAK0B,UAAL1B,GAAkBzB,MAAAA,CAAOoD,MAAPpD,GAAgBA,MAAAA,CAAOoD,MAAPpD,CAAOoD,EAAPpD,CAAhBA,GAAuBoD,EA7BzC3B,EAoCAA,CAAAA,CAAK4B,WAAL5B,GAAmBzB,MAAAA,CAAOoD,MAAPpD,GAAgBA,MAAAA,CAAOoD,MAAPpD,CAAOoD,EAAPpD,CAAhBA,GAAuBoD,EApC1C3B,EA4CAA,CAAAA,CAAK6B,MAAL7B,GAAcS,OAAAA,CAAQqB,cAAAA,CAAOC,OAAPD,IAAkBA,cAAAA,CAAOC,OAAPD,CAAeE,QAAjCF,IAA6CA,cAAAA,CAAOC,OAAPD,CAAeE,QAAfF,CAAwBG,IAA7ExB,CA5CdT,EAoDAA,CAAAA,CAAKkC,SAALlC,GAAiBmC,MAAAA,CAAOD,SAAPC,IAA+C,UAAmBrC,CAAnB,EAAmBA;AAC/E,WAAwB,YAAA,OAAVA,CAAU,IAAYsC,QAAAA,CAAStC,CAATsC,CAAZ,IAA+B5J,IAAAA,CAAK2D,KAAL3D,CAAWsH,CAAXtH,MAAsBsH,CAA7E;AAA6EA,GArDjFE,EA6DAA,CAAAA,CAAKC,QAALD,GAAgB,UAAkBF,CAAlB,EAAkBA;AAC9B,WAAwB,YAAA,OAAVA,CAAU,IAAYA,CAAAA,YAAiBvG,MAArD;AAAqDA,GA9DzDyG,EAsEAA,CAAAA,CAAKqC,QAALrC,GAAgB,UAAkBF,CAAlB,EAAkBA;AAC9B,WAAOA,CAAAA,IAA0B,YAAA,OAAVA,CAAvB;AAAuBA,GAvE3BE,EAkFAA,CAAAA,CAAKsC,KAALtC,GAQAA,CAAAA,CAAKuC,KAALvC,GAAa,UAAewC,CAAf,EAAoBC,CAApB,EAAoBA;AAC7B,QAAI3C,CAAAA,GAAQ0C,CAAAA,CAAIC,CAAJD,CAAZ;AACA,WAAA,EAAa,QAAT1C,CAAS,IAATA,CAAiB0C,CAAAA,CAAIE,cAAJF,CAAmBC,CAAnBD,CAArB,MAC4B,YAAA,OAAV1C,CAAU,IAAVA,CAAuBvI,KAAAA,CAAMoL,OAANpL,CAAcuI,CAAdvI,IAAuBuI,CAAAA,CAAMrI,MAA7BF,GAAsCgH,MAAAA,CAAOC,IAAPD,CAAYuB,CAAZvB,EAAmB9G,MAAhFqI,IAA0F,CAD5G,CAAA;AAC4G,GA7FhHE,EA4GAA,CAAAA,CAAK4C,MAAL5C,GAAc,YAAA;AACV,QAAA;AACI,UAAI4C,CAAAA,GAAS5C,CAAAA,CAAK9B,OAAL8B,CAAa,QAAbA,EAAuB4C,MAApC;AAEA,aAAOA,CAAAA,CAAOxI,SAAPwI,CAAiBC,SAAjBD,GAA6BA,CAA7BA,GAAiE,IAAxE;AACF,KAJF,CAIE,OAAOnE,CAAP,EAAOA;AAEL,aAAO,IAAP;AAAO;AAPD,GAAA,EA5GduB,EAwHAA,CAAAA,CAAK8C,YAAL9C,GAAoB,IAxHpBA,EA2HAA,CAAAA,CAAK+C,mBAAL/C,GAA2B,IA3H3BA,EAkIAA,CAAAA,CAAKgD,SAALhD,GAAiB,UAAmBiD,CAAnB,EAAmBA;AAEhC,WAA8B,YAAA,OAAhBA,CAAgB,GACxBjD,CAAAA,CAAK4C,MAAL5C,GACIA,CAAAA,CAAK+C,mBAAL/C,CAAyBiD,CAAzBjD,CADJA,GAEI,IAAIA,CAAAA,CAAKzI,KAAT,CAAe0L,CAAf,CAHoB,GAIxBjD,CAAAA,CAAK4C,MAAL5C,GACIA,CAAAA,CAAK8C,YAAL9C,CAAkBiD,CAAlBjD,CADJA,GAE0B,eAAA,OAAfhF,UAAe,GAClBiI,CADkB,GAElB,IAAIjI,UAAJ,CAAeiI,CAAf,CARd;AAQ6BA,GA5IjCjD,EAmJAA,CAAAA,CAAKzI,KAALyI,GAAmC,eAAA,OAAfhF,UAAe,GAAcA,UAAd,GAAsDzD,KAnJzFyI,EAkKAA,CAAAA,CAAKE,IAALF,GAAuC8B,cAAAA,CAAOoB,OAAPpB,IAA6CA,cAAAA,CAAOoB,OAAPpB,CAAe5B,IAA5D4B,IAAoE9B,CAAAA,CAAK9B,OAAL8B,CAAa,MAAbA,CAlK3GA,EAyKAA,CAAAA,CAAKmD,MAALnD,GAAc,kBAzKdA,EAgLAA,CAAAA,CAAKoD,OAALpD,GAAe,uBAhLfA,EAuLAA,CAAAA,CAAKqD,OAALrD,GAAe,4CAvLfA,EA8LAA,CAAAA,CAAKsD,UAALtD,GAAkB,UAAoBF,CAApB,EAAoBA;AAClC,WAAOA,CAAAA,GACDE,CAAAA,CAAKT,QAALS,CAAcD,IAAdC,CAAmBF,CAAnBE,EAA0BY,MAA1BZ,EADCF,GAEDE,CAAAA,CAAKT,QAALS,CAAcJ,QAFpB;AAEoBA,GAjMxBI,EA0MAA,CAAAA,CAAKuD,YAALvD,GAAoB,UAAsBW,CAAtB,EAA4BJ,CAA5B,EAA4BA;AAC5C,QAAIiD,CAAAA,GAAOxD,CAAAA,CAAKT,QAALS,CAAcU,QAAdV,CAAuBW,CAAvBX,CAAX;AACA,WAAIA,CAAAA,CAAKE,IAALF,GACOA,CAAAA,CAAKE,IAALF,CAAUyD,QAAVzD,CAAmBwD,CAAAA,CAAKxF,EAAxBgC,EAA4BwD,CAAAA,CAAKvF,EAAjC+B,EAAqCO,CAArCP,CADPA,GAEGwD,CAAAA,CAAK/D,QAAL+D,CAAc/C,OAAAA,CAAQF,CAARE,CAAd+C,CAFP;AAE6BjD,GA9MjCP,EAgOAA,CAAAA,CAAK0D,KAAL1D,GAAa0D,CAhOb1D,EAuOAA,CAAAA,CAAK8D,OAAL9D,GAAe,UAAiB+D,CAAjB,EAAiBA;AAC5B,WAAOA,CAAAA,CAAIxL,MAAJwL,CAAW,CAAXA,EAAcC,WAAdD,KAA8BA,CAAAA,CAAIE,SAAJF,CAAc,CAAdA,CAArC;AAAmD,GAxOvD/D,EAkRAA,CAAAA,CAAKkE,QAALlE,GAAgBkE,CAlRhBlE,EAqSAA,CAAAA,CAAK8E,aAAL9E,GAAqBkE,CAAAA,CAAS,eAATA,CArSrBlE,EAyTAA,CAAAA,CAAK+E,WAAL/E,GAAmB,UAAkBgF,CAAlB,EAAkBA;AAEjC,SADA,IAAIC,CAAAA,GAAAA,EAAJ,EACSrM,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAIoM,CAAAA,CAAWvN,MAA/B,EAA+BA,EAAUmB,CAAzC;AACIqM,MAAAA,CAAAA,CAASD,CAAAA,CAAWpM,CAAXoM,CAATC,CAAAA,GAA0B,CAA1BA;AADJ;;AAQA,WAAO,YAAA;AACH,WAAK,IAAIzG,CAAAA,GAAOD,MAAAA,CAAOC,IAAPD,CAAYrE,IAAZqE,CAAX,EAA8B3F,CAAAA,GAAI4F,CAAAA,CAAK/G,MAAL+G,GAAc,CAArD,EAAwD5F,CAAAA,GAAAA,CAAK,CAA7D,EAA6D,EAAKA,CAAlE;AACI,YAA0B,MAAtBqM,CAAAA,CAASzG,CAAAA,CAAK5F,CAAL4F,CAATyG,CAAsB,IAARrM,KAA+BkB,CAA/BlB,KAAasB,KAAKsE,CAAAA,CAAK5F,CAAL4F,CAALtE,CAAL,IAAsD,SAAlBA,KAAKsE,CAAAA,CAAK5F,CAAL4F,CAALtE,CAA9D,EACI,OAAOsE,CAAAA,CAAK5F,CAAL4F,CAAP;AAFR;AAEoB5F,KAHxB;AAGwBA,GAtU5BoH,EAuVAA,CAAAA,CAAKkF,WAALlF,GAAmB,UAAkBgF,CAAlB,EAAkBA;AAQjC,WAAO,UAASb,CAAT,EAASA;AACZ,WAAK,IAAIvL,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAIoM,CAAAA,CAAWvN,MAA/B,EAA+BA,EAAUmB,CAAzC;AACQoM,QAAAA,CAAAA,CAAWpM,CAAXoM,CAAAA,KAAkBb,CAAlBa,IAAkBb,OACXjK,KAAK8K,CAAAA,CAAWpM,CAAXoM,CAAL9K,CADP8K;AADR;AAE+BpM,KAHnC;AAGmCA,GAlWvCoH,EAsXAA,CAAAA,CAAKmF,aAALnF,GAAKmF;AACDC,IAAAA,KAAAA,EAAO7L,MADN4L;AAEDE,IAAAA,KAAAA,EAAO9L,MAFN4L;AAGDG,IAAAA,KAAAA,EAAO/L,MAHN4L;AAIDI,IAAAA,IAAAA,EAAAA,CAAM;AAJLJ,GAtXLnF,EA6XAA,CAAAA,CAAKwF,UAALxF,GAAkB,YAAA;AACd,QAAI4C,CAAAA,GAAS5C,CAAAA,CAAK4C,MAAlB;AAEKA,IAAAA,CAAAA,IAML5C,CAAAA,CAAK8C,YAAL9C,GAAoB4C,CAAAA,CAAO7C,IAAP6C,KAAgB5H,UAAAA,CAAW+E,IAA3B6C,IAAmCA,CAAAA,CAAO7C,IAA1C6C,IAEhB,UAAqB9C,CAArB,EAA4B2F,CAA5B,EAA4BA;AACxB,aAAO,IAAI7C,CAAJ,CAAW9C,CAAX,EAAkB2F,CAAlB,CAAP;AAAyBA,KAHjCzF,EAKAA,CAAAA,CAAK+C,mBAAL/C,GAA2B4C,CAAAA,CAAO8C,WAAP9C,IAEvB,UAA4B1D,CAA5B,EAA4BA;AACxB,aAAO,IAAI0D,CAAJ,CAAW1D,CAAX,CAAP;AAAkBA,KAdrB0D,IACD5C,CAAAA,CAAK8C,YAAL9C,GAAoBA,CAAAA,CAAK+C,mBAAL/C,GAA2B,IAD9C4C;AAC8C,GAjYvD5C;AAiYuD,CD/L1B,CAAA;AAAA,IC+L0B,MAAA,GCpYtC2F,MFqMY;AAAA,IEjMzBC,YFiMyB;AAAA,IE/LzBrG,UAAAA,GAAYS,OAAAA,CAAKT,QF+LQ;AAAA,IE9LzBrH,MAAAA,GAAY8H,OAAAA,CAAK9H,MF8LQ;AAAA,IE7LzBwG,IAAAA,GAAYsB,OAAAA,CAAKtB,IF6LQ;;AElL7B,SAASmH,EAAT,CAAYzO,CAAZ,EAAgBuH,CAAhB,EAAqBxD,CAArB,EAAqBA;AAMjBjB,OAAK9C,EAAL8C,GAAU9C,CAAV8C,EAMAA,KAAKyE,GAALzE,GAAWyE,CANXzE,EAYAA,KAAK4L,IAAL5L,GAAK4L,KAAOhM,CAZZI,EAkBAA,KAAKiB,GAALjB,GAAWiB,CAlBXjB;AAsBJ;;AAAA,SAAS6L,IAAT,GAASA,CAUT;;AAAA,SAASC,KAAT,CAAeC,CAAf,EAAeA;AAMX/L,OAAKgM,IAALhM,GAAY+L,CAAAA,CAAOC,IAAnBhM,EAMAA,KAAKiM,IAALjM,GAAY+L,CAAAA,CAAOE,IANnBjM,EAYAA,KAAKyE,GAALzE,GAAW+L,CAAAA,CAAOtH,GAZlBzE,EAkBAA,KAAK4L,IAAL5L,GAAY+L,CAAAA,CAAOG,MAlBnBlM;AA0BJ;;AAAA,SAASyL,MAAT,GAASA;AAMLzL,OAAKyE,GAALzE,GAAW,CAAXA,EAMAA,KAAKgM,IAALhM,GAAY,IAAI2L,EAAJ,CAAOE,IAAP,EAAa,CAAb,EAAgB,CAAhB,CANZ7L,EAYAA,KAAKiM,IAALjM,GAAYA,KAAKgM,IAZjBhM,EAkBAA,KAAKkM,MAALlM,GAAc,IAlBdA;AAuEJ;;AAAA,SAASqM,SAAT,CAAmBpL,CAAnB,EAAwBC,CAAxB,EAA6BC,CAA7B,EAA6BA;AACzBD,EAAAA,CAAAA,CAAIC,CAAJD,CAAAA,GAAiB,MAAND,CAAXC;AAGJ;;AAAA,SAASoL,aAAT,CAAuBrL,CAAvB,EAA4BC,CAA5B,EAAiCC,CAAjC,EAAiCA;AAC7B,SAAOF,CAAAA,GAAM,GAAb;AACIC,IAAAA,CAAAA,CAAIC,CAAAA,EAAJD,CAAAA,GAAmB,MAAND,CAAM,GAAM,GAAzBC,EACAD,CAAAA,MAAS,CADTC;AADJ;;AAIAA,EAAAA,CAAAA,CAAIC,CAAJD,CAAAA,GAAWD,CAAXC;AAYJ;;AAAA,SAASqL,QAAT,CAAkB9H,CAAlB,EAAuBxD,CAAvB,EAAuBA;AACnBjB,OAAKyE,GAALzE,GAAWyE,CAAXzE,EACAA,KAAK4L,IAAL5L,GAAK4L,KAAOhM,CADZI,EAEAA,KAAKiB,GAALjB,GAAWiB,CAFXjB;AAgDJ;;AAAA,SAAS0M,aAAT,CAAuBzL,CAAvB,EAA4BC,CAA5B,EAAiCC,CAAjC,EAAiCA;AAC7B,SAAOF,CAAAA,CAAI8C,EAAX;AACI7C,IAAAA,CAAAA,CAAIC,CAAAA,EAAJD,CAAAA,GAAsB,MAATD,CAAAA,CAAI6C,EAAK,GAAM,GAA5B5C,EACAD,CAAAA,CAAI6C,EAAJ7C,GAAI6C,CAAM7C,CAAAA,CAAI6C,EAAJ7C,KAAW,CAAXA,GAAeA,CAAAA,CAAI8C,EAAJ9C,IAAU,EAA/B6C,MAAuC,CAD3C5C,EAEAD,CAAAA,CAAI8C,EAAJ9C,MAAY,CAFZC;AADJ;;AAKA,SAAOD,CAAAA,CAAI6C,EAAJ7C,GAAS,GAAhB;AACIC,IAAAA,CAAAA,CAAIC,CAAAA,EAAJD,CAAAA,GAAsB,MAATD,CAAAA,CAAI6C,EAAK,GAAM,GAA5B5C,EACAD,CAAAA,CAAI6C,EAAJ7C,GAASA,CAAAA,CAAI6C,EAAJ7C,KAAW,CADpBC;AADJ;;AAIAA,EAAAA,CAAAA,CAAIC,CAAAA,EAAJD,CAAAA,GAAaD,CAAAA,CAAI6C,EAAjB5C;AA2CJ;;AAAA,SAAS8L,YAAT,CAAsB/L,CAAtB,EAA2BC,CAA3B,EAAgCC,CAAhC,EAAgCA;AAC5BD,EAAAA,CAAAA,CAAIC,CAAJD,CAAAA,GAA8B,MAAdD,CAAhBC,EACAA,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAgBD,CAAAA,KAAQ,CAARA,GAAc,GAD9BC,EAEAA,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAgBD,CAAAA,KAAQ,EAARA,GAAc,GAF9BC,EAGAA,CAAAA,CAAIC,CAAAA,GAAM,CAAVD,CAAAA,GAAgBD,CAAAA,KAAQ,EAHxBC;AAnKJuK;;AAAAA,MAAAA,CAAOhB,MAAPgB,GAAgB3F,OAAAA,CAAK4C,MAAL5C,GACV,YAAA;AACE,SAAA,CAAQ2F,MAAAA,CAAOhB,MAAPgB,GAAgB,YAAA;AACpB,WAAO,IAAIC,YAAJ,EAAP;AAAWA,GADf,GAAA;AACeA,CAHP5F,GAOV,YAAA;AACE,SAAO,IAAI2F,MAAJ,EAAP;AAAWA,CARnBA,EAgBAA,MAAAA,CAAO1G,KAAP0G,GAAe,UAAezG,CAAf,EAAeA;AAC1B,SAAO,IAAIc,OAAAA,CAAKzI,KAAT,CAAe2H,CAAf,CAAP;AAAsBA,CAjB1ByG,EAsBI3F,OAAAA,CAAKzI,KAALyI,KAAezI,KAAfyI,KACA2F,MAAAA,CAAO1G,KAAP0G,GAAe3F,OAAAA,CAAKhB,IAALgB,CAAU2F,MAAAA,CAAO1G,KAAjBe,EAAwBA,OAAAA,CAAKzI,KAALyI,CAAW5F,SAAX4F,CAAqBqG,QAA7CrG,CADfA,CAtBJ2F,EAiCAA,MAAAA,CAAOvL,SAAPuL,CAAiBW,KAAjBX,GAAyB,UAAcvO,CAAd,EAAkBuH,CAAlB,EAAuBxD,CAAvB,EAAuBA;AAG5C,SAFAjB,KAAKiM,IAALjM,GAAYA,KAAKiM,IAALjM,CAAU4L,IAAV5L,GAAiB,IAAI2L,EAAJ,CAAOzO,CAAP,EAAWuH,CAAX,EAAgBxD,CAAhB,CAA7BjB,EACAA,KAAKyE,GAALzE,IAAYyE,CADZzE,EAEOA,IAAP;AAAOA,CApCXyL,EAkEAc,QAAAA,CAASrM,SAATqM,GAAqBlI,MAAAA,CAAOoG,MAAPpG,CAAcsH,EAAAA,CAAGzL,SAAjBmE,CAlErBoH,EAmEAc,QAAAA,CAASrM,SAATqM,CAAmBrP,EAAnBqP,GAAwBD,aAnExBb,EA0EAA,MAAAA,CAAOvL,SAAPuL,CAAiBe,MAAjBf,GAA0B,UAAsB7F,CAAtB,EAAsBA;AAW5C,SARA5F,KAAKyE,GAALzE,IAAKyE,CAAQzE,KAAKiM,IAALjM,GAAYA,KAAKiM,IAALjM,CAAU4L,IAAV5L,GAAiB,IAAIuM,QAAJ,CAAIA,CACzC3G,CAAAA,MAAkB,CADuB2G,IAEhC,GAFgCA,GAEpB,CAFoBA,GAGxC3G,CAAAA,GAAQ,KAARA,GAAoB,CAApBA,GACAA,CAAAA,GAAQ,OAARA,GAAoB,CAApBA,GACAA,CAAAA,GAAQ,SAARA,GAAoB,CAApBA,GACoB,CANgB,EAO1CA,CAP0C,CAArCnB,EAOGA,GAPRzE,EAQOA,IAAP;AAAOA,CArFXyL,EA8FAA,MAAAA,CAAOvL,SAAPuL,CAAiBgB,KAAjBhB,GAAyB,UAAqB7F,CAArB,EAAqBA;AAC1C,SAAOA,CAAAA,GAAQ,CAARA,GACD5F,KAAKoM,KAALpM,CAAW0M,aAAX1M,EAA0B,EAA1BA,EAA8BqF,UAAAA,CAASM,UAATN,CAAoBO,CAApBP,CAA9BrF,CADC4F,GAED5F,KAAKwM,MAALxM,CAAY4F,CAAZ5F,CAFN;AAEkB4F,CAjGtB6F,EAyGAA,MAAAA,CAAOvL,SAAPuL,CAAiBkB,MAAjBlB,GAA0B,UAAsB7F,CAAtB,EAAsBA;AAC5C,SAAO5F,KAAKwM,MAALxM,CAAKwM,CAAQ5G,CAAAA,IAAS,CAATA,GAAaA,CAAAA,IAAS,EAA9B4G,MAAsC,CAA3CxM,CAAP;AAAkD,CA1GtDyL,EAgIAA,MAAAA,CAAOvL,SAAPuL,CAAiBmB,MAAjBnB,GAA0B,UAAsB7F,CAAtB,EAAsBA;AAC5C,MAAI0D,CAAAA,GAAOjE,UAAAA,CAASQ,IAATR,CAAcO,CAAdP,CAAX;AACA,SAAOrF,KAAKoM,KAALpM,CAAW0M,aAAX1M,EAA0BsJ,CAAAA,CAAK/L,MAAL+L,EAA1BtJ,EAAyCsJ,CAAzCtJ,CAAP;AAAgDsJ,CAlIpDmC,EA4IAA,MAAAA,CAAOvL,SAAPuL,CAAiBoB,KAAjBpB,GAAyBA,MAAAA,CAAOvL,SAAPuL,CAAiBmB,MA5I1CnB,EAoJAA,MAAAA,CAAOvL,SAAPuL,CAAiBqB,MAAjBrB,GAA0B,UAAsB7F,CAAtB,EAAsBA;AAC5C,MAAI0D,CAAAA,GAAOjE,UAAAA,CAASQ,IAATR,CAAcO,CAAdP,EAAqBG,QAArBH,EAAX;AACA,SAAOrF,KAAKoM,KAALpM,CAAW0M,aAAX1M,EAA0BsJ,CAAAA,CAAK/L,MAAL+L,EAA1BtJ,EAAyCsJ,CAAzCtJ,CAAP;AAAgDsJ,CAtJpDmC,EA8JAA,MAAAA,CAAOvL,SAAPuL,CAAiBsB,IAAjBtB,GAAwB,UAAoB7F,CAApB,EAAoBA;AACxC,SAAO5F,KAAKoM,KAALpM,CAAWqM,SAAXrM,EAAsB,CAAtBA,EAAyB4F,CAAAA,GAAQ,CAARA,GAAY,CAArC5F,CAAP;AAA4C,CA/JhDyL,EA8KAA,MAAAA,CAAOvL,SAAPuL,CAAiBwB,OAAjBxB,GAA2B,UAAuB7F,CAAvB,EAAuBA;AAC9C,SAAO5F,KAAKoM,KAALpM,CAAWgN,YAAXhN,EAAyB,CAAzBA,EAA4B4F,CAAAA,KAAU,CAAtC5F,CAAP;AAA6C,CA/KjDyL,EAwLAA,MAAAA,CAAOvL,SAAPuL,CAAiByB,QAAjBzB,GAA4BA,MAAAA,CAAOvL,SAAPuL,CAAiBwB,OAxL7CxB,EAgMAA,MAAAA,CAAOvL,SAAPuL,CAAiB0B,OAAjB1B,GAA2B,UAAuB7F,CAAvB,EAAuBA;AAC9C,MAAI0D,CAAAA,GAAOjE,UAAAA,CAASQ,IAATR,CAAcO,CAAdP,CAAX;AACA,SAAOrF,KAAKoM,KAALpM,CAAWgN,YAAXhN,EAAyB,CAAzBA,EAA4BsJ,CAAAA,CAAKxF,EAAjC9D,EAAqCoM,KAArCpM,CAA2CgN,YAA3ChN,EAAyD,CAAzDA,EAA4DsJ,CAAAA,CAAKvF,EAAjE/D,CAAP;AAAwE+D,CAlM5E0H,EA4MAA,MAAAA,CAAOvL,SAAPuL,CAAiB2B,QAAjB3B,GAA4BA,MAAAA,CAAOvL,SAAPuL,CAAiB0B,OA5M7C1B,EAoNAA,MAAAA,CAAOvL,SAAPuL,CAAiBvE,KAAjBuE,GAAyB,UAAqB7F,CAArB,EAAqBA;AAC1C,SAAO5F,KAAKoM,KAALpM,CAAW8F,OAAAA,CAAKoB,KAALpB,CAAWzE,YAAtBrB,EAAoC,CAApCA,EAAuC4F,CAAvC5F,CAAP;AAA8C4F,CArNlD6F,EA8NAA,MAAAA,CAAOvL,SAAPuL,CAAiB4B,MAAjB5B,GAA0B,UAAsB7F,CAAtB,EAAsBA;AAC5C,SAAO5F,KAAKoM,KAALpM,CAAW8F,OAAAA,CAAKoB,KAALpB,CAAW1C,aAAtBpD,EAAqC,CAArCA,EAAwC4F,CAAxC5F,CAAP;AAA+C4F,CA/NnD6F;AAkOA,IAAI6B,UAAAA,GAAaxH,OAAAA,CAAKzI,KAALyI,CAAW5F,SAAX4F,CAAqByH,GAArBzH,GACX,UAAwB7E,CAAxB,EAA6BC,CAA7B,EAAkCC,CAAlC,EAAkCA;AAChCD,EAAAA,CAAAA,CAAIqM,GAAJrM,CAAQD,CAARC,EAAaC,CAAbD;AAAaC,CAFJ2E,GAKX,UAAwB7E,CAAxB,EAA6BC,CAA7B,EAAkCC,CAAlC,EAAkCA;AAChC,OAAK,IAAIzC,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAIuC,CAAAA,CAAI1D,MAAxB,EAAwBA,EAAUmB,CAAlC;AACIwC,IAAAA,CAAAA,CAAIC,CAAAA,GAAMzC,CAAVwC,CAAAA,GAAeD,CAAAA,CAAIvC,CAAJuC,CAAfC;AADJ;AACuBxC,CAP/B;AAeA+M,MAAAA,CAAOvL,SAAPuL,CAAiBL,KAAjBK,GAAyB,UAAqB7F,CAArB,EAAqBA;AAC1C,MAAInB,CAAAA,GAAMmB,CAAAA,CAAMrI,MAANqI,KAAiB,CAA3B;AACA,MAAA,CAAKnB,CAAL,EACI,OAAOzE,KAAKoM,KAALpM,CAAWqM,SAAXrM,EAAsB,CAAtBA,EAAyB,CAAzBA,CAAP;;AACJ,MAAI8F,OAAAA,CAAKC,QAALD,CAAcF,CAAdE,CAAJ,EAA0B;AACtB,QAAI5E,CAAAA,GAAMuK,MAAAA,CAAO1G,KAAP0G,CAAahH,CAAAA,GAAMzG,MAAAA,CAAOT,MAAPS,CAAc4H,CAAd5H,CAAnByN,CAAV;AACAzN,IAAAA,MAAAA,CAAOyB,MAAPzB,CAAc4H,CAAd5H,EAAqBkD,CAArBlD,EAA0B,CAA1BA,GACA4H,CAAAA,GAAQ1E,CADRlD;AAGJ;;AAAA,SAAOgC,KAAKwM,MAALxM,CAAYyE,CAAZzE,EAAiBoM,KAAjBpM,CAAuBsN,UAAvBtN,EAAmCyE,CAAnCzE,EAAwC4F,CAAxC5F,CAAP;AAA+C4F,CATnD6F,EAiBAA,MAAAA,CAAOvL,SAAPuL,CAAiBvN,MAAjBuN,GAA0B,UAAsB7F,CAAtB,EAAsBA;AAC5C,MAAInB,CAAAA,GAAMD,IAAAA,CAAKjH,MAALiH,CAAYoB,CAAZpB,CAAV;AACA,SAAOC,CAAAA,GACDzE,KAAKwM,MAALxM,CAAYyE,CAAZzE,EAAiBoM,KAAjBpM,CAAuBwE,IAAAA,CAAKG,KAA5B3E,EAAmCyE,CAAnCzE,EAAwC4F,CAAxC5F,CADCyE,GAEDzE,KAAKoM,KAALpM,CAAWqM,SAAXrM,EAAsB,CAAtBA,EAAyB,CAAzBA,CAFN;AAE+B,CArBnCyL,EA6BAA,MAAAA,CAAOvL,SAAPuL,CAAiB+B,IAAjB/B,GAAwB,YAAA;AAIpB,SAHAzL,KAAKkM,MAALlM,GAAc,IAAI8L,KAAJ,CAAU9L,IAAV,CAAdA,EACAA,KAAKgM,IAALhM,GAAYA,KAAKiM,IAALjM,GAAY,IAAI2L,EAAJ,CAAOE,IAAP,EAAa,CAAb,EAAgB,CAAhB,CADxB7L,EAEAA,KAAKyE,GAALzE,GAAW,CAFXA,EAGOA,IAAP;AAAOA,CAjCXyL,EAwCAA,MAAAA,CAAOvL,SAAPuL,CAAiBgC,KAAjBhC,GAAyB,YAAA;AAUrB,SATIzL,KAAKkM,MAALlM,IACAA,KAAKgM,IAALhM,GAAcA,KAAKkM,MAALlM,CAAYgM,IAA1BhM,EACAA,KAAKiM,IAALjM,GAAcA,KAAKkM,MAALlM,CAAYiM,IAD1BjM,EAEAA,KAAKyE,GAALzE,GAAcA,KAAKkM,MAALlM,CAAYyE,GAF1BzE,EAGAA,KAAKkM,MAALlM,GAAcA,KAAKkM,MAALlM,CAAY4L,IAJ1B5L,KAMAA,KAAKgM,IAALhM,GAAYA,KAAKiM,IAALjM,GAAY,IAAI2L,EAAJ,CAAOE,IAAP,EAAa,CAAb,EAAgB,CAAhB,CAAxB7L,EACAA,KAAKyE,GAALzE,GAAY,CAPZA,GASGA,IAAP;AAAOA,CAlDXyL,EAyDAA,MAAAA,CAAOvL,SAAPuL,CAAiBiC,MAAjBjC,GAA0B,YAAA;AACtB,MAAIO,CAAAA,GAAOhM,KAAKgM,IAAhB;AAAA,MACIC,CAAAA,GAAOjM,KAAKiM,IADhB;AAAA,MAEIxH,CAAAA,GAAOzE,KAAKyE,GAFhB;AASA,SANAzE,KAAKyN,KAALzN,GAAawM,MAAbxM,CAAoByE,CAApBzE,GACIyE,CAAAA,KACAzE,KAAKiM,IAALjM,CAAU4L,IAAV5L,GAAiBgM,CAAAA,CAAKJ,IAAtB5L,EACAA,KAAKiM,IAALjM,GAAYiM,CADZjM,EAEAA,KAAKyE,GAALzE,IAAYyE,CAHZA,CADJzE,EAMOA,IAAP;AAAOA,CAnEXyL,EA0EAA,MAAAA,CAAOvL,SAAPuL,CAAiBkC,MAAjBlC,GAA0B,YAAA;AAItB,OAHA,IAAIO,CAAAA,GAAOhM,KAAKgM,IAALhM,CAAU4L,IAArB,EACI1K,CAAAA,GAAOlB,KAAK0K,WAAL1K,CAAiB+E,KAAjB/E,CAAuBA,KAAKyE,GAA5BzE,CADX,EAEImB,CAAAA,GAAO,CACX,EAAO6K,CAAP;AACIA,IAAAA,CAAAA,CAAK9O,EAAL8O,CAAQA,CAAAA,CAAK/K,GAAb+K,EAAkB9K,CAAlB8K,EAAuB7K,CAAvB6K,GACA7K,CAAAA,IAAO6K,CAAAA,CAAKvH,GADZuH,EAEAA,CAAAA,GAAOA,CAAAA,CAAKJ,IAFZI;AADJ;;AAMA,SAAO9K,CAAP;AAAOA,CApFXuK,EAuFAA,MAAAA,CAAOH,UAAPG,GAAoB,UAASmC,CAAT,EAASA;AACzBlC,EAAAA,YAAAA,GAAekC,CAAflC;AAAekC,CAxFnBnC;AChXA,IAAA,aAAA,GAAiBC,cAAjB;AAAiBA,CAIhBA,cAAAA,CAAaxL,SAAbwL,GAAyBrH,MAAAA,CAAOoG,MAAPpG,CAAcoH,MAAAA,CAAOvL,SAArBmE,CAJTqH,EAI0ChB,WAJ1CgB,GAIwDA,cAJxDA;AAQjB,IAAIhD,MAAAA,GAAS5C,OAAAA,CAAK4C,MAAlB;;AAQA,SAASgD,cAAT,GAASA;AACLD,EAAAA,MAAAA,CAAOrG,IAAPqG,CAAYzL,IAAZyL;AAQJC;;AAAAA,cAAAA,CAAa3G,KAAb2G,GAAqB,UAAsB1G,CAAtB,EAAsBA;AACvC,SAAA,CAAQ0G,cAAAA,CAAa3G,KAAb2G,GAAqB5F,OAAAA,CAAK+C,mBAAlC,EAAuD7D,CAAvD,CAAA;AAAuDA,CAD3D0G;;AAIA,IAAImC,gBAAAA,GAAmBnF,MAAAA,IAAUA,MAAAA,CAAOxI,SAAPwI,YAA4B5H,UAAtC4H,IAAkF,UAA9BA,MAAAA,CAAOxI,SAAPwI,CAAiB6E,GAAjB7E,CAAqBuB,IAAzEvB,GACjB,UAA8BzH,CAA9B,EAAmCC,CAAnC,EAAwCC,CAAxC,EAAwCA;AACtCD,EAAAA,CAAAA,CAAIqM,GAAJrM,CAAQD,CAARC,EAAaC,CAAbD;AAAaC,CAFEuH,GAMjB,UAA+BzH,CAA/B,EAAoCC,CAApC,EAAyCC,CAAzC,EAAyCA;AACvC,MAAIF,CAAAA,CAAI6M,IAAR,EACI7M,CAAAA,CAAI6M,IAAJ7M,CAASC,CAATD,EAAcE,CAAdF,EAAmB,CAAnBA,EAAsBA,CAAAA,CAAI1D,MAA1B0D,EADJ,KAEK,KAAK,IAAIvC,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAIuC,CAAAA,CAAI1D,MAAxB;AACD2D,IAAAA,CAAAA,CAAIC,CAAAA,EAAJD,CAAAA,GAAaD,CAAAA,CAAIvC,CAAAA,EAAJuC,CAAbC;AADC;AACgBxC,CAV7B;;AA0BA,SAASqP,iBAAT,CAA2B9M,CAA3B,EAAgCC,CAAhC,EAAqCC,CAArC,EAAqCA;AAC7BF,EAAAA,CAAAA,CAAI1D,MAAJ0D,GAAa,EAAbA,GACA6E,OAAAA,CAAKtB,IAALsB,CAAUnB,KAAVmB,CAAgB7E,CAAhB6E,EAAqB5E,CAArB4E,EAA0B3E,CAA1B2E,CADA7E,GAGAC,CAAAA,CAAIyH,SAAJzH,CAAcD,CAAdC,EAAmBC,CAAnBD,CAHAD;AAXRyK;;AAAAA,cAAAA,CAAaxL,SAAbwL,CAAuBN,KAAvBM,GAA+B,UAA4B9F,CAA5B,EAA4BA;AACnDE,EAAAA,OAAAA,CAAKC,QAALD,CAAcF,CAAdE,MACAF,CAAAA,GAAQE,OAAAA,CAAK8C,YAAL9C,CAAkBF,CAAlBE,EAAyB,QAAzBA,CADRA;AAEJ,MAAIrB,CAAAA,GAAMmB,CAAAA,CAAMrI,MAANqI,KAAiB,CAA3B;AAIA,SAHA5F,KAAKwM,MAALxM,CAAYyE,CAAZzE,GACIyE,CAAAA,IACAzE,KAAKoM,KAALpM,CAAW6N,gBAAX7N,EAA6ByE,CAA7BzE,EAAkC4F,CAAlC5F,CAFJA,EAGOA,IAAP;AAAOA,CAPX0L,EAoBAA,cAAAA,CAAaxL,SAAbwL,CAAuBxN,MAAvBwN,GAAgC,UAA6B9F,CAA7B,EAA6BA;AACzD,MAAInB,CAAAA,GAAMiE,MAAAA,CAAOsF,UAAPtF,CAAkB9C,CAAlB8C,CAAV;AAIA,SAHA1I,KAAKwM,MAALxM,CAAYyE,CAAZzE,GACIyE,CAAAA,IACAzE,KAAKoM,KAALpM,CAAW+N,iBAAX/N,EAA8ByE,CAA9BzE,EAAmC4F,CAAnC5F,CAFJA,EAGOA,IAAP;AAAOA,CAzBX0L;AC7CA,IAAA,MAAA,GAAiBuC,MAAjB;AAAA,IAIIC,YAJJ;AAAA,IAMI7I,UAAAA,GAAYS,OAAAA,CAAKT,QANrB;AAAA,IAOIb,MAAAA,GAAYsB,OAAAA,CAAKtB,IAPrB;;AAUA,SAAS2J,eAAT,CAAyBC,CAAzB,EAAiCC,CAAjC,EAAiCA;AAC7B,SAAOC,UAAAA,CAAW,yBAAyBF,CAAAA,CAAOjN,GAAhC,GAAsC,KAAtC,IAA+CkN,CAAAA,IAAe,CAA9D,IAAmE,KAAnE,GAA2ED,CAAAA,CAAO3J,GAA7F6J,CAAP;AASJ;;AAAA,SAASL,MAAT,CAAgBrP,CAAhB,EAAgBA;AAMZoB,OAAKkB,GAALlB,GAAWpB,CAAXoB,EAMAA,KAAKmB,GAALnB,GAAW,CANXA,EAYAA,KAAKyE,GAALzE,GAAWpB,CAAAA,CAAOrB,MAZlByC;AAeJ;;AAAA,IAAIuO,YAAAA,GAAqC,eAAA,OAAfzN,UAAe,GACnC,UAA4BlC,CAA5B,EAA4BA;AAC1B,MAAIA,CAAAA,YAAkBkC,UAAlBlC,IAAgCvB,KAAAA,CAAMoL,OAANpL,CAAcuB,CAAdvB,CAApC,EACI,OAAO,IAAI4Q,MAAJ,CAAWrP,CAAX,CAAP;AACJ,QAAMiB,KAAAA,CAAM,gBAANA,CAAN;AAAY,CAJqB,GAOnC,UAAsBjB,CAAtB,EAAsBA;AACpB,MAAIvB,KAAAA,CAAMoL,OAANpL,CAAcuB,CAAdvB,CAAJ,EACI,OAAO,IAAI4Q,MAAJ,CAAWrP,CAAX,CAAP;AACJ,QAAMiB,KAAAA,CAAM,gBAANA,CAAN;AAAY,CAVpB;;AA4EA,SAAS6O,cAAT,GAASA;AAEL,MAAIpF,CAAAA,GAAO,IAAIjE,UAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAX;AAAA,MACI3G,CAAAA,GAAI,CADR;;AAEA,MAAA,EAAIsB,KAAKyE,GAALzE,GAAWA,KAAKmB,GAAhBnB,GAAsB,CAA1B,CAAA,EAaO;AACH,WAAOtB,CAAAA,GAAI,CAAX,EAAW,EAAKA,CAAhB,EAAmB;AAEf,UAAIsB,KAAKmB,GAALnB,IAAYA,KAAKyE,GAArB,EACI,MAAM0J,eAAAA,CAAgBnO,IAAhBmO,CAAN;AAGJ,UADA7E,CAAAA,CAAKxF,EAALwF,GAAKxF,CAAMwF,CAAAA,CAAKxF,EAALwF,GAAKxF,CAA2B,MAArB9D,KAAKkB,GAALlB,CAASA,KAAKmB,GAAdnB,CAAN8D,KAAuC,IAAJpF,CAA9CoF,MAAyD,CAA9DwF,EACItJ,KAAKkB,GAALlB,CAASA,KAAKmB,GAALnB,EAATA,IAAuB,GAA3B,EACI,OAAOsJ,CAAP;AAIR;;AAAA,WADAA,CAAAA,CAAKxF,EAALwF,GAAKxF,CAAMwF,CAAAA,CAAKxF,EAALwF,GAAKxF,CAA6B,MAAvB9D,KAAKkB,GAALlB,CAASA,KAAKmB,GAALnB,EAATA,CAAN8D,KAAyC,IAAJpF,CAAhDoF,MAA2D,CAAhEwF,EACOA,CAAP;AAxBA;;AAAA,SAAO5K,CAAAA,GAAI,CAAX,EAAW,EAAKA,CAAhB;AAGI,QADA4K,CAAAA,CAAKxF,EAALwF,GAAKxF,CAAMwF,CAAAA,CAAKxF,EAALwF,GAAKxF,CAA2B,MAArB9D,KAAKkB,GAALlB,CAASA,KAAKmB,GAAdnB,CAAN8D,KAAuC,IAAJpF,CAA9CoF,MAAyD,CAA9DwF,EACItJ,KAAKkB,GAALlB,CAASA,KAAKmB,GAALnB,EAATA,IAAuB,GAA3B,EACI,OAAOsJ,CAAP;AAJR;;AASA,MAFAA,CAAAA,CAAKxF,EAALwF,GAAKxF,CAAMwF,CAAAA,CAAKxF,EAALwF,GAAKxF,CAA2B,MAArB9D,KAAKkB,GAALlB,CAASA,KAAKmB,GAAdnB,CAAN8D,KAAmC,EAA9CA,MAAsD,CAA3DwF,EACAA,CAAAA,CAAKvF,EAALuF,GAAKvF,CAAMuF,CAAAA,CAAKvF,EAALuF,GAAKvF,CAA2B,MAArB/D,KAAKkB,GAALlB,CAASA,KAAKmB,GAAdnB,CAAN+D,KAAoC,CAA/CA,MAAsD,CAD3DuF,EAEItJ,KAAKkB,GAALlB,CAASA,KAAKmB,GAALnB,EAATA,IAAuB,GAA3B,EACI,OAAOsJ,CAAP;;AAgBR,MAfI5K,CAAAA,GAAI,CAAJA,EAeAsB,KAAKyE,GAALzE,GAAWA,KAAKmB,GAAhBnB,GAAsB,CAA1B,EAA0B;AACtB,WAAOtB,CAAAA,GAAI,CAAX,EAAW,EAAKA,CAAhB;AAGI,UADA4K,CAAAA,CAAKvF,EAALuF,GAAKvF,CAAMuF,CAAAA,CAAKvF,EAALuF,GAAKvF,CAA2B,MAArB/D,KAAKkB,GAALlB,CAASA,KAAKmB,GAAdnB,CAAN+D,KAAuC,IAAJrF,CAAI,GAAI,CAAtDqF,MAA6D,CAAlEuF,EACItJ,KAAKkB,GAALlB,CAASA,KAAKmB,GAALnB,EAATA,IAAuB,GAA3B,EACI,OAAOsJ,CAAP;AAJR;AAIeA,GALnB,MAQI,OAAO5K,CAAAA,GAAI,CAAX,EAAW,EAAKA,CAAhB,EAAmB;AAEf,QAAIsB,KAAKmB,GAALnB,IAAYA,KAAKyE,GAArB,EACI,MAAM0J,eAAAA,CAAgBnO,IAAhBmO,CAAN;AAGJ,QADA7E,CAAAA,CAAKvF,EAALuF,GAAKvF,CAAMuF,CAAAA,CAAKvF,EAALuF,GAAKvF,CAA2B,MAArB/D,KAAKkB,GAALlB,CAASA,KAAKmB,GAAdnB,CAAN+D,KAAuC,IAAJrF,CAAI,GAAI,CAAtDqF,MAA6D,CAAlEuF,EACItJ,KAAKkB,GAALlB,CAASA,KAAKmB,GAALnB,EAATA,IAAuB,GAA3B,EACI,OAAOsJ,CAAP;AAIZ;;AAAA,QAAMzJ,KAAAA,CAAM,yBAANA,CAAN;AAkCJ;;AAAA,SAAS8O,eAAT,CAAyBzN,CAAzB,EAA8BpC,CAA9B,EAA8BA;AAC1B,SAAA,CAAQoC,CAAAA,CAAIpC,CAAAA,GAAM,CAAVoC,CAAAA,GACAA,CAAAA,CAAIpC,CAAAA,GAAM,CAAVoC,CAAAA,IAAgB,CADhBA,GAEAA,CAAAA,CAAIpC,CAAAA,GAAM,CAAVoC,CAAAA,IAAgB,EAFhBA,GAGAA,CAAAA,CAAIpC,CAAAA,GAAM,CAAVoC,CAAAA,IAAgB,EAHxB,MAGgC,CAHhC;AAkCJ;;AAAA,SAAS0N,WAAT,GAASA;AAGL,MAAI5O,KAAKmB,GAALnB,GAAW,CAAXA,GAAeA,KAAKyE,GAAxB,EACI,MAAM0J,eAAAA,CAAgBnO,IAAhBmO,EAAsB,CAAtBA,CAAN;AAEJ,SAAO,IAAI9I,UAAJ,CAAasJ,eAAAA,CAAgB3O,KAAKkB,GAArByN,EAA0B3O,KAAKmB,GAALnB,IAAY,CAAtC2O,CAAb,EAAuDA,eAAAA,CAAgB3O,KAAKkB,GAArByN,EAA0B3O,KAAKmB,GAALnB,IAAY,CAAtC2O,CAAvD,CAAP;AArLJV;;AAAAA,MAAAA,CAAOxD,MAAPwD,GAAgBnI,OAAAA,CAAK4C,MAAL5C,GACV,UAA6BlH,CAA7B,EAA6BA;AAC3B,SAAA,CAAQqP,MAAAA,CAAOxD,MAAPwD,GAAgB,UAAuBrP,CAAvB,EAAuBA;AAC3C,WAAOkH,OAAAA,CAAK4C,MAAL5C,CAAY0I,QAAZ1I,CAAqBlH,CAArBkH,IACD,IAAIoI,YAAJ,CAAiBtP,CAAjB,CADCkH,GAGDyI,YAAAA,CAAa3P,CAAb2P,CAHN;AAGmB3P,GAJvB,EAKGA,CALH,CAAA;AAKGA,CAPKkH,GAUVyI,YAVNN,EAYAA,MAAAA,CAAO/N,SAAP+N,CAAiBQ,MAAjBR,GAA0BnI,OAAAA,CAAKzI,KAALyI,CAAW5F,SAAX4F,CAAqBqG,QAArBrG,IAA4DA,OAAAA,CAAKzI,KAALyI,CAAW5F,SAAX4F,CAAqBvG,KAZ3G0O,EAmBAA,MAAAA,CAAO/N,SAAP+N,CAAiBzB,MAAjByB,GAA0B,YAAA;AACtB,MAAIrI,CAAAA,GAAQ,UAAZ;AACA,SAAO,YAAA;AACuD,QAA1DA,CAAAA,GAAAA,CAAuC,MAArB5F,KAAKkB,GAALlB,CAASA,KAAKmB,GAAdnB,CAAlB4F,MAAuD,CAAvDA,EAA8D5F,KAAKkB,GAALlB,CAASA,KAAKmB,GAALnB,EAATA,IAAuB,GAA3B,EAAgC,OAAO4F,CAAP;AAChC,QAA1DA,CAAAA,GAAAA,CAASA,CAAAA,GAAAA,CAA8B,MAArB5F,KAAKkB,GAALlB,CAASA,KAAKmB,GAAdnB,CAAT4F,KAAuC,CAAhDA,MAAuD,CAAvDA,EAA8D5F,KAAKkB,GAALlB,CAASA,KAAKmB,GAALnB,EAATA,IAAuB,GAA3B,EAAgC,OAAO4F,CAAP;AAChC,QAA1DA,CAAAA,GAAAA,CAASA,CAAAA,GAAAA,CAA8B,MAArB5F,KAAKkB,GAALlB,CAASA,KAAKmB,GAAdnB,CAAT4F,KAAsC,EAA/CA,MAAuD,CAAvDA,EAA8D5F,KAAKkB,GAALlB,CAASA,KAAKmB,GAALnB,EAATA,IAAuB,GAA3B,EAAgC,OAAO4F,CAAP;AAChC,QAA1DA,CAAAA,GAAAA,CAASA,CAAAA,GAAAA,CAA8B,MAArB5F,KAAKkB,GAALlB,CAASA,KAAKmB,GAAdnB,CAAT4F,KAAsC,EAA/CA,MAAuD,CAAvDA,EAA8D5F,KAAKkB,GAALlB,CAASA,KAAKmB,GAALnB,EAATA,IAAuB,GAA3B,EAAgC,OAAO4F,CAAP;AAChC,QAA1DA,CAAAA,GAAAA,CAASA,CAAAA,GAAAA,CAA+B,KAAtB5F,KAAKkB,GAALlB,CAASA,KAAKmB,GAAdnB,CAAT4F,KAAsC,EAA/CA,MAAuD,CAAvDA,EAA8D5F,KAAKkB,GAALlB,CAASA,KAAKmB,GAALnB,EAATA,IAAuB,GAA3B,EAAgC,OAAO4F,CAAP;AAG1F,QAAA,CAAK5F,KAAKmB,GAALnB,IAAY,CAAjB,IAAsBA,KAAKyE,GAA3B,EAEI,MADAzE,KAAKmB,GAALnB,GAAWA,KAAKyE,GAAhBzE,EACMmO,eAAAA,CAAgBnO,IAAhBmO,EAAsB,EAAtBA,CAAN;AAEJ,WAAOvI,CAAP;AAAOA,GAZX;AAFsB,CAAA,EAnB1BqI,EAyCAA,MAAAA,CAAO/N,SAAP+N,CAAiBxB,KAAjBwB,GAAyB,YAAA;AACrB,SAAuB,IAAhBjO,KAAKwM,MAALxM,EAAP;AAAYwM,CA1ChByB,EAiDAA,MAAAA,CAAO/N,SAAP+N,CAAiBtB,MAAjBsB,GAA0B,YAAA;AACtB,MAAIrI,CAAAA,GAAQ5F,KAAKwM,MAALxM,EAAZ;AACA,SAAO4F,CAAAA,KAAU,CAAVA,GAAU,EAAc,IAARA,CAAN,CAAVA,GAA6B,CAApC;AAAoC,CAnDxCqI,EAwIAA,MAAAA,CAAO/N,SAAP+N,CAAiBlB,IAAjBkB,GAAwB,YAAA;AACpB,SAAyB,MAAlBjO,KAAKwM,MAALxM,EAAP;AAAYwM,CAzIhByB,EAuJAA,MAAAA,CAAO/N,SAAP+N,CAAiBhB,OAAjBgB,GAA2B,YAAA;AAGvB,MAAIjO,KAAKmB,GAALnB,GAAW,CAAXA,GAAeA,KAAKyE,GAAxB,EACI,MAAM0J,eAAAA,CAAgBnO,IAAhBmO,EAAsB,CAAtBA,CAAN;AAEJ,SAAOQ,eAAAA,CAAgB3O,KAAKkB,GAArByN,EAA0B3O,KAAKmB,GAALnB,IAAY,CAAtC2O,CAAP;AAA6C,CA7JjDV,EAoKAA,MAAAA,CAAO/N,SAAP+N,CAAiBf,QAAjBe,GAA4B,YAAA;AAGxB,MAAIjO,KAAKmB,GAALnB,GAAW,CAAXA,GAAeA,KAAKyE,GAAxB,EACI,MAAM0J,eAAAA,CAAgBnO,IAAhBmO,EAAsB,CAAtBA,CAAN;AAEJ,SAAkD,IAA3CQ,eAAAA,CAAgB3O,KAAKkB,GAArByN,EAA0B3O,KAAKmB,GAALnB,IAAY,CAAtC2O,CAAP;AAA6C,CA1KjDV,EA6MAA,MAAAA,CAAO/N,SAAP+N,CAAiB/G,KAAjB+G,GAAyB,YAAA;AAGrB,MAAIjO,KAAKmB,GAALnB,GAAW,CAAXA,GAAeA,KAAKyE,GAAxB,EACI,MAAM0J,eAAAA,CAAgBnO,IAAhBmO,EAAsB,CAAtBA,CAAN;AAEJ,MAAIvI,CAAAA,GAAQE,OAAAA,CAAKoB,KAALpB,CAAWrE,WAAXqE,CAAuB9F,KAAKkB,GAA5B4E,EAAiC9F,KAAKmB,GAAtC2E,CAAZ;AAEA,SADA9F,KAAKmB,GAALnB,IAAY,CAAZA,EACO4F,CAAP;AAAOA,CArNXqI,EA6NAA,MAAAA,CAAO/N,SAAP+N,CAAiBZ,MAAjBY,GAA0B,YAAA;AAGtB,MAAIjO,KAAKmB,GAALnB,GAAW,CAAXA,GAAeA,KAAKyE,GAAxB,EACI,MAAM0J,eAAAA,CAAgBnO,IAAhBmO,EAAsB,CAAtBA,CAAN;AAEJ,MAAIvI,CAAAA,GAAQE,OAAAA,CAAKoB,KAALpB,CAAWtC,YAAXsC,CAAwB9F,KAAKkB,GAA7B4E,EAAkC9F,KAAKmB,GAAvC2E,CAAZ;AAEA,SADA9F,KAAKmB,GAALnB,IAAY,CAAZA,EACO4F,CAAP;AAAOA,CArOXqI,EA4OAA,MAAAA,CAAO/N,SAAP+N,CAAiB7C,KAAjB6C,GAAyB,YAAA;AACrB,MAAI1Q,CAAAA,GAASyC,KAAKwM,MAALxM,EAAb;AAAA,MACInB,CAAAA,GAASmB,KAAKmB,GADlB;AAAA,MAEIrC,CAAAA,GAASkB,KAAKmB,GAALnB,GAAWzC,CAFxB;AAKA,MAAIuB,CAAAA,GAAMkB,KAAKyE,GAAf,EACI,MAAM0J,eAAAA,CAAgBnO,IAAhBmO,EAAsB5Q,CAAtB4Q,CAAN;AAGJ,SADAnO,KAAKmB,GAALnB,IAAYzC,CAAZyC,EACI3C,KAAAA,CAAMoL,OAANpL,CAAc2C,KAAKkB,GAAnB7D,IACO2C,KAAKkB,GAALlB,CAAST,KAATS,CAAenB,CAAfmB,EAAsBlB,CAAtBkB,CADP3C,GAEGwB,CAAAA,KAAUC,CAAVD,GACD,IAAImB,KAAKkB,GAALlB,CAAS0K,WAAb,CAAyB,CAAzB,CADC7L,GAEDmB,KAAKyO,MAALzO,CAAYoF,IAAZpF,CAAiBA,KAAKkB,GAAtBlB,EAA2BnB,CAA3BmB,EAAkClB,CAAlCkB,CAJN;AAIwClB,CA1P5CmP,EAiQAA,MAAAA,CAAO/N,SAAP+N,CAAiB/P,MAAjB+P,GAA0B,YAAA;AACtB,MAAI7C,CAAAA,GAAQpL,KAAKoL,KAALpL,EAAZ;AACA,SAAOwE,MAAAA,CAAKE,IAALF,CAAU4G,CAAV5G,EAAiB,CAAjBA,EAAoB4G,CAAAA,CAAM7N,MAA1BiH,CAAP;AAAiCjH,CAnQrC0Q,EA2QAA,MAAAA,CAAO/N,SAAP+N,CAAiBY,IAAjBZ,GAAwB,UAAc1Q,CAAd,EAAcA;AAClC,MAAsB,YAAA,OAAXA,CAAX,EAAgC;AAE5B,QAAIyC,KAAKmB,GAALnB,GAAWzC,CAAXyC,GAAoBA,KAAKyE,GAA7B,EACI,MAAM0J,eAAAA,CAAgBnO,IAAhBmO,EAAsB5Q,CAAtB4Q,CAAN;AACJnO,SAAKmB,GAALnB,IAAYzC,CAAZyC;AAAYzC,GAJhB,MAMI,GAAA;AAEI,QAAIyC,KAAKmB,GAALnB,IAAYA,KAAKyE,GAArB,EACI,MAAM0J,eAAAA,CAAgBnO,IAAhBmO,CAAN;AAAsBnO,GAH9B,QAIgC,MAAvBA,KAAKkB,GAALlB,CAASA,KAAKmB,GAALnB,EAATA,CAJT;;AAMJ,SAAOA,IAAP;AAAOA,CAxRXiO,EAgSAA,MAAAA,CAAO/N,SAAP+N,CAAiBa,QAAjBb,GAA4B,UAASc,CAAT,EAASA;AACjC,UAAQA,CAAR;AACI,SAAK,CAAL;AACI/O,WAAK6O,IAAL7O;AACA;;AACJ,SAAK,CAAL;AACIA,WAAK6O,IAAL7O,CAAU,CAAVA;AACA;;AACJ,SAAK,CAAL;AACIA,WAAK6O,IAAL7O,CAAUA,KAAKwM,MAALxM,EAAVA;AACA;;AACJ,SAAK,CAAL;AACI,eAAG;AACC,YAAuC,MAAlC+O,CAAAA,GAA2B,IAAhB/O,KAAKwM,MAALxM,EAAuB,CAAvC,EACI;AACJA,aAAK8O,QAAL9O,CAAc+O,CAAd/O;AAEJ;;AAAA;;AACJ,SAAK,CAAL;AACIA,WAAK6O,IAAL7O,CAAU,CAAVA;AACA;;AAGJ;AACI,YAAMH,KAAAA,CAAM,uBAAuBkP,CAAvB,GAAkC,aAAlC,GAAkD/O,KAAKmB,GAA7DtB,CAAN;AAvBR;;AAyBA,SAAOG,IAAP;AAAOA,CA1TXiO,EA6TAA,MAAAA,CAAO3C,UAAP2C,GAAoB,UAASe,CAAT,EAASA;AACzBd,EAAAA,YAAAA,GAAec,CAAfd;AAEA,MAAIhR,CAAAA,GAAK4I,OAAAA,CAAKE,IAALF,GAAY,QAAZA,GAAkD,UAA3D;AACAA,EAAAA,OAAAA,CAAK0D,KAAL1D,CAAWmI,MAAAA,CAAO/N,SAAlB4F,EAAkB5F;AAEd2M,IAAAA,KAAAA,EAAO,iBAAA;AACH,aAAO6B,cAAAA,CAAetJ,IAAfsJ,CAAoB1O,IAApB0O,EAA0BxR,CAA1BwR,EAA0BxR,CAAI,CAA9BwR,CAAP;AAAqC,KAH3BxO;AAMd0M,IAAAA,MAAAA,EAAQ,kBAAA;AACJ,aAAO8B,cAAAA,CAAetJ,IAAfsJ,CAAoB1O,IAApB0O,EAA0BxR,CAA1BwR,EAA0BxR,CAAI,CAA9BwR,CAAP;AAAqC,KAP3BxO;AAUd4M,IAAAA,MAAAA,EAAQ,kBAAA;AACJ,aAAO4B,cAAAA,CAAetJ,IAAfsJ,CAAoB1O,IAApB0O,EAA0BjJ,QAA1BiJ,GAAqCxR,CAArCwR,EAAqCxR,CAAI,CAAzCwR,CAAP;AAAgD,KAXtCxO;AAcdiN,IAAAA,OAAAA,EAAS,mBAAA;AACL,aAAOyB,WAAAA,CAAYxJ,IAAZwJ,CAAiB5O,IAAjB4O,EAAuB1R,CAAvB0R,EAAuB1R,CAAI,CAA3B0R,CAAP;AAAkC,KAfxB1O;AAkBdkN,IAAAA,QAAAA,EAAU,oBAAA;AACN,aAAOwB,WAAAA,CAAYxJ,IAAZwJ,CAAiB5O,IAAjB4O,EAAuB1R,CAAvB0R,EAAuB1R,CAAI,CAA3B0R,CAAP;AAAkC;AAnBxB1O,GAAlB4F;AAmB0C,CApV9CmI;AC7DA,IAAA,aAAA,GAAiBC,cAAjB;;AAeA,SAASA,cAAT,CAAsBtP,CAAtB,EAAsBA;AAClBqP,EAAAA,MAAAA,CAAO7I,IAAP6I,CAAYjO,IAAZiO,EAAkBrP,CAAlBqP;AAAkBrP;;AAAAA,CAZrBsP,cAAAA,CAAahO,SAAbgO,GAAyB7J,MAAAA,CAAOoG,MAAPpG,CAAc4J,MAAAA,CAAO/N,SAArBmE,CAYJzF,EAZqC8L,WAYrC9L,GAZmDsP,cAYnDtP,EAUlBkH,OAAAA,CAAK4C,MAAL5C,KACAoI,cAAAA,CAAahO,SAAbgO,CAAuBO,MAAvBP,GAAgCpI,OAAAA,CAAK4C,MAAL5C,CAAY5F,SAAZ4F,CAAsBvG,KADtDuG,CAVkBlH,EAgBtBsP,cAAAA,CAAahO,SAAbgO,CAAuBhQ,MAAvBgQ,GAAgC,YAAA;AAC5B,MAAIzJ,CAAAA,GAAMzE,KAAKwM,MAALxM,EAAV;AACA,SAAOA,KAAKkB,GAALlB,CAASiP,SAATjP,CAAmBA,KAAKmB,GAAxBnB,EAA6BA,KAAKmB,GAALnB,GAAW1B,IAAAA,CAAK4Q,GAAL5Q,CAAS0B,KAAKmB,GAALnB,GAAWyE,CAApBnG,EAAyB0B,KAAKyE,GAA9BnG,CAAxC0B,CAAP;AAA6EyE,CAlB3D7F;AChBtB,IAAA,OAAA,GAAiBuQ,OAAjB;;AAwCA,SAASA,OAAT,CAAiBC,CAAjB,EAA0BC,CAA1B,EAA4CC,CAA5C,EAA4CA;AAExC,MAAuB,cAAA,OAAZF,CAAX,EACI,MAAMG,SAAAA,CAAU,4BAAVA,CAAN;AAEJzJ,EAAAA,OAAAA,CAAK/F,YAAL+F,CAAkBV,IAAlBU,CAAuB9F,IAAvB8F,GAMA9F,KAAKoP,OAALpP,GAAeoP,CANftJ,EAYA9F,KAAKqP,gBAALrP,GAAwBuG,OAAAA,CAAQ8I,CAAR9I,CAZxBT,EAkBA9F,KAAKsP,iBAALtP,GAAyBuG,OAAAA,CAAQ+I,CAAR/I,CAlBzBT;AAkBiCwJ;;AAAAA,CA1DpCH,OAAAA,CAAQjP,SAARiP,GAAoB9K,MAAAA,CAAOoG,MAAPpG,CAAcyB,OAAAA,CAAK/F,YAAL+F,CAAkB5F,SAAhCmE,CA0DgBiL,EA1D4B5E,WA0D5B4E,GA1D0CH,OA0D1CG,EAcrCH,OAAAA,CAAQjP,SAARiP,CAAkBK,OAAlBL,GAA4B,SAASK,CAAT,CAAiBC,CAAjB,EAAyBC,CAAzB,EAAsCC,CAAtC,EAAoDC,CAApD,EAA6DC,CAA7D,EAA6DA;AAErF,MAAA,CAAKD,CAAL,EACI,MAAML,SAAAA,CAAU,2BAAVA,CAAN;AAEJ,MAAIO,CAAAA,GAAO9P,IAAX;AACA,MAAA,CAAK6P,CAAL,EACI,OAAO/J,OAAAA,CAAK7I,SAAL6I,CAAe0J,CAAf1J,EAAwBgK,CAAxBhK,EAA8B2J,CAA9B3J,EAAsC4J,CAAtC5J,EAAmD6J,CAAnD7J,EAAiE8J,CAAjE9J,CAAP;AAEJ,MAAKgK,CAAAA,CAAKV,OAAV,EAKA,IAAA;AACI,WAAOU,CAAAA,CAAKV,OAALU,CACHL,CADGK,EAEHJ,CAAAA,CAAYI,CAAAA,CAAKT,gBAALS,GAAwB,iBAAxBA,GAA4C,QAAxDJ,CAAAA,CAAkEE,CAAlEF,EAA2E/B,MAA3E+B,EAFGI,EAGH,UAAqBhS,CAArB,EAA0BkS,CAA1B,EAA0BA;AAEtB,UAAIlS,CAAJ,EAEI,OADAgS,CAAAA,CAAKtP,IAALsP,CAAU,OAAVA,EAAmBhS,CAAnBgS,EAAwBL,CAAxBK,GACOD,CAAAA,CAAS/R,CAAT+R,CAAP;;AAGJ,UAAiB,SAAbG,CAAJ,EAAA;AAKA,YAAA,EAAMA,CAAAA,YAAoBL,CAA1B,CAAA,EACI,IAAA;AACIK,UAAAA,CAAAA,GAAWL,CAAAA,CAAaG,CAAAA,CAAKR,iBAALQ,GAAyB,iBAAzBA,GAA6C,QAA1DH,CAAAA,CAAoEK,CAApEL,CAAXK;AACF,SAFF,CAEE,OAAOlS,CAAP,EAAOA;AAEL,iBADAgS,CAAAA,CAAKtP,IAALsP,CAAU,OAAVA,EAAmBhS,CAAnBgS,EAAwBL,CAAxBK,GACOD,CAAAA,CAAS/R,CAAT+R,CAAP;AAKR;AAAA,eADAC,CAAAA,CAAKtP,IAALsP,CAAU,MAAVA,EAAkBE,CAAlBF,EAA4BL,CAA5BK,GACOD,CAAAA,CAAS,IAATA,EAAeG,CAAfH,CAAP;AAdIC;;AAAAA,MAAAA,CAAAA,CAAKhR,GAALgR,CAAKhR,CAAqB,CAA1BgR;AAA0B,KAX/BA,CAAP;AA4BF,GA7BF,CA6BE,OAAOhS,CAAP,EAAOA;AAGL,WAFAgS,CAAAA,CAAKtP,IAALsP,CAAU,OAAVA,EAAmBhS,CAAnBgS,EAAwBL,CAAxBK,GAAwBL,KACxBM,UAAAA,CAAW,YAAA;AAAaF,MAAAA,CAAAA,CAAS/R,CAAT+R,CAAAA;AAAS/R,KAAjCiS,EAA0C,CAA1CA,CACA;AAD0C,GApC9C,MACIA,UAAAA,CAAW,YAAA;AAAaF,IAAAA,CAAAA,CAAShQ,KAAAA,CAAM,eAANA,CAATgQ,CAAAA;AAAe,GAAvCE,EAA6D,CAA7DA,CAAAA;AAA6D,CAxBhCT,EAqErCH,OAAAA,CAAQjP,SAARiP,CAAkBrQ,GAAlBqQ,GAAwB,UAAac,CAAb,EAAaA;AAOjC,SANIjQ,KAAKoP,OAALpP,KACKiQ,CAAAA,IACDjQ,KAAKoP,OAALpP,CAAa,IAAbA,EAAmB,IAAnBA,EAAyB,IAAzBA,CADCiQ,EAELjQ,KAAKoP,OAALpP,GAAe,IAFViQ,EAGLjQ,KAAKQ,IAALR,CAAU,KAAVA,EAAiBK,GAAjBL,EAJAA,GAMGA,IAAP;AAAOA,CA5E0BsP;AA4E1BtP,IAAAA,KAAAA,GAAAA,oBAAAA,CAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;ACtID/B,EAAAA,CAAAA,CA6BNkR,OA7BMlR,GA6BI8I,OA7BJ9I;AA6BI8I,CDyGH/G,CAAAA;AAAAA,ICzGG+G,KAAAA,GAAAA,EDyGH/G;AAAAA,ICzGG+G,YAAAA,GAAAA,oBAAAA,CAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;ACnCd,MACImJ,CAAAA,GAAWjS,CADf;;AA4BA,WAASqS,CAAT,GAASA;AACLJ,IAAAA,CAAAA,CAASjC,MAATiC,CAAgB5E,UAAhB4E,CAA2BA,CAAAA,CAAShC,YAApCgC,GACAA,CAAAA,CAASpK,IAAToK,CAAc5E,UAAd4E,EADAA;AApBJA;;AAAAA,EAAAA,CAAAA,CAASC,KAATD,GAAiB,SAAjBA,EAGAA,CAAAA,CAASzE,MAATyE,GAAwBnJ,MAHxBmJ,EAIAA,CAAAA,CAASxE,YAATwE,GAAwBlJ,aAJxBkJ,EAKAA,CAAAA,CAASjC,MAATiC,GAAwBjJ,MALxBiJ,EAMAA,CAAAA,CAAShC,YAATgC,GAAwB/I,aANxB+I,EASAA,CAAAA,CAASpK,IAAToK,GAAwB9I,OATxB8I,EAUAA,CAAAA,CAASE,GAATF,GAAwB7I,KAVxB6I,EAWAA,CAAAA,CAASG,KAATH,GAAwB5I,KAXxB4I,EAYAA,CAAAA,CAASI,SAATJ,GAAwBI,CAZxBJ,EAyBAA,CAAAA,CAASzE,MAATyE,CAAgB5E,UAAhB4E,CAA2BA,CAAAA,CAASxE,YAApCwE,CAzBAA,EA0BAI,CAAAA,EA1BAJ;AA0BAI,CDAcvJ,CDyGH/G;AAAAA,IEzGXsQ,SAAAA,GChCiBvJ,YHyIN/G;AAAAA,IGzIM+G,SAAAA,GAAAA,SAAAA,CAAAA,KHyIN/G;AAAAA,IGzIM+G,SAAAA,GAAAA,SAAAA,CAAAA,MHyIN/G;AAAAA,IGzIM+G,SAAAA,GAAAA,SAAAA,CAAAA,IHyIN/G;AAAAA,IIvIPuQ,OAAAA,GAAUC,SAAAA,CAAUvC,MJuIbjO;AAAAA,IIvIqByQ,KAAAA,GAAQD,SAAAA,CAAU1K,IJuIvC9F;AAAAA,IIrIP0Q,KAAAA,GAAQF,SAAAA,CAAUH,KAAVG,CAAyB,OAAzBA,KAA+BA,SAAAA,CAAUH,KAAVG,CAAyB,OAAzBA,GAAyB,EAAxDA,CJqIDxQ;;AInIX0Q,KAAAA,CAAMC,UAAND,GAAmB,YAAA;AAEf,MAuCQS,CAvCR;AAAA,MAuCyBC,CAvCzB;AAAA,MAAIT,CAAAA,GAAAA,EAAJ;AA4qDA,SA1qDAA,CAAAA,CAAWC,GAAXD,GAAiB,YAAA;AAEb,aAASC,CAAT,CAAazS,CAAb,EAAaA;AACT,UAAIA,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,gBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AA6BR;;AAAA,WAxBAyS,CAAAA,CAAI1Q,SAAJ0Q,CAAcE,OAAdF,GAAwB,EAAxBA,EACAA,CAAAA,CAAI1Q,SAAJ0Q,CAAchL,KAAdgL,GAAsBH,KAAAA,CAAM3H,SAAN2H,CAAM3H,EAAN2H,CADtBG,EAGAA,CAAAA,CAAInR,MAAJmR,GAAa,UAAgBG,CAAhB,EAAmBC,CAAnB,EAAmBA;AACtBD,MAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,WADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiBE,GAArB,EACjD,EAAOG,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,YAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,gBAAQ7R,CAAAA,KAAM,CAAd;AACA,eAAK,CAAL;AACI+R,YAAAA,CAAAA,CAAEH,OAAFG,GAAYF,CAAAA,CAAE7S,MAAF6S,EAAZE;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAErL,KAAFqL,GAAUF,CAAAA,CAAE3F,KAAF2F,EAAVE;AACA;;AACJ;AACIF,YAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AARJ;AAYJ;;AAAA,aAAOE,CAAP;AAAOA,KArBXL,EAwBOA,CAAP;AAjCa,GAAA,EAAjBD,EAoCAA,CAAAA,CAAWO,QAAXP,IACQQ,CAAAA,GAAAA,EAAAA,EAAAA,CAAiBC,CAAAA,GAAS/M,MAAAA,CAAOoG,MAAPpG,CAAc8M,CAAd9M,CAA1B8M,EACGA,CAAAA,CAAW,CAAXA,CAAAA,GAAgB,YADnBA,IACmC,CADnCA,EAEJC,CAAAA,CAAOD,CAAAA,CAAW,CAAXA,CAAAA,GAAgB,UAAvBC,CAAAA,GAAqC,CAFjCD,EAGJC,CAAAA,CAAOD,CAAAA,CAAW,CAAXA,CAAAA,GAAgB,WAAvBC,CAAAA,GAAsC,CAHlCD,EAIJC,CAAAA,CAAOD,CAAAA,CAAW,CAAXA,CAAAA,GAAgB,UAAvBC,CAAAA,GAAqC,CAJjCD,EAKJC,CAAAA,CAAOD,CAAAA,CAAW,CAAXA,CAAAA,GAAgB,UAAvBC,CAAAA,GAAqC,CALjCD,EAMJC,CAAAA,CAAOD,CAAAA,CAAW,CAAXA,CAAAA,GAAgB,UAAvBC,CAAAA,GAAqC,CANjCD,EAOJC,CAAAA,CAAOD,CAAAA,CAAW,CAAXA,CAAAA,GAAgB,SAAvBC,CAAAA,GAAoC,CAPhCD,EAQJC,CAAAA,CAAOD,CAAAA,CAAW,CAAXA,CAAAA,GAAgB,WAAvBC,CAAAA,GAAsC,CARlCD,EASJC,CAAAA,CAAOD,CAAAA,CAAW,CAAXA,CAAAA,GAAgB,cAAvBC,CAAAA,GAAyC,CATrCD,EAUJC,CAAAA,CAAOD,CAAAA,CAAW,CAAXA,CAAAA,GAAgB,UAAvBC,CAAAA,GAAqC,CAVjCD,EAWJC,CAAAA,CAAOD,CAAAA,CAAW,EAAXA,CAAAA,GAAiB,SAAxBC,CAAAA,GAAqC,EAXjCD,EAYJC,CAAAA,CAAOD,CAAAA,CAAW,EAAXA,CAAAA,GAAiB,UAAxBC,CAAAA,GAAsC,EAZlCD,EAaJC,CAAAA,CAAOD,CAAAA,CAAW,EAAXA,CAAAA,GAAiB,WAAxBC,CAAAA,GAAuC,EAbnCD,EAcJC,CAAAA,CAAOD,CAAAA,CAAW,EAAXA,CAAAA,GAAiB,WAAxBC,CAAAA,GAAuC,EAdnCD,EAeJC,CAAAA,CAAOD,CAAAA,CAAW,EAAXA,CAAAA,GAAiB,aAAxBC,CAAAA,GAAyC,EAfrCD,EAgBJC,CAAAA,CAAOD,CAAAA,CAAW,GAAXA,CAAAA,GAAkB,cAAzBC,CAAAA,GAA2C,GAhBvCD,EAiBJC,CAAAA,CAAOD,CAAAA,CAAW,GAAXA,CAAAA,GAAkB,eAAzBC,CAAAA,GAA4C,GAjBxCD,EAkBJC,CAAAA,CAAOD,CAAAA,CAAW,GAAXA,CAAAA,GAAkB,cAAzBC,CAAAA,GAA2C,GAlBvCD,EAmBJC,CAAAA,CAAOD,CAAAA,CAAW,GAAXA,CAAAA,GAAkB,cAAzBC,CAAAA,GAA2C,GAnBvCD,EAoBJC,CAAAA,CAAOD,CAAAA,CAAW,GAAXA,CAAAA,GAAkB,cAAzBC,CAAAA,GAA2C,GApBvCD,EAqBJC,CAAAA,CAAOD,CAAAA,CAAW,GAAXA,CAAAA,GAAkB,aAAzBC,CAAAA,GAA0C,GArBtCD,EAsBJC,CAAAA,CAAOD,CAAAA,CAAW,GAAXA,CAAAA,GAAkB,eAAzBC,CAAAA,GAA4C,GAtBxCD,EAuBJC,CAAAA,CAAOD,CAAAA,CAAW,GAAXA,CAAAA,GAAkB,kBAAzBC,CAAAA,GAA+C,GAvB3CD,EAwBJC,CAAAA,CAAOD,CAAAA,CAAW,GAAXA,CAAAA,GAAkB,cAAzBC,CAAAA,GAA2C,GAxBvCD,EAyBJC,CAAAA,CAAOD,CAAAA,CAAW,GAAXA,CAAAA,GAAkB,aAAzBC,CAAAA,GAA0C,GAzBtCD,EA0BJC,CAAAA,CAAOD,CAAAA,CAAW,GAAXA,CAAAA,GAAkB,cAAzBC,CAAAA,GAA2C,GA1BvCD,EA2BJC,CAAAA,CAAOD,CAAAA,CAAW,GAAXA,CAAAA,GAAkB,eAAzBC,CAAAA,GAA4C,GA3BxCD,EA4BJC,CAAAA,CAAOD,CAAAA,CAAW,GAAXA,CAAAA,GAAkB,eAAzBC,CAAAA,GAA4C,GA5BxCD,EA6BJC,CAAAA,CAAOD,CAAAA,CAAW,GAAXA,CAAAA,GAAkB,iBAAzBC,CAAAA,GAA8C,GA7B1CD,EA8BGC,CA/BXT,CApCAA,EAsEAA,CAAAA,CAAWU,WAAXV,GAAyB,YAAA;AAErB,aAASU,CAAT,CAAqBlT,CAArB,EAAqBA;AAEjB,UADA6B,KAAKsR,GAALtR,GAAKsR,EAALtR,EACI7B,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,gBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AAmER;;AAAA,WA9DAkT,CAAAA,CAAYnR,SAAZmR,CAAsBC,GAAtBD,GAA4BZ,KAAAA,CAAMjJ,UAAlC6J,EACAA,CAAAA,CAAYnR,SAAZmR,CAAsBE,WAAtBF,GAAsBE,CAAc,CADpCF,EAGAA,CAAAA,CAAY5R,MAAZ4R,GAAqB,UAAgBN,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC9BD,MAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,WADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiBW,WAArB,EACjD,EAAON,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,YAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,gBAAQ7R,CAAAA,KAAM,CAAd;AACA,eAAK,CAAL;AACU+R,YAAAA,CAAAA,CAAEK,GAAFL,IAASA,CAAAA,CAAEK,GAAFL,CAAM1T,MAAf0T,KACFA,CAAAA,CAAEK,GAAFL,GAAEK,EADAL,GAENA,CAAAA,CAAEK,GAAFL,CAAM7R,IAAN6R,CAAWP,KAAAA,CAAMC,UAAND,CAAiBW,WAAjBX,CAA6Bc,GAA7Bd,CAAiCjR,MAAjCiR,CAAwCK,CAAxCL,EAA2CK,CAAAA,CAAEvE,MAAFuE,EAA3CL,CAAXO,CAFMA;AAGN;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAEM,WAAFN,GAAgBF,CAAAA,CAAEhE,IAAFgE,EAAhBE;AACA;;AACJ;AACIF,YAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAVJ;AAcJ;;AAAA,aAAOE,CAAP;AAAOA,KAvBXI,EA0BAA,CAAAA,CAAYG,GAAZH,GAAkB,YAAA;AAEd,eAASG,CAAT,CAAarT,CAAb,EAAaA;AACT,YAAIA,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,kBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AA6BR;;AAAA,aAxBAqT,CAAAA,CAAItR,SAAJsR,CAAcxM,IAAdwM,GAAqBf,KAAAA,CAAMzK,IAANyK,GAAaA,KAAAA,CAAMzK,IAANyK,CAAWlH,QAAXkH,CAAoB,CAApBA,EAAsB,CAAtBA,EAAsB,CAAE,CAAxBA,CAAbA,GAA8C,CAAnEe,EACAA,CAAAA,CAAItR,SAAJsR,CAAcvH,IAAduH,GAAqB,EADrBA,EAGAA,CAAAA,CAAI/R,MAAJ+R,GAAa,UAAgBT,CAAhB,EAAmBC,CAAnB,EAAmBA;AACtBD,QAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,aADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiBW,WAAjBX,CAA6Bc,GAAjC,EACjD,EAAOT,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,cAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,kBAAQ7R,CAAAA,KAAM,CAAd;AACA,iBAAK,CAAL;AACI+R,cAAAA,CAAAA,CAAEjM,IAAFiM,GAASF,CAAAA,CAAElE,KAAFkE,EAATE;AACA;;AACJ,iBAAK,CAAL;AACIA,cAAAA,CAAAA,CAAEhH,IAAFgH,GAASF,CAAAA,CAAE7S,MAAF6S,EAATE;AACA;;AACJ;AACIF,cAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AARJ;AAYJ;;AAAA,eAAOE,CAAP;AAAOA,OArBXO,EAwBOA,CAAP;AAjCc,KAAA,EA1BlBH,EA8DOA,CAAP;AAxEqB,GAAA,EAtEzBV,EAiJAA,CAAAA,CAAWc,MAAXd,GAAoB,YAAA;AAEhB,aAASc,CAAT,CAAgBtT,CAAhB,EAAgBA;AAUZ,UATA6B,KAAK0R,QAAL1R,GAAK0R,EAAL1R,EACAA,KAAK2R,SAAL3R,GAAK2R,EADL3R,EAEAA,KAAK4R,MAAL5R,GAAK4R,EAFL5R,EAGAA,KAAK6R,SAAL7R,GAAK6R,EAHL7R,EAIAA,KAAK8R,WAAL9R,GAAK8R,EAJL9R,EAKAA,KAAK+R,QAAL/R,GAAK+R,EALL/R,EAMAA,KAAKgS,OAALhS,GAAKgS,EANLhS,EAOAA,KAAKiS,SAALjS,GAAKiS,EAPLjS,EAQAA,KAAKkS,SAALlS,GAAKkS,EARLlS,EASI7B,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,gBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AAmIR;;AAAA,WA9HAsT,CAAAA,CAAOvR,SAAPuR,CAAiBU,KAAjBV,GAAyB,CAAzBA,EACAA,CAAAA,CAAOvR,SAAPuR,CAAiBW,WAAjBX,GAA+B,IAD/BA,EAEAA,CAAAA,CAAOvR,SAAPuR,CAAiBY,aAAjBZ,GAAiC,CAFjCA,EAGAA,CAAAA,CAAOvR,SAAPuR,CAAiBa,aAAjBb,GAAiChB,KAAAA,CAAM3H,SAAN2H,CAAM3H,EAAN2H,CAHjCgB,EAIAA,CAAAA,CAAOvR,SAAPuR,CAAiBC,QAAjBD,GAA4BhB,KAAAA,CAAMjJ,UAJlCiK,EAKAA,CAAAA,CAAOvR,SAAPuR,CAAiBE,SAAjBF,GAA6BhB,KAAAA,CAAMjJ,UALnCiK,EAMAA,CAAAA,CAAOvR,SAAPuR,CAAiBG,MAAjBH,GAA0BhB,KAAAA,CAAMjJ,UANhCiK,EAOAA,CAAAA,CAAOvR,SAAPuR,CAAiBI,SAAjBJ,GAA6BhB,KAAAA,CAAMjJ,UAPnCiK,EAQAA,CAAAA,CAAOvR,SAAPuR,CAAiBK,WAAjBL,GAA+BhB,KAAAA,CAAMjJ,UARrCiK,EASAA,CAAAA,CAAOvR,SAAPuR,CAAiBM,QAAjBN,GAA4BhB,KAAAA,CAAMjJ,UATlCiK,EAUAA,CAAAA,CAAOvR,SAAPuR,CAAiBO,OAAjBP,GAA2BhB,KAAAA,CAAMjJ,UAVjCiK,EAWAA,CAAAA,CAAOvR,SAAPuR,CAAiBQ,SAAjBR,GAA6BhB,KAAAA,CAAMjJ,UAXnCiK,EAYAA,CAAAA,CAAOvR,SAAPuR,CAAiBS,SAAjBT,GAA6BhB,KAAAA,CAAMjJ,UAZnCiK,EAcAA,CAAAA,CAAOhS,MAAPgS,GAAgB,UAAgBV,CAAhB,EAAmBC,CAAnB,EAAmBA;AACzBD,MAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,WADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiBe,MAArB,EACjD,EAAOV,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,YAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,gBAAQ7R,CAAAA,KAAM,CAAd;AACA,eAAK,CAAL;AACI+R,YAAAA,CAAAA,CAAEkB,KAAFlB,GAAUF,CAAAA,CAAEtE,KAAFsE,EAAVE;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAEmB,WAAFnB,GAAgBP,KAAAA,CAAMC,UAAND,CAAiBW,WAAjBX,CAA6BjR,MAA7BiR,CAAoCK,CAApCL,EAAuCK,CAAAA,CAAEvE,MAAFuE,EAAvCL,CAAhBO;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAEoB,aAAFpB,GAAkBF,CAAAA,CAAEtE,KAAFsE,EAAlBE;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAEqB,aAAFrB,GAAkBF,CAAAA,CAAE3F,KAAF2F,EAAlBE;AACA;;AACJ,eAAK,CAAL;AAGI,gBAFMA,CAAAA,CAAES,QAAFT,IAAcA,CAAAA,CAAES,QAAFT,CAAW1T,MAAzB0T,KACFA,CAAAA,CAAES,QAAFT,GAAES,EADAT,GAEU,MAAP,IAAJ/R,CAAW,CAAhB,EAEI,KADA,IAAI2F,CAAAA,GAAKkM,CAAAA,CAAEvE,MAAFuE,KAAaA,CAAAA,CAAE5P,GACxB,EAAO4P,CAAAA,CAAE5P,GAAF4P,GAAQlM,CAAf;AACIoM,cAAAA,CAAAA,CAAES,QAAFT,CAAW7R,IAAX6R,CAAgBF,CAAAA,CAAE7J,KAAF6J,EAAhBE;AADJ,aAFJ,MAKIA,CAAAA,CAAES,QAAFT,CAAW7R,IAAX6R,CAAgBF,CAAAA,CAAE7J,KAAF6J,EAAhBE;AACJ;;AACJ,eAAK,CAAL;AAGI,gBAFMA,CAAAA,CAAEU,SAAFV,IAAeA,CAAAA,CAAEU,SAAFV,CAAY1T,MAA3B0T,KACFA,CAAAA,CAAEU,SAAFV,GAAEU,EADAV,GAEU,MAAP,IAAJ/R,CAAW,CAAhB,EAEI,KADI2F,CAAAA,GAAKkM,CAAAA,CAAEvE,MAAFuE,KAAaA,CAAAA,CAAE5P,GACxB,EAAO4P,CAAAA,CAAE5P,GAAF4P,GAAQlM,CAAf;AACIoM,cAAAA,CAAAA,CAAEU,SAAFV,CAAY7R,IAAZ6R,CAAiBF,CAAAA,CAAE1D,MAAF0D,EAAjBE;AADJ,aAFJ,MAKIA,CAAAA,CAAEU,SAAFV,CAAY7R,IAAZ6R,CAAiBF,CAAAA,CAAE1D,MAAF0D,EAAjBE;AACJ;;AACJ,eAAK,CAAL;AAGI,gBAFMA,CAAAA,CAAEW,MAAFX,IAAYA,CAAAA,CAAEW,MAAFX,CAAS1T,MAArB0T,KACFA,CAAAA,CAAEW,MAAFX,GAAEW,EADAX,GAEU,MAAP,IAAJ/R,CAAW,CAAhB,EAEI,KADI2F,CAAAA,GAAKkM,CAAAA,CAAEvE,MAAFuE,KAAaA,CAAAA,CAAE5P,GACxB,EAAO4P,CAAAA,CAAE5P,GAAF4P,GAAQlM,CAAf;AACIoM,cAAAA,CAAAA,CAAEW,MAAFX,CAAS7R,IAAT6R,CAAcF,CAAAA,CAAEtE,KAAFsE,EAAdE;AADJ,aAFJ,MAKIA,CAAAA,CAAEW,MAAFX,CAAS7R,IAAT6R,CAAcF,CAAAA,CAAEtE,KAAFsE,EAAdE;AACJ;;AACJ,eAAK,CAAL;AACUA,YAAAA,CAAAA,CAAEY,SAAFZ,IAAeA,CAAAA,CAAEY,SAAFZ,CAAY1T,MAA3B0T,KACFA,CAAAA,CAAEY,SAAFZ,GAAEY,EADAZ,GAENA,CAAAA,CAAEY,SAAFZ,CAAY7R,IAAZ6R,CAAiBF,CAAAA,CAAE3F,KAAF2F,EAAjBE,CAFMA;AAGN;;AACJ,eAAK,CAAL;AAGI,gBAFMA,CAAAA,CAAEa,WAAFb,IAAiBA,CAAAA,CAAEa,WAAFb,CAAc1T,MAA/B0T,KACFA,CAAAA,CAAEa,WAAFb,GAAEa,EADAb,GAEU,MAAP,IAAJ/R,CAAW,CAAhB,EAEI,KADI2F,CAAAA,GAAKkM,CAAAA,CAAEvE,MAAFuE,KAAaA,CAAAA,CAAE5P,GACxB,EAAO4P,CAAAA,CAAE5P,GAAF4P,GAAQlM,CAAf;AACIoM,cAAAA,CAAAA,CAAEa,WAAFb,CAAc7R,IAAd6R,CAAmBF,CAAAA,CAAE7J,KAAF6J,EAAnBE;AADJ,aAFJ,MAKIA,CAAAA,CAAEa,WAAFb,CAAc7R,IAAd6R,CAAmBF,CAAAA,CAAE7J,KAAF6J,EAAnBE;AACJ;;AACJ,eAAK,EAAL;AAGI,gBAFMA,CAAAA,CAAEc,QAAFd,IAAcA,CAAAA,CAAEc,QAAFd,CAAW1T,MAAzB0T,KACFA,CAAAA,CAAEc,QAAFd,GAAEc,EADAd,GAEU,MAAP,IAAJ/R,CAAW,CAAhB,EAEI,KADI2F,CAAAA,GAAKkM,CAAAA,CAAEvE,MAAFuE,KAAaA,CAAAA,CAAE5P,GACxB,EAAO4P,CAAAA,CAAE5P,GAAF4P,GAAQlM,CAAf;AACIoM,cAAAA,CAAAA,CAAEc,QAAFd,CAAW7R,IAAX6R,CAAgBF,CAAAA,CAAElE,KAAFkE,EAAhBE;AADJ,aAFJ,MAKIA,CAAAA,CAAEc,QAAFd,CAAW7R,IAAX6R,CAAgBF,CAAAA,CAAElE,KAAFkE,EAAhBE;AACJ;;AACJ,eAAK,EAAL;AAGI,gBAFMA,CAAAA,CAAEe,OAAFf,IAAaA,CAAAA,CAAEe,OAAFf,CAAU1T,MAAvB0T,KACFA,CAAAA,CAAEe,OAAFf,GAAEe,EADAf,GAEU,MAAP,IAAJ/R,CAAW,CAAhB,EAEI,KADI2F,CAAAA,GAAKkM,CAAAA,CAAEvE,MAAFuE,KAAaA,CAAAA,CAAE5P,GACxB,EAAO4P,CAAAA,CAAE5P,GAAF4P,GAAQlM,CAAf;AACIoM,cAAAA,CAAAA,CAAEe,OAAFf,CAAU7R,IAAV6R,CAAeF,CAAAA,CAAEhE,IAAFgE,EAAfE;AADJ,aAFJ,MAKIA,CAAAA,CAAEe,OAAFf,CAAU7R,IAAV6R,CAAeF,CAAAA,CAAEhE,IAAFgE,EAAfE;AACJ;;AACJ,eAAK,EAAL;AAGI,gBAFMA,CAAAA,CAAEgB,SAAFhB,IAAeA,CAAAA,CAAEgB,SAAFhB,CAAY1T,MAA3B0T,KACFA,CAAAA,CAAEgB,SAAFhB,GAAEgB,EADAhB,GAEU,MAAP,IAAJ/R,CAAW,CAAhB,EAEI,KADI2F,CAAAA,GAAKkM,CAAAA,CAAEvE,MAAFuE,KAAaA,CAAAA,CAAE5P,GACxB,EAAO4P,CAAAA,CAAE5P,GAAF4P,GAAQlM,CAAf;AACIoM,cAAAA,CAAAA,CAAEgB,SAAFhB,CAAY7R,IAAZ6R,CAAiBF,CAAAA,CAAEvE,MAAFuE,EAAjBE;AADJ,aAFJ,MAKIA,CAAAA,CAAEgB,SAAFhB,CAAY7R,IAAZ6R,CAAiBF,CAAAA,CAAEvE,MAAFuE,EAAjBE;AACJ;;AACJ,eAAK,EAAL;AAGI,gBAFMA,CAAAA,CAAEiB,SAAFjB,IAAeA,CAAAA,CAAEiB,SAAFjB,CAAY1T,MAA3B0T,KACFA,CAAAA,CAAEiB,SAAFjB,GAAEiB,EADAjB,GAEU,MAAP,IAAJ/R,CAAW,CAAhB,EAEI,KADI2F,CAAAA,GAAKkM,CAAAA,CAAEvE,MAAFuE,KAAaA,CAAAA,CAAE5P,GACxB,EAAO4P,CAAAA,CAAE5P,GAAF4P,GAAQlM,CAAf;AACIoM,cAAAA,CAAAA,CAAEiB,SAAFjB,CAAY7R,IAAZ6R,CAAiBF,CAAAA,CAAEnE,MAAFmE,EAAjBE;AADJ,aAFJ,MAKIA,CAAAA,CAAEiB,SAAFjB,CAAY7R,IAAZ6R,CAAiBF,CAAAA,CAAEnE,MAAFmE,EAAjBE;AACJ;;AACJ;AACIF,YAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAnGJ;AAuGJ;;AAAA,aAAOE,CAAP;AAAOA,KA3HXQ,EA8HOA,CAAP;AAhJgB,GAAA,EAjJpBd,EAoSAA,CAAAA,CAAW4B,SAAX5B,GAAuB,YAAA;AAEnB,aAAS4B,CAAT,CAAmBpU,CAAnB,EAAmBA;AACf,UAAIA,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,gBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AAgBR;;AAAA,QAAI6U,CAAJ;AA4JA,WAvKAT,CAAAA,CAAUrS,SAAVqS,CAAoBC,IAApBD,GAA2B,IAA3BA,EACAA,CAAAA,CAAUrS,SAAVqS,CAAoBE,CAApBF,GAAwB9B,KAAAA,CAAM3H,SAAN2H,CAAM3H,EAAN2H,CADxB8B,EAEAA,CAAAA,CAAUrS,SAAVqS,CAAoB7T,CAApB6T,GAAwB9B,KAAAA,CAAMzK,IAANyK,GAAaA,KAAAA,CAAMzK,IAANyK,CAAWlH,QAAXkH,CAAoB,CAApBA,EAAsB,CAAtBA,EAAsB,CAAE,CAAxBA,CAAbA,GAA8C,CAFtE8B,EAGAA,CAAAA,CAAUrS,SAAVqS,CAAoBG,CAApBH,GAAwB,CAHxBA,EAIAA,CAAAA,CAAUrS,SAAVqS,CAAoBpT,CAApBoT,GAAoBpT,CAAI,CAJxBoT,EAKAA,CAAAA,CAAUrS,SAAVqS,CAAoBI,IAApBJ,GAA2B,CAL3BA,EAMAA,CAAAA,CAAUrS,SAAVqS,CAAoBK,KAApBL,GAA4B,IAN5BA,EAOAA,CAAAA,CAAUrS,SAAVqS,CAAoBM,MAApBN,GAA6B,IAP7BA,EAQAA,CAAAA,CAAUrS,SAAVqS,CAAoBO,WAApBP,GAAkC,EARlCA,EASAA,CAAAA,CAAUrS,SAAVqS,CAAoBQ,IAApBR,GAA2B,IAT3BA,EAaAlO,MAAAA,CAAOgG,cAAPhG,CAAsBkO,CAAAA,CAAUrS,SAAhCmE,EAA2C,OAA3CA,EAA2C;AACvCiG,MAAAA,GAAAA,EAAKmG,KAAAA,CAAM5F,WAAN4F,CAAkBuC,CAAAA,GAAAA,CAAgB,MAAhBA,EAAwB,GAAxBA,EAA6B,GAA7BA,EAAkC,GAAlCA,EAAuC,GAAvCA,EAA4C,MAA5CA,EAAoD,OAApDA,EAA6D,QAA7DA,EAAuE,aAAvEA,EAAsF,MAAtFA,CAAlBvC,CADkC;AAEvClD,MAAAA,GAAAA,EAAKkD,KAAAA,CAAMzF,WAANyF,CAAkBuC,CAAlBvC;AAFkC,KAA3CpM,CAbAkO,EAkBAA,CAAAA,CAAU9S,MAAV8S,GAAmB,UAAgBxB,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC5BD,MAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,WADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiB6B,SAArB,EACjD,EAAOxB,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,YAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,gBAAQ7R,CAAAA,KAAM,CAAd;AACA,eAAK,CAAL;AACI+R,YAAAA,CAAAA,CAAEuB,IAAFvB,GAASP,KAAAA,CAAMC,UAAND,CAAiB6B,SAAjB7B,CAA2BuC,SAA3BvC,CAAqCjR,MAArCiR,CAA4CK,CAA5CL,EAA+CK,CAAAA,CAAEvE,MAAFuE,EAA/CL,CAATO;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAEwB,CAAFxB,GAAMF,CAAAA,CAAE3F,KAAF2F,EAANE;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAEvS,CAAFuS,GAAMF,CAAAA,CAAElE,KAAFkE,EAANE;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAEyB,CAAFzB,GAAMF,CAAAA,CAAE7J,KAAF6J,EAANE;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAE9R,CAAF8R,GAAMF,CAAAA,CAAEhE,IAAFgE,EAANE;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAE0B,IAAF1B,GAASF,CAAAA,CAAEtE,KAAFsE,EAATE;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAE2B,KAAF3B,GAAUP,KAAAA,CAAMC,UAAND,CAAiBW,WAAjBX,CAA6BjR,MAA7BiR,CAAoCK,CAApCL,EAAuCK,CAAAA,CAAEvE,MAAFuE,EAAvCL,CAAVO;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAE4B,MAAF5B,GAAWP,KAAAA,CAAMC,UAAND,CAAiBe,MAAjBf,CAAwBjR,MAAxBiR,CAA+BK,CAA/BL,EAAkCK,CAAAA,CAAEvE,MAAFuE,EAAlCL,CAAXO;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAE6B,WAAF7B,GAAgBF,CAAAA,CAAE7S,MAAF6S,EAAhBE;AACA;;AACJ,eAAK,EAAL;AACIA,YAAAA,CAAAA,CAAE8B,IAAF9B,GAASP,KAAAA,CAAMC,UAAND,CAAiBwC,YAAjBxC,CAA8BjR,MAA9BiR,CAAqCK,CAArCL,EAAwCK,CAAAA,CAAEvE,MAAFuE,EAAxCL,CAATO;AACA;;AACJ;AACIF,YAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAhCJ;AAoCJ;;AAAA,aAAOE,CAAP;AAAOA,KA5DXsB,EA+DAA,CAAAA,CAAUU,SAAVV,GAAsB,YAAA;AAElB,eAASU,CAAT,CAAmB9U,CAAnB,EAAmBA;AASf,YARA6B,KAAKyS,CAALzS,GAAKyS,EAALzS,EACAA,KAAKtB,CAALsB,GAAKtB,EADLsB,EAEAA,KAAK0S,CAAL1S,GAAK0S,EAFL1S,EAGAA,KAAKb,CAALa,GAAKb,EAHLa,EAIAA,KAAK2S,IAAL3S,GAAK2S,EAJL3S,EAKAA,KAAK4S,KAAL5S,GAAK4S,EALL5S,EAMAA,KAAK6S,MAAL7S,GAAK6S,EANL7S,EAOAA,KAAK+S,IAAL/S,GAAK+S,EAPL/S,EAQI7B,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,kBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AAyFR;;AAAA,aApFA8U,CAAAA,CAAU/S,SAAV+S,CAAoBR,CAApBQ,GAAwBxC,KAAAA,CAAMjJ,UAA9ByL,EACAA,CAAAA,CAAU/S,SAAV+S,CAAoBvU,CAApBuU,GAAwBxC,KAAAA,CAAMjJ,UAD9ByL,EAEAA,CAAAA,CAAU/S,SAAV+S,CAAoBP,CAApBO,GAAwBxC,KAAAA,CAAMjJ,UAF9ByL,EAGAA,CAAAA,CAAU/S,SAAV+S,CAAoB9T,CAApB8T,GAAwBxC,KAAAA,CAAMjJ,UAH9ByL,EAIAA,CAAAA,CAAU/S,SAAV+S,CAAoBN,IAApBM,GAA2BxC,KAAAA,CAAMjJ,UAJjCyL,EAKAA,CAAAA,CAAU/S,SAAV+S,CAAoBL,KAApBK,GAA4BxC,KAAAA,CAAMjJ,UALlCyL,EAMAA,CAAAA,CAAU/S,SAAV+S,CAAoBJ,MAApBI,GAA6BxC,KAAAA,CAAMjJ,UANnCyL,EAOAA,CAAAA,CAAU/S,SAAV+S,CAAoBF,IAApBE,GAA2BxC,KAAAA,CAAMjJ,UAPjCyL,EASAA,CAAAA,CAAUxT,MAAVwT,GAAmB,UAAgBlC,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC5BD,QAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,aADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiB6B,SAAjB7B,CAA2BuC,SAA/B,EACjD,EAAOlC,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,cAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,kBAAQ7R,CAAAA,KAAM,CAAd;AACA,iBAAK,CAAL;AACU+R,cAAAA,CAAAA,CAAEwB,CAAFxB,IAAOA,CAAAA,CAAEwB,CAAFxB,CAAI1T,MAAX0T,KACFA,CAAAA,CAAEwB,CAAFxB,GAAEwB,EADAxB,GAENA,CAAAA,CAAEwB,CAAFxB,CAAI7R,IAAJ6R,CAASF,CAAAA,CAAE3F,KAAF2F,EAATE,CAFMA;AAGN;;AACJ,iBAAK,CAAL;AAGI,kBAFMA,CAAAA,CAAEvS,CAAFuS,IAAOA,CAAAA,CAAEvS,CAAFuS,CAAI1T,MAAX0T,KACFA,CAAAA,CAAEvS,CAAFuS,GAAEvS,EADAuS,GAEU,MAAP,IAAJ/R,CAAW,CAAhB,EAEI,KADA,IAAI2F,CAAAA,GAAKkM,CAAAA,CAAEvE,MAAFuE,KAAaA,CAAAA,CAAE5P,GACxB,EAAO4P,CAAAA,CAAE5P,GAAF4P,GAAQlM,CAAf;AACIoM,gBAAAA,CAAAA,CAAEvS,CAAFuS,CAAI7R,IAAJ6R,CAASF,CAAAA,CAAElE,KAAFkE,EAATE;AADJ,eAFJ,MAKIA,CAAAA,CAAEvS,CAAFuS,CAAI7R,IAAJ6R,CAASF,CAAAA,CAAElE,KAAFkE,EAATE;AACJ;;AACJ,iBAAK,CAAL;AAGI,kBAFMA,CAAAA,CAAEyB,CAAFzB,IAAOA,CAAAA,CAAEyB,CAAFzB,CAAI1T,MAAX0T,KACFA,CAAAA,CAAEyB,CAAFzB,GAAEyB,EADAzB,GAEU,MAAP,IAAJ/R,CAAW,CAAhB,EAEI,KADI2F,CAAAA,GAAKkM,CAAAA,CAAEvE,MAAFuE,KAAaA,CAAAA,CAAE5P,GACxB,EAAO4P,CAAAA,CAAE5P,GAAF4P,GAAQlM,CAAf;AACIoM,gBAAAA,CAAAA,CAAEyB,CAAFzB,CAAI7R,IAAJ6R,CAASF,CAAAA,CAAE7J,KAAF6J,EAATE;AADJ,eAFJ,MAKIA,CAAAA,CAAEyB,CAAFzB,CAAI7R,IAAJ6R,CAASF,CAAAA,CAAE7J,KAAF6J,EAATE;AACJ;;AACJ,iBAAK,CAAL;AAGI,kBAFMA,CAAAA,CAAE9R,CAAF8R,IAAOA,CAAAA,CAAE9R,CAAF8R,CAAI1T,MAAX0T,KACFA,CAAAA,CAAE9R,CAAF8R,GAAE9R,EADA8R,GAEU,MAAP,IAAJ/R,CAAW,CAAhB,EAEI,KADI2F,CAAAA,GAAKkM,CAAAA,CAAEvE,MAAFuE,KAAaA,CAAAA,CAAE5P,GACxB,EAAO4P,CAAAA,CAAE5P,GAAF4P,GAAQlM,CAAf;AACIoM,gBAAAA,CAAAA,CAAE9R,CAAF8R,CAAI7R,IAAJ6R,CAASF,CAAAA,CAAEhE,IAAFgE,EAATE;AADJ,eAFJ,MAKIA,CAAAA,CAAE9R,CAAF8R,CAAI7R,IAAJ6R,CAASF,CAAAA,CAAEhE,IAAFgE,EAATE;AACJ;;AACJ,iBAAK,CAAL;AAGI,kBAFMA,CAAAA,CAAE0B,IAAF1B,IAAUA,CAAAA,CAAE0B,IAAF1B,CAAO1T,MAAjB0T,KACFA,CAAAA,CAAE0B,IAAF1B,GAAE0B,EADA1B,GAEU,MAAP,IAAJ/R,CAAW,CAAhB,EAEI,KADI2F,CAAAA,GAAKkM,CAAAA,CAAEvE,MAAFuE,KAAaA,CAAAA,CAAE5P,GACxB,EAAO4P,CAAAA,CAAE5P,GAAF4P,GAAQlM,CAAf;AACIoM,gBAAAA,CAAAA,CAAE0B,IAAF1B,CAAO7R,IAAP6R,CAAYF,CAAAA,CAAEtE,KAAFsE,EAAZE;AADJ,eAFJ,MAKIA,CAAAA,CAAE0B,IAAF1B,CAAO7R,IAAP6R,CAAYF,CAAAA,CAAEtE,KAAFsE,EAAZE;AACJ;;AACJ,iBAAK,CAAL;AACUA,cAAAA,CAAAA,CAAE2B,KAAF3B,IAAWA,CAAAA,CAAE2B,KAAF3B,CAAQ1T,MAAnB0T,KACFA,CAAAA,CAAE2B,KAAF3B,GAAE2B,EADA3B,GAENA,CAAAA,CAAE2B,KAAF3B,CAAQ7R,IAAR6R,CAAaP,KAAAA,CAAMC,UAAND,CAAiBW,WAAjBX,CAA6BjR,MAA7BiR,CAAoCK,CAApCL,EAAuCK,CAAAA,CAAEvE,MAAFuE,EAAvCL,CAAbO,CAFMA;AAGN;;AACJ,iBAAK,CAAL;AACUA,cAAAA,CAAAA,CAAE4B,MAAF5B,IAAYA,CAAAA,CAAE4B,MAAF5B,CAAS1T,MAArB0T,KACFA,CAAAA,CAAE4B,MAAF5B,GAAE4B,EADA5B,GAENA,CAAAA,CAAE4B,MAAF5B,CAAS7R,IAAT6R,CAAcP,KAAAA,CAAMC,UAAND,CAAiBe,MAAjBf,CAAwBjR,MAAxBiR,CAA+BK,CAA/BL,EAAkCK,CAAAA,CAAEvE,MAAFuE,EAAlCL,CAAdO,CAFMA;AAGN;;AACJ,iBAAK,CAAL;AACUA,cAAAA,CAAAA,CAAE8B,IAAF9B,IAAUA,CAAAA,CAAE8B,IAAF9B,CAAO1T,MAAjB0T,KACFA,CAAAA,CAAE8B,IAAF9B,GAAE8B,EADA9B,GAENA,CAAAA,CAAE8B,IAAF9B,CAAO7R,IAAP6R,CAAYP,KAAAA,CAAMC,UAAND,CAAiBwC,YAAjBxC,CAA8BjR,MAA9BiR,CAAqCK,CAArCL,EAAwCK,CAAAA,CAAEvE,MAAFuE,EAAxCL,CAAZO,CAFMA;AAGN;;AACJ;AACIF,cAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AA9DJ;AAkEJ;;AAAA,eAAOE,CAAP;AAAOA,OAjFXgC,EAoFOA,CAAP;AArGkB,KAAA,EA/DtBV,EAuKOA,CAAP;AAhLmB,GAAA,EApSvB5B,EAudAA,CAAAA,CAAWuC,YAAXvC,GAA0B,YAAA;AAEtB,aAASuC,CAAT,CAAsB/U,CAAtB,EAAsBA;AAElB,UADA6B,KAAKmT,IAALnT,GAAKmT,EAALnT,EACI7B,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,gBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AAkCR;;AAAA,WA7BA+U,CAAAA,CAAahT,SAAbgT,CAAuBjJ,IAAvBiJ,GAA8B,EAA9BA,EACAA,CAAAA,CAAahT,SAAbgT,CAAuBC,IAAvBD,GAA8BzC,KAAAA,CAAM/I,WADpCwL,EAGAA,CAAAA,CAAazT,MAAbyT,GAAsB,UAAgBnC,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC/BD,MAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,WADA,IAAsFqC,CAAtF,EAAI1T,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiBwC,YAArB,EACjD,EAAOnC,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,YAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,gBAAQ7R,CAAAA,KAAM,CAAd;AACA,eAAK,CAAL;AACI+R,YAAAA,CAAAA,CAAEhH,IAAFgH,GAASF,CAAAA,CAAE7S,MAAF6S,EAATE;AACA;;AACJ,eAAK,CAAL;AACIF,YAAAA,CAAAA,CAAElC,IAAFkC,GAAS5P,GAAT4P,IACIE,CAAAA,CAAEkC,IAAFlC,KAAWR,KAAAA,CAAM/I,WAAjBuJ,KACAA,CAAAA,CAAEkC,IAAFlC,GAAEkC,EADFlC,CADJF,EAGAqC,CAAAA,GAAIrC,CAAAA,CAAE7S,MAAF6S,EAHJA,EAIAA,CAAAA,CAAE5P,GAAF4P,EAJAA,EAKAE,CAAAA,CAAEkC,IAAFlC,CAAOmC,CAAPnC,IAAYP,KAAAA,CAAMC,UAAND,CAAiB6B,SAAjB7B,CAA2BjR,MAA3BiR,CAAkCK,CAAlCL,EAAqCK,CAAAA,CAAEvE,MAAFuE,EAArCL,CALZK;AAMA;;AACJ;AACIA,YAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAbJ;AAiBJ;;AAAA,aAAOE,CAAP;AAAOA,KA1BXiC,EA6BOA,CAAP;AAvCsB,GAAA,EAvd1BvC,EAigBAA,CAAAA,CAAW0C,OAAX1C,GAAqB,YAAA;AAEjB,aAAS0C,CAAT,CAAiBlV,CAAjB,EAAiBA;AAGb,UAFA6B,KAAKsT,KAALtT,GAAKsT,EAALtT,EACAA,KAAKmT,IAALnT,GAAKmT,EADLnT,EAEI7B,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,gBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AAgDR;;AAAA,WA3CAkV,CAAAA,CAAQnT,SAARmT,CAAkBpJ,IAAlBoJ,GAAyB,EAAzBA,EACAA,CAAAA,CAAQnT,SAARmT,CAAkBE,EAAlBF,GAAuB,EADvBA,EAEAA,CAAAA,CAAQnT,SAARmT,CAAkBC,KAAlBD,GAA0B5C,KAAAA,CAAMjJ,UAFhC6L,EAGAA,CAAAA,CAAQnT,SAARmT,CAAkBG,MAAlBH,GAA2B,EAH3BA,EAIAA,CAAAA,CAAQnT,SAARmT,CAAkBF,IAAlBE,GAAyB5C,KAAAA,CAAM/I,WAJ/B2L,EAMAA,CAAAA,CAAQ5T,MAAR4T,GAAiB,UAAgBtC,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC1BD,MAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,WADA,IAAiFqC,CAAjF,EAAI1T,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiB2C,OAArB,EACjD,EAAOtC,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,YAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,gBAAQ7R,CAAAA,KAAM,CAAd;AACA,eAAK,CAAL;AACI+R,YAAAA,CAAAA,CAAEhH,IAAFgH,GAASF,CAAAA,CAAE7S,MAAF6S,EAATE;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAEsC,EAAFtC,GAAOF,CAAAA,CAAE7S,MAAF6S,EAAPE;AACA;;AACJ,eAAK,CAAL;AACUA,YAAAA,CAAAA,CAAEqC,KAAFrC,IAAWA,CAAAA,CAAEqC,KAAFrC,CAAQ1T,MAAnB0T,KACFA,CAAAA,CAAEqC,KAAFrC,GAAEqC,EADArC,GAENA,CAAAA,CAAEqC,KAAFrC,CAAQ7R,IAAR6R,CAAaF,CAAAA,CAAE7S,MAAF6S,EAAbE,CAFMA;AAGN;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAEuC,MAAFvC,GAAWF,CAAAA,CAAE7S,MAAF6S,EAAXE;AACA;;AACJ,eAAK,CAAL;AACIF,YAAAA,CAAAA,CAAElC,IAAFkC,GAAS5P,GAAT4P,IACIE,CAAAA,CAAEkC,IAAFlC,KAAWR,KAAAA,CAAM/I,WAAjBuJ,KACAA,CAAAA,CAAEkC,IAAFlC,GAAEkC,EADFlC,CADJF,EAGAqC,CAAAA,GAAIrC,CAAAA,CAAE7S,MAAF6S,EAHJA,EAIAA,CAAAA,CAAE5P,GAAF4P,EAJAA,EAKAE,CAAAA,CAAEkC,IAAFlC,CAAOmC,CAAPnC,IAAYP,KAAAA,CAAMC,UAAND,CAAiB6B,SAAjB7B,CAA2BjR,MAA3BiR,CAAkCK,CAAlCL,EAAqCK,CAAAA,CAAEvE,MAAFuE,EAArCL,CALZK;AAMA;;AACJ;AACIA,YAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAxBJ;AA4BJ;;AAAA,aAAOE,CAAP;AAAOA,KAxCXoC,EA2COA,CAAP;AAtDiB,GAAA,EAjgBrB1C,EA0jBAA,CAAAA,CAAW8C,UAAX9C,GAAwB,YAAA;AAEpB,aAAS8C,CAAT,CAAoBtV,CAApB,EAAoBA;AAEhB,UADA6B,KAAK0T,YAAL1T,GAAK0T,EAAL1T,EACI7B,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,gBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AAwCR;;AAAA,WAnCAsV,CAAAA,CAAWvT,SAAXuT,CAAqBE,QAArBF,GAAgC,CAAhCA,EACAA,CAAAA,CAAWvT,SAAXuT,CAAqBG,WAArBH,GAAmC,CADnCA,EAEAA,CAAAA,CAAWvT,SAAXuT,CAAqBC,YAArBD,GAAoChD,KAAAA,CAAMjJ,UAF1CiM,EAIAA,CAAAA,CAAWhU,MAAXgU,GAAoB,UAAgB1C,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC7BD,MAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,WADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiB+C,UAArB,EACjD,EAAO1C,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,YAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,gBAAQ7R,CAAAA,KAAM,CAAd;AACA,eAAK,CAAL;AACI+R,YAAAA,CAAAA,CAAE0C,QAAF1C,GAAaF,CAAAA,CAAEtE,KAAFsE,EAAbE;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAE2C,WAAF3C,GAAgBF,CAAAA,CAAEtE,KAAFsE,EAAhBE;AACA;;AACJ,eAAK,CAAL;AAGI,gBAFMA,CAAAA,CAAEyC,YAAFzC,IAAkBA,CAAAA,CAAEyC,YAAFzC,CAAe1T,MAAjC0T,KACFA,CAAAA,CAAEyC,YAAFzC,GAAEyC,EADAzC,GAEU,MAAP,IAAJ/R,CAAW,CAAhB,EAEI,KADA,IAAI2F,CAAAA,GAAKkM,CAAAA,CAAEvE,MAAFuE,KAAaA,CAAAA,CAAE5P,GACxB,EAAO4P,CAAAA,CAAE5P,GAAF4P,GAAQlM,CAAf;AACIoM,cAAAA,CAAAA,CAAEyC,YAAFzC,CAAe7R,IAAf6R,CAAoBF,CAAAA,CAAEtE,KAAFsE,EAApBE;AADJ,aAFJ,MAKIA,CAAAA,CAAEyC,YAAFzC,CAAe7R,IAAf6R,CAAoBF,CAAAA,CAAEtE,KAAFsE,EAApBE;AACJ;;AACJ;AACIF,YAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAlBJ;AAsBJ;;AAAA,aAAOE,CAAP;AAAOA,KAhCXwC,EAmCOA,CAAP;AA7CoB,GAAA,EA1jBxB9C,EA0mBAA,CAAAA,CAAWkD,QAAXlD,GAAsB,YAAA;AAElB,aAASkD,CAAT,CAAkB1V,CAAlB,EAAkBA;AAEd,UADA6B,KAAK+H,IAAL/H,GAAK+H,EAAL/H,EACI7B,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,gBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AAmCR;;AAAA,WA9BA0V,CAAAA,CAAS3T,SAAT2T,CAAmB9L,IAAnB8L,GAA0BpD,KAAAA,CAAMjJ,UAAhCqM,EACAA,CAAAA,CAAS3T,SAAT2T,CAAmB/L,QAAnB+L,GAA8B,IAD9BA,EAEAA,CAAAA,CAAS3T,SAAT2T,CAAmBC,OAAnBD,GAA6B,IAF7BA,EAIAA,CAAAA,CAASpU,MAAToU,GAAkB,UAAgB9C,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC3BD,MAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,WADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiBmD,QAArB,EACjD,EAAO9C,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,YAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,gBAAQ7R,CAAAA,KAAM,CAAd;AACA,eAAK,CAAL;AACU+R,YAAAA,CAAAA,CAAElJ,IAAFkJ,IAAUA,CAAAA,CAAElJ,IAAFkJ,CAAO1T,MAAjB0T,KACFA,CAAAA,CAAElJ,IAAFkJ,GAAElJ,EADAkJ,GAENA,CAAAA,CAAElJ,IAAFkJ,CAAO7R,IAAP6R,CAAYP,KAAAA,CAAMC,UAAND,CAAiB2C,OAAjB3C,CAAyBjR,MAAzBiR,CAAgCK,CAAhCL,EAAmCK,CAAAA,CAAEvE,MAAFuE,EAAnCL,CAAZO,CAFMA;AAGN;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAEnJ,QAAFmJ,GAAaP,KAAAA,CAAMC,UAAND,CAAiB+C,UAAjB/C,CAA4BjR,MAA5BiR,CAAmCK,CAAnCL,EAAsCK,CAAAA,CAAEvE,MAAFuE,EAAtCL,CAAbO;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAE6C,OAAF7C,GAAYP,KAAAA,CAAMC,UAAND,CAAiBqD,kBAAjBrD,CAAoCjR,MAApCiR,CAA2CK,CAA3CL,EAA8CK,CAAAA,CAAEvE,MAAFuE,EAA9CL,CAAZO;AACA;;AACJ;AACIF,YAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAbJ;AAiBJ;;AAAA,aAAOE,CAAP;AAAOA,KA3BX4C,EA8BOA,CAAP;AAxCkB,GAAA,EA1mBtBlD,EAqpBAA,CAAAA,CAAWqD,aAAXrD,GAA2B,YAAA;AAEvB,aAASqD,CAAT,CAAuB7V,CAAvB,EAAuBA;AACnB,UAAIA,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,gBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AAWR;;AAAA,QAAI6U,CAAJ;AA8NA,WApOAgB,CAAAA,CAAc9T,SAAd8T,CAAwBC,QAAxBD,GAAmC,IAAnCA,EACAA,CAAAA,CAAc9T,SAAd8T,CAAwBE,SAAxBF,GAAoC,IADpCA,EAEAA,CAAAA,CAAc9T,SAAd8T,CAAwBG,SAAxBH,GAAoC,IAFpCA,EAGAA,CAAAA,CAAc9T,SAAd8T,CAAwBI,SAAxBJ,GAAoC,IAHpCA,EAIAA,CAAAA,CAAc9T,SAAd8T,CAAwBK,OAAxBL,GAAkC,IAJlCA,EAQA3P,MAAAA,CAAOgG,cAAPhG,CAAsB2P,CAAAA,CAAc9T,SAApCmE,EAA+C,MAA/CA,EAA+C;AAC3CiG,MAAAA,GAAAA,EAAKmG,KAAAA,CAAM5F,WAAN4F,CAAkBuC,CAAAA,GAAAA,CAAgB,UAAhBA,EAA4B,WAA5BA,EAAyC,WAAzCA,EAAsD,WAAtDA,EAAmE,SAAnEA,CAAlBvC,CADsC;AAE3ClD,MAAAA,GAAAA,EAAKkD,KAAAA,CAAMzF,WAANyF,CAAkBuC,CAAlBvC;AAFsC,KAA/CpM,CARA2P,EAaAA,CAAAA,CAAcvU,MAAduU,GAAuB,UAAgBjD,CAAhB,EAAmBC,CAAnB,EAAmBA;AAChCD,MAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,WADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiBsD,aAArB,EACjD,EAAOjD,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,YAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,gBAAQ7R,CAAAA,KAAM,CAAd;AACA,eAAK,CAAL;AACI+R,YAAAA,CAAAA,CAAEgD,QAAFhD,GAAaP,KAAAA,CAAMC,UAAND,CAAiBsD,aAAjBtD,CAA+B4D,QAA/B5D,CAAwCjR,MAAxCiR,CAA+CK,CAA/CL,EAAkDK,CAAAA,CAAEvE,MAAFuE,EAAlDL,CAAbO;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAEiD,SAAFjD,GAAcP,KAAAA,CAAMC,UAAND,CAAiBsD,aAAjBtD,CAA+B6D,SAA/B7D,CAAyCjR,MAAzCiR,CAAgDK,CAAhDL,EAAmDK,CAAAA,CAAEvE,MAAFuE,EAAnDL,CAAdO;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAEkD,SAAFlD,GAAcP,KAAAA,CAAMC,UAAND,CAAiBsD,aAAjBtD,CAA+B8D,SAA/B9D,CAAyCjR,MAAzCiR,CAAgDK,CAAhDL,EAAmDK,CAAAA,CAAEvE,MAAFuE,EAAnDL,CAAdO;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAEmD,SAAFnD,GAAcP,KAAAA,CAAMC,UAAND,CAAiBsD,aAAjBtD,CAA+B+D,SAA/B/D,CAAyCjR,MAAzCiR,CAAgDK,CAAhDL,EAAmDK,CAAAA,CAAEvE,MAAFuE,EAAnDL,CAAdO;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAEoD,OAAFpD,GAAYP,KAAAA,CAAMC,UAAND,CAAiBsD,aAAjBtD,CAA+BgE,OAA/BhE,CAAuCjR,MAAvCiR,CAA8CK,CAA9CL,EAAiDK,CAAAA,CAAEvE,MAAFuE,EAAjDL,CAAZO;AACA;;AACJ;AACIF,YAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAjBJ;AAqBJ;;AAAA,aAAOE,CAAP;AAAOA,KAxCX+C,EA2CAA,CAAAA,CAAcM,QAAdN,GAAyB,YAAA;AAErB,eAASM,CAAT,CAAkBnW,CAAlB,EAAkBA;AAEd,YADA6B,KAAK4F,KAAL5F,GAAK4F,EAAL5F,EACI7B,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,kBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AA2BR;;AAAA,aAtBAmW,CAAAA,CAASpU,SAAToU,CAAmB1O,KAAnB0O,GAA2B7D,KAAAA,CAAMjJ,UAAjC8M,EAEAA,CAAAA,CAAS7U,MAAT6U,GAAkB,UAAgBvD,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC3BD,QAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,aADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiBsD,aAAjBtD,CAA+B4D,QAAnC,EACjD,EAAOvD,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,cAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,kBAAQ7R,CAAAA,KAAM,CAAd;AACA,iBAAK,CAAL;AACU+R,cAAAA,CAAAA,CAAErL,KAAFqL,IAAWA,CAAAA,CAAErL,KAAFqL,CAAQ1T,MAAnB0T,KACFA,CAAAA,CAAErL,KAAFqL,GAAErL,EADAqL,GAENA,CAAAA,CAAErL,KAAFqL,CAAQ7R,IAAR6R,CAAaF,CAAAA,CAAE7S,MAAF6S,EAAbE,CAFMA;AAGN;;AACJ;AACIF,cAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAPJ;AAWJ;;AAAA,eAAOE,CAAP;AAAOA,OAnBXqD,EAsBOA,CAAP;AAhCqB,KAAA,EA3CzBN,EA8EAA,CAAAA,CAAcO,SAAdP,GAA0B,YAAA;AAEtB,eAASO,CAAT,CAAmBpW,CAAnB,EAAmBA;AAEf,YADA6B,KAAK4F,KAAL5F,GAAK4F,EAAL5F,EACI7B,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,kBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AA2BR;;AAAA,aAtBAoW,CAAAA,CAAUrU,SAAVqU,CAAoB3O,KAApB2O,GAA4B9D,KAAAA,CAAMjJ,UAAlC+M,EAEAA,CAAAA,CAAU9U,MAAV8U,GAAmB,UAAgBxD,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC5BD,QAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,aADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiBsD,aAAjBtD,CAA+B6D,SAAnC,EACjD,EAAOxD,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,cAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,kBAAQ7R,CAAAA,KAAM,CAAd;AACA,iBAAK,CAAL;AACU+R,cAAAA,CAAAA,CAAErL,KAAFqL,IAAWA,CAAAA,CAAErL,KAAFqL,CAAQ1T,MAAnB0T,KACFA,CAAAA,CAAErL,KAAFqL,GAAErL,EADAqL,GAENA,CAAAA,CAAErL,KAAFqL,CAAQ7R,IAAR6R,CAAaF,CAAAA,CAAE3F,KAAF2F,EAAbE,CAFMA;AAGN;;AACJ;AACIF,cAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAPJ;AAWJ;;AAAA,eAAOE,CAAP;AAAOA,OAnBXsD,EAsBOA,CAAP;AAhCsB,KAAA,EA9E1BP,EAiHAA,CAAAA,CAAcQ,SAAdR,GAA0B,YAAA;AAEtB,eAASQ,CAAT,CAAmBrW,CAAnB,EAAmBA;AAEf,YADA6B,KAAK4F,KAAL5F,GAAK4F,EAAL5F,EACI7B,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,kBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AAgCR;;AAAA,aA3BAqW,CAAAA,CAAUtU,SAAVsU,CAAoB5O,KAApB4O,GAA4B/D,KAAAA,CAAMjJ,UAAlCgN,EAEAA,CAAAA,CAAU/U,MAAV+U,GAAmB,UAAgBzD,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC5BD,QAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,aADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiBsD,aAAjBtD,CAA+B8D,SAAnC,EACjD,EAAOzD,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,cAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,kBAAQ7R,CAAAA,KAAM,CAAd;AACA,iBAAK,CAAL;AAGI,kBAFM+R,CAAAA,CAAErL,KAAFqL,IAAWA,CAAAA,CAAErL,KAAFqL,CAAQ1T,MAAnB0T,KACFA,CAAAA,CAAErL,KAAFqL,GAAErL,EADAqL,GAEU,MAAP,IAAJ/R,CAAW,CAAhB,EAEI,KADA,IAAI2F,CAAAA,GAAKkM,CAAAA,CAAEvE,MAAFuE,KAAaA,CAAAA,CAAE5P,GACxB,EAAO4P,CAAAA,CAAE5P,GAAF4P,GAAQlM,CAAf;AACIoM,gBAAAA,CAAAA,CAAErL,KAAFqL,CAAQ7R,IAAR6R,CAAaF,CAAAA,CAAElE,KAAFkE,EAAbE;AADJ,eAFJ,MAKIA,CAAAA,CAAErL,KAAFqL,CAAQ7R,IAAR6R,CAAaF,CAAAA,CAAElE,KAAFkE,EAAbE;AACJ;;AACJ;AACIF,cAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAZJ;AAgBJ;;AAAA,eAAOE,CAAP;AAAOA,OAxBXuD,EA2BOA,CAAP;AArCsB,KAAA,EAjH1BR,EAyJAA,CAAAA,CAAcS,SAAdT,GAA0B,YAAA;AAEtB,eAASS,CAAT,CAAmBtW,CAAnB,EAAmBA;AAEf,YADA6B,KAAK4F,KAAL5F,GAAK4F,EAAL5F,EACI7B,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,kBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AAgCR;;AAAA,aA3BAsW,CAAAA,CAAUvU,SAAVuU,CAAoB7O,KAApB6O,GAA4BhE,KAAAA,CAAMjJ,UAAlCiN,EAEAA,CAAAA,CAAUhV,MAAVgV,GAAmB,UAAgB1D,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC5BD,QAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,aADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiBsD,aAAjBtD,CAA+B+D,SAAnC,EACjD,EAAO1D,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,cAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,kBAAQ7R,CAAAA,KAAM,CAAd;AACA,iBAAK,CAAL;AAGI,kBAFM+R,CAAAA,CAAErL,KAAFqL,IAAWA,CAAAA,CAAErL,KAAFqL,CAAQ1T,MAAnB0T,KACFA,CAAAA,CAAErL,KAAFqL,GAAErL,EADAqL,GAEU,MAAP,IAAJ/R,CAAW,CAAhB,EAEI,KADA,IAAI2F,CAAAA,GAAKkM,CAAAA,CAAEvE,MAAFuE,KAAaA,CAAAA,CAAE5P,GACxB,EAAO4P,CAAAA,CAAE5P,GAAF4P,GAAQlM,CAAf;AACIoM,gBAAAA,CAAAA,CAAErL,KAAFqL,CAAQ7R,IAAR6R,CAAaF,CAAAA,CAAE7J,KAAF6J,EAAbE;AADJ,eAFJ,MAKIA,CAAAA,CAAErL,KAAFqL,CAAQ7R,IAAR6R,CAAaF,CAAAA,CAAE7J,KAAF6J,EAAbE;AACJ;;AACJ;AACIF,cAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAZJ;AAgBJ;;AAAA,eAAOE,CAAP;AAAOA,OAxBXwD,EA2BOA,CAAP;AArCsB,KAAA,EAzJ1BT,EAiMAA,CAAAA,CAAcU,OAAdV,GAAwB,YAAA;AAEpB,eAASU,CAAT,CAAiBvW,CAAjB,EAAiBA;AAEb,YADA6B,KAAK4F,KAAL5F,GAAK4F,EAAL5F,EACI7B,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,kBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AA2BR;;AAAA,aAtBAuW,CAAAA,CAAQxU,SAARwU,CAAkB9O,KAAlB8O,GAA0BjE,KAAAA,CAAMjJ,UAAhCkN,EAEAA,CAAAA,CAAQjV,MAARiV,GAAiB,UAAgB3D,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC1BD,QAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,aADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiBsD,aAAjBtD,CAA+BgE,OAAnC,EACjD,EAAO3D,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,cAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,kBAAQ7R,CAAAA,KAAM,CAAd;AACA,iBAAK,CAAL;AACU+R,cAAAA,CAAAA,CAAErL,KAAFqL,IAAWA,CAAAA,CAAErL,KAAFqL,CAAQ1T,MAAnB0T,KACFA,CAAAA,CAAErL,KAAFqL,GAAErL,EADAqL,GAENA,CAAAA,CAAErL,KAAFqL,CAAQ7R,IAAR6R,CAAaP,KAAAA,CAAMC,UAAND,CAAiBE,GAAjBF,CAAqBjR,MAArBiR,CAA4BK,CAA5BL,EAA+BK,CAAAA,CAAEvE,MAAFuE,EAA/BL,CAAbO,CAFMA;AAGN;;AACJ;AACIF,cAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAPJ;AAWJ;;AAAA,eAAOE,CAAP;AAAOA,OAnBXyD,EAsBOA,CAAP;AAhCoB,KAAA,EAjMxBV,EAoOOA,CAAP;AA7OuB,GAAA,EArpB3BrD,EAq4BAA,CAAAA,CAAWgE,QAAXhE,GAAsB,YAAA;AAElB,aAASgE,CAAT,CAAkBxW,CAAlB,EAAkBA;AACd,UAAIA,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,gBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AAiD2B;;AAAA,QAC3BgT,CAD2B,EACVC,CADU;AAQnC,WApDAuD,CAAAA,CAASzU,SAATyU,CAAmBC,kBAAnBD,GAAwC,EAAxCA,EACAA,CAAAA,CAASzU,SAATyU,CAAmBE,cAAnBF,GAAoC,EADpCA,EAEAA,CAAAA,CAASzU,SAATyU,CAAmBG,aAAnBH,GAAmC,EAFnCA,EAGAA,CAAAA,CAASzU,SAATyU,CAAmBI,SAAnBJ,GAA+B,CAH/BA,EAIAA,CAAAA,CAASzU,SAATyU,CAAmBK,OAAnBL,GAAmBK,CAAU,CAJ7BL,EAKAA,CAAAA,CAASzU,SAATyU,CAAmBM,yBAAnBN,GAA+C,CAL/CA,EAMAA,CAAAA,CAASzU,SAATyU,CAAmBO,OAAnBP,GAA6B,CAN7BA,EAQAA,CAAAA,CAASlV,MAATkV,GAAkB,UAAgB5D,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC3BD,MAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,WADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiBiE,QAArB,EACjD,EAAO5D,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,YAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,gBAAQ7R,CAAAA,KAAM,CAAd;AACA,eAAK,CAAL;AACI+R,YAAAA,CAAAA,CAAE2D,kBAAF3D,GAAuBF,CAAAA,CAAE7S,MAAF6S,EAAvBE;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAE4D,cAAF5D,GAAmBF,CAAAA,CAAE7S,MAAF6S,EAAnBE;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAE6D,aAAF7D,GAAkBF,CAAAA,CAAE7S,MAAF6S,EAAlBE;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAE8D,SAAF9D,GAAcF,CAAAA,CAAEtE,KAAFsE,EAAdE;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAE+D,OAAF/D,GAAYF,CAAAA,CAAEhE,IAAFgE,EAAZE;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAEgE,yBAAFhE,GAA8BF,CAAAA,CAAE7J,KAAF6J,EAA9BE;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAEiE,OAAFjE,GAAYF,CAAAA,CAAEtE,KAAFsE,EAAZE;AACA;;AACJ;AACIF,YAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAvBJ;AA2BJ;;AAAA,aAAOE,CAAP;AAAOA,KAzCX0D,EA4CAA,CAAAA,CAASQ,uBAATR,IACQxD,CAAAA,GAAAA,EAAAA,EAAAA,CAAiBC,CAAAA,GAAS/M,MAAAA,CAAOoG,MAAPpG,CAAc8M,CAAd9M,CAA1B8M,EACGA,CAAAA,CAAW,CAAXA,CAAAA,GAAgB,QADnBA,IAC+B,CAD/BA,EAEJC,CAAAA,CAAOD,CAAAA,CAAW,CAAXA,CAAAA,GAAgB,IAAvBC,CAAAA,GAA+B,CAF3BD,EAGJC,CAAAA,CAAOD,CAAAA,CAAW,CAAXA,CAAAA,GAAgB,IAAvBC,CAAAA,GAA+B,CAH3BD,EAIGC,CALXuD,CA5CAA,EAoDOA,CAAP;AA7DkB,GAAA,EAr4BtBhE,EAq8BAA,CAAAA,CAAWyE,UAAXzE,GAAwB,YAAA;AAEpB,aAASyE,CAAT,CAAoBjX,CAApB,EAAoBA;AAChB,UAAIA,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,gBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AAUR;;AAAA,QAAI6U,CAAJ;AA0EA,WA/EAoC,CAAAA,CAAWlV,SAAXkV,CAAqBnL,IAArBmL,GAA4B,EAA5BA,EACAA,CAAAA,CAAWlV,SAAXkV,CAAqBC,SAArBD,GAAiC,IADjCA,EAEAA,CAAAA,CAAWlV,SAAXkV,CAAqBjD,KAArBiD,GAA6B,CAF7BA,EAGAA,CAAAA,CAAWlV,SAAXkV,CAAqBhD,WAArBgD,GAAmC,IAHnCA,EAOA/Q,MAAAA,CAAOgG,cAAPhG,CAAsB+Q,CAAAA,CAAWlV,SAAjCmE,EAA4C,UAA5CA,EAA4C;AACxCiG,MAAAA,GAAAA,EAAKmG,KAAAA,CAAM5F,WAAN4F,CAAkBuC,CAAAA,GAAAA,CAAgB,MAAhBA,EAAwB,WAAxBA,CAAlBvC,CADmC;AAExClD,MAAAA,GAAAA,EAAKkD,KAAAA,CAAMzF,WAANyF,CAAkBuC,CAAlBvC;AAFmC,KAA5CpM,CAPA+Q,EAYAA,CAAAA,CAAW3V,MAAX2V,GAAoB,UAAgBrE,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC7BD,MAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,WADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiB0E,UAArB,EACjD,EAAOrE,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,YAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,gBAAQ7R,CAAAA,KAAM,CAAd;AACA,eAAK,CAAL;AACI+R,YAAAA,CAAAA,CAAEhH,IAAFgH,GAASF,CAAAA,CAAE7S,MAAF6S,EAATE;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAEoE,SAAFpE,GAAcP,KAAAA,CAAMC,UAAND,CAAiB0E,UAAjB1E,CAA4B4E,SAA5B5E,CAAsCjR,MAAtCiR,CAA6CK,CAA7CL,EAAgDK,CAAAA,CAAEvE,MAAFuE,EAAhDL,CAAdO;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAEkB,KAAFlB,GAAUF,CAAAA,CAAEtE,KAAFsE,EAAVE;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAEmB,WAAFnB,GAAgBP,KAAAA,CAAMC,UAAND,CAAiBW,WAAjBX,CAA6BjR,MAA7BiR,CAAoCK,CAApCL,EAAuCK,CAAAA,CAAEvE,MAAFuE,EAAvCL,CAAhBO;AACA;;AACJ;AACIF,YAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAdJ;AAkBJ;;AAAA,aAAOE,CAAP;AAAOA,KApCXmE,EAuCAA,CAAAA,CAAWE,SAAXF,GAAuB,YAAA;AAEnB,eAASE,CAAT,CAAmBnX,CAAnB,EAAmBA;AACf,YAAIA,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,kBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AAiCR;;AAAA,aA5BAmX,CAAAA,CAAUpV,SAAVoV,CAAoBC,gBAApBD,GAAuC,EAAvCA,EACAA,CAAAA,CAAUpV,SAAVoV,CAAoBE,iBAApBF,GAAwC,EADxCA,EAEAA,CAAAA,CAAUpV,SAAVoV,CAAoBG,oBAApBH,GAA2C,EAF3CA,EAIAA,CAAAA,CAAU7V,MAAV6V,GAAmB,UAAgBvE,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC5BD,QAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,aADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiB0E,UAAjB1E,CAA4B4E,SAAhC,EACjD,EAAOvE,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,cAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,kBAAQ7R,CAAAA,KAAM,CAAd;AACA,iBAAK,CAAL;AACI+R,cAAAA,CAAAA,CAAEsE,gBAAFtE,GAAqBF,CAAAA,CAAE7S,MAAF6S,EAArBE;AACA;;AACJ,iBAAK,CAAL;AACIA,cAAAA,CAAAA,CAAEuE,iBAAFvE,GAAsBF,CAAAA,CAAE7S,MAAF6S,EAAtBE;AACA;;AACJ,iBAAK,CAAL;AACIA,cAAAA,CAAAA,CAAEwE,oBAAFxE,GAAyBF,CAAAA,CAAE7S,MAAF6S,EAAzBE;AACA;;AACJ;AACIF,cAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAXJ;AAeJ;;AAAA,eAAOE,CAAP;AAAOA,OAzBXqE,EA4BOA,CAAP;AArCmB,KAAA,EAvCvBF,EA+EOA,CAAP;AAxFoB,GAAA,EAr8BxBzE,EAgiCAA,CAAAA,CAAW+E,YAAX/E,GAA0B,YAAA;AAEtB,aAAS+E,CAAT,CAAsBvX,CAAtB,EAAsBA;AAGlB,UAFA6B,KAAK2V,MAAL3V,GAAK2V,EAAL3V,EACAA,KAAK4V,OAAL5V,GAAK4V,EADL5V,EAEI7B,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,gBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AA2CR;;AAAA,WAtCAuX,CAAAA,CAAaxV,SAAbwV,CAAuBC,MAAvBD,GAAgCjF,KAAAA,CAAM/I,WAAtCgO,EACAA,CAAAA,CAAaxV,SAAbwV,CAAuBE,OAAvBF,GAAiCjF,KAAAA,CAAM/I,WADvCgO,EAEAA,CAAAA,CAAaxV,SAAbwV,CAAuBG,UAAvBH,GAAoC,EAFpCA,EAIAA,CAAAA,CAAajW,MAAbiW,GAAsB,UAAgB3E,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC/BD,MAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,WADA,IAAsFqC,CAAtF,EAAI1T,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiBgF,YAArB,EACjD,EAAO3E,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,YAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,gBAAQ7R,CAAAA,KAAM,CAAd;AACA,eAAK,CAAL;AACI6R,YAAAA,CAAAA,CAAElC,IAAFkC,GAAS5P,GAAT4P,IACIE,CAAAA,CAAE0E,MAAF1E,KAAaR,KAAAA,CAAM/I,WAAnBuJ,KACAA,CAAAA,CAAE0E,MAAF1E,GAAE0E,EADF1E,CADJF,EAGAqC,CAAAA,GAAIrC,CAAAA,CAAE7S,MAAF6S,EAHJA,EAIAA,CAAAA,CAAE5P,GAAF4P,EAJAA,EAKAE,CAAAA,CAAE0E,MAAF1E,CAASmC,CAATnC,IAAcP,KAAAA,CAAMC,UAAND,CAAiB0E,UAAjB1E,CAA4BjR,MAA5BiR,CAAmCK,CAAnCL,EAAsCK,CAAAA,CAAEvE,MAAFuE,EAAtCL,CALdK;AAMA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAElC,IAAFkC,GAAS5P,GAAT4P,IACIE,CAAAA,CAAE2E,OAAF3E,KAAcR,KAAAA,CAAM/I,WAApBuJ,KACAA,CAAAA,CAAE2E,OAAF3E,GAAE2E,EADF3E,CADJF,EAGAqC,CAAAA,GAAIrC,CAAAA,CAAE7S,MAAF6S,EAHJA,EAIAA,CAAAA,CAAE5P,GAAF4P,EAJAA,EAKAE,CAAAA,CAAE2E,OAAF3E,CAAUmC,CAAVnC,IAAeP,KAAAA,CAAMC,UAAND,CAAiB0E,UAAjB1E,CAA4BjR,MAA5BiR,CAAmCK,CAAnCL,EAAsCK,CAAAA,CAAEvE,MAAFuE,EAAtCL,CALfK;AAMA;;AACJ,eAAK,CAAL;AACIE,YAAAA,CAAAA,CAAE4E,UAAF5E,GAAeF,CAAAA,CAAE7S,MAAF6S,EAAfE;AACA;;AACJ;AACIF,YAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AArBJ;AAyBJ;;AAAA,aAAOE,CAAP;AAAOA,KAnCXyE,EAsCOA,CAAP;AAjDsB,GAAA,EAhiC1B/E,EAolCAA,CAAAA,CAAWmF,YAAXnF,GAA0B,YAAA;AAEtB,aAASmF,CAAT,CAAsB3X,CAAtB,EAAsBA;AAClB,UAAIA,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,gBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AA6BR;;AAAA,WAxBA2X,CAAAA,CAAa5V,SAAb4V,CAAuBC,UAAvBD,GAAoC,IAApCA,EACAA,CAAAA,CAAa5V,SAAb4V,CAAuBE,QAAvBF,GAAkC,EADlCA,EAGAA,CAAAA,CAAarW,MAAbqW,GAAsB,UAAgB/E,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC/BD,MAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,WADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiBoF,YAArB,EACjD,EAAO/E,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,YAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,gBAAQ7R,CAAAA,KAAM,CAAd;AACA,eAAK,CAAL;AACI+R,YAAAA,CAAAA,CAAE8E,UAAF9E,GAAeP,KAAAA,CAAMC,UAAND,CAAiB0E,UAAjB1E,CAA4BjR,MAA5BiR,CAAmCK,CAAnCL,EAAsCK,CAAAA,CAAEvE,MAAFuE,EAAtCL,CAAfO;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAE+E,QAAF/E,GAAaF,CAAAA,CAAE7S,MAAF6S,EAAbE;AACA;;AACJ;AACIF,YAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AARJ;AAYJ;;AAAA,aAAOE,CAAP;AAAOA,KArBX6E,EAwBOA,CAAP;AAjCsB,GAAA,EAplC1BnF,EAwnCAA,CAAAA,CAAWsF,KAAXtF,GAAmB,YAAA;AAEf,aAASsF,CAAT,CAAe9X,CAAf,EAAeA;AAIX,UAHA6B,KAAKkW,QAALlW,GAAKkW,EAALlW,EACAA,KAAKmW,SAALnW,GAAKmW,EADLnW,EAEAA,KAAKmT,IAALnT,GAAKmT,EAFLnT,EAGI7B,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,gBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AA2NR;;AAAA,WAtNA8X,CAAAA,CAAM/V,SAAN+V,CAAgBhM,IAAhBgM,GAAuB,EAAvBA,EACAA,CAAAA,CAAM/V,SAAN+V,CAAgBC,QAAhBD,GAA2BxF,KAAAA,CAAMjJ,UADjCyO,EAEAA,CAAAA,CAAM/V,SAAN+V,CAAgBE,SAAhBF,GAA4BxF,KAAAA,CAAMjJ,UAFlCyO,EAGAA,CAAAA,CAAM/V,SAAN+V,CAAgB9C,IAAhB8C,GAAuBxF,KAAAA,CAAMjJ,UAH7ByO,EAIAA,CAAAA,CAAM/V,SAAN+V,CAAgBG,WAAhBH,GAA8B,IAJ9BA,EAKAA,CAAAA,CAAM/V,SAAN+V,CAAgBI,OAAhBJ,GAA0B,EAL1BA,EAMAA,CAAAA,CAAM/V,SAAN+V,CAAgBK,WAAhBL,GAA8B,EAN9BA,EAOAA,CAAAA,CAAM/V,SAAN+V,CAAgBM,aAAhBN,GAAgBM,CAAgB,CAPhCN,EAQAA,CAAAA,CAAM/V,SAAN+V,CAAgBO,WAAhBP,GAAgBO,CAAc,CAR9BP,EASAA,CAAAA,CAAM/V,SAAN+V,CAAgBQ,UAAhBR,GAAgBQ,CAAa,CAT7BR,EAUAA,CAAAA,CAAM/V,SAAN+V,CAAgBS,wBAAhBT,GAAgBS,CAA2B,CAV3CT,EAYAA,CAAAA,CAAMxW,MAANwW,GAAe,UAAgBlF,CAAhB,EAAmBC,CAAnB,EAAmBA;AACxBD,MAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,WADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiBuF,KAArB,EACjD,EAAOlF,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,YAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,gBAAQ7R,CAAAA,KAAM,CAAd;AACA,eAAK,CAAL;AACI+R,YAAAA,CAAAA,CAAEhH,IAAFgH,GAASF,CAAAA,CAAE7S,MAAF6S,EAATE;AACA;;AACJ,eAAK,CAAL;AACUA,YAAAA,CAAAA,CAAEiF,QAAFjF,IAAcA,CAAAA,CAAEiF,QAAFjF,CAAW1T,MAAzB0T,KACFA,CAAAA,CAAEiF,QAAFjF,GAAEiF,EADAjF,GAENA,CAAAA,CAAEiF,QAAFjF,CAAW7R,IAAX6R,CAAgBP,KAAAA,CAAMC,UAAND,CAAiBuF,KAAjBvF,CAAuBiG,MAAvBjG,CAA8BjR,MAA9BiR,CAAqCK,CAArCL,EAAwCK,CAAAA,CAAEvE,MAAFuE,EAAxCL,CAAhBO,CAFMA;AAGN;;AACJ,eAAK,CAAL;AACUA,YAAAA,CAAAA,CAAEkF,SAAFlF,IAAeA,CAAAA,CAAEkF,SAAFlF,CAAY1T,MAA3B0T,KACFA,CAAAA,CAAEkF,SAAFlF,GAAEkF,EADAlF,GAENA,CAAAA,CAAEkF,SAAFlF,CAAY7R,IAAZ6R,CAAiBP,KAAAA,CAAMC,UAAND,CAAiBuF,KAAjBvF,CAAuBiG,MAAvBjG,CAA8BjR,MAA9BiR,CAAqCK,CAArCL,EAAwCK,CAAAA,CAAEvE,MAAFuE,EAAxCL,CAAjBO,CAFMA;AAGN;;AACJ,eAAK,CAAL;AACUA,YAAAA,CAAAA,CAAEkC,IAAFlC,IAAUA,CAAAA,CAAEkC,IAAFlC,CAAO1T,MAAjB0T,KACFA,CAAAA,CAAEkC,IAAFlC,GAAEkC,EADAlC,GAENA,CAAAA,CAAEkC,IAAFlC,CAAO7R,IAAP6R,CAAYP,KAAAA,CAAMC,UAAND,CAAiBuF,KAAjBvF,CAAuBkG,OAAvBlG,CAA+BjR,MAA/BiR,CAAsCK,CAAtCL,EAAyCK,CAAAA,CAAEvE,MAAFuE,EAAzCL,CAAZO,CAFMA;AAGN;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAEmF,WAAFnF,GAAgBP,KAAAA,CAAMC,UAAND,CAAiBuF,KAAjBvF,CAAuBmG,aAAvBnG,CAAqCjR,MAArCiR,CAA4CK,CAA5CL,EAA+CK,CAAAA,CAAEvE,MAAFuE,EAA/CL,CAAhBO;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAEoF,OAAFpF,GAAYF,CAAAA,CAAE7S,MAAF6S,EAAZE;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAEqF,WAAFrF,GAAgBF,CAAAA,CAAE7S,MAAF6S,EAAhBE;AACA;;AACJ,eAAK,EAAL;AACIA,YAAAA,CAAAA,CAAEsF,aAAFtF,GAAkBF,CAAAA,CAAEhE,IAAFgE,EAAlBE;AACA;;AACJ,eAAK,EAAL;AACIA,YAAAA,CAAAA,CAAEuF,WAAFvF,GAAgBF,CAAAA,CAAEhE,IAAFgE,EAAhBE;AACA;;AACJ,eAAK,EAAL;AACIA,YAAAA,CAAAA,CAAEwF,UAAFxF,GAAeF,CAAAA,CAAEhE,IAAFgE,EAAfE;AACA;;AACJ,eAAK,EAAL;AACIA,YAAAA,CAAAA,CAAEyF,wBAAFzF,GAA6BF,CAAAA,CAAEhE,IAAFgE,EAA7BE;AACA;;AACJ;AACIF,YAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAzCJ;AA6CJ;;AAAA,aAAOE,CAAP;AAAOA,KA/DXgF,EAkEAA,CAAAA,CAAMU,MAANV,GAAe,YAAA;AAEX,eAASU,CAAT,CAAgBxY,CAAhB,EAAgBA;AACZ,YAAIA,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,kBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AAiDR;;AAAA,aA5CAwY,CAAAA,CAAOzW,SAAPyW,CAAiB1M,IAAjB0M,GAAwB,EAAxBA,EACAA,CAAAA,CAAOzW,SAAPyW,CAAiBL,WAAjBK,GAA+B,EAD/BA,EAEAA,CAAAA,CAAOzW,SAAPyW,CAAiBhE,IAAjBgE,GAAwB,CAFxBA,EAGAA,CAAAA,CAAOzW,SAAPyW,CAAiBG,QAAjBH,GAA4B,EAH5BA,EAIAA,CAAAA,CAAOzW,SAAPyW,CAAiBI,UAAjBJ,GAA8B,EAJ9BA,EAKAA,CAAAA,CAAOzW,SAAPyW,CAAiBK,YAAjBL,GAAgC,EALhCA,EAMAA,CAAAA,CAAOzW,SAAPyW,CAAiBM,KAAjBN,GAAiBM,CAAQ,CANzBN,EAQAA,CAAAA,CAAOlX,MAAPkX,GAAgB,UAAgB5F,CAAhB,EAAmBC,CAAnB,EAAmBA;AACzBD,QAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,aADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiBuF,KAAjBvF,CAAuBiG,MAA3B,EACjD,EAAO5F,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,cAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,kBAAQ7R,CAAAA,KAAM,CAAd;AACA,iBAAK,CAAL;AACI+R,cAAAA,CAAAA,CAAEhH,IAAFgH,GAASF,CAAAA,CAAE7S,MAAF6S,EAATE;AACA;;AACJ,iBAAK,CAAL;AACIA,cAAAA,CAAAA,CAAEqF,WAAFrF,GAAgBF,CAAAA,CAAE7S,MAAF6S,EAAhBE;AACA;;AACJ,iBAAK,CAAL;AACIA,cAAAA,CAAAA,CAAE0B,IAAF1B,GAASF,CAAAA,CAAEtE,KAAFsE,EAATE;AACA;;AACJ,iBAAK,CAAL;AACIA,cAAAA,CAAAA,CAAE6F,QAAF7F,GAAaF,CAAAA,CAAE7S,MAAF6S,EAAbE;AACA;;AACJ,iBAAK,CAAL;AACIA,cAAAA,CAAAA,CAAE8F,UAAF9F,GAAeF,CAAAA,CAAE7S,MAAF6S,EAAfE;AACA;;AACJ,iBAAK,CAAL;AACIA,cAAAA,CAAAA,CAAE+F,YAAF/F,GAAiBF,CAAAA,CAAE7S,MAAF6S,EAAjBE;AACA;;AACJ,iBAAK,EAAL;AACIA,cAAAA,CAAAA,CAAEgG,KAAFhG,GAAUF,CAAAA,CAAEhE,IAAFgE,EAAVE;AACA;;AACJ;AACIF,cAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAvBJ;AA2BJ;;AAAA,eAAOE,CAAP;AAAOA,OAzCX0F,EA4COA,CAAP;AArDW,KAAA,EAlEfV,EA0HAA,CAAAA,CAAMW,OAANX,GAAgB,YAAA;AAEZ,eAASW,CAAT,CAAiBzY,CAAjB,EAAiBA;AACb,YAAIA,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,kBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AAiDR;;AAAA,aA5CAyY,CAAAA,CAAQ1W,SAAR0W,CAAkB3M,IAAlB2M,GAAyB,EAAzBA,EACAA,CAAAA,CAAQ1W,SAAR0W,CAAkBjE,IAAlBiE,GAAyB,EADzBA,EAEAA,CAAAA,CAAQ1W,SAAR0W,CAAkBM,YAAlBN,GAAiC,IAFjCA,EAGAA,CAAAA,CAAQ1W,SAAR0W,CAAkBN,WAAlBM,GAAgC,EAHhCA,EAIAA,CAAAA,CAAQ1W,SAAR0W,CAAkBO,UAAlBP,GAAkBO,CAAa,CAJ/BP,EAKAA,CAAAA,CAAQ1W,SAAR0W,CAAkBQ,OAAlBR,GAA4BnG,KAAAA,CAAMzK,IAANyK,GAAaA,KAAAA,CAAMzK,IAANyK,CAAWlH,QAAXkH,CAAoB,CAApBA,EAAsB,CAAtBA,EAAsB,CAAE,CAAxBA,CAAbA,GAA8C,CAL1EmG,EAMAA,CAAAA,CAAQ1W,SAAR0W,CAAkBS,aAAlBT,GAAkC,IANlCA,EAQAA,CAAAA,CAAQnX,MAARmX,GAAiB,UAAgB7F,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC1BD,QAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,aADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiBuF,KAAjBvF,CAAuBkG,OAA3B,EACjD,EAAO7F,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,cAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,kBAAQ7R,CAAAA,KAAM,CAAd;AACA,iBAAK,CAAL;AACI+R,cAAAA,CAAAA,CAAEhH,IAAFgH,GAASF,CAAAA,CAAE7S,MAAF6S,EAATE;AACA;;AACJ,iBAAK,CAAL;AACIA,cAAAA,CAAAA,CAAE0B,IAAF1B,GAASF,CAAAA,CAAE7S,MAAF6S,EAATE;AACA;;AACJ,iBAAK,CAAL;AACIA,cAAAA,CAAAA,CAAEiG,YAAFjG,GAAiBP,KAAAA,CAAMC,UAAND,CAAiB6B,SAAjB7B,CAA2BjR,MAA3BiR,CAAkCK,CAAlCL,EAAqCK,CAAAA,CAAEvE,MAAFuE,EAArCL,CAAjBO;AACA;;AACJ,iBAAK,CAAL;AACIA,cAAAA,CAAAA,CAAEqF,WAAFrF,GAAgBF,CAAAA,CAAE7S,MAAF6S,EAAhBE;AACA;;AACJ,iBAAK,CAAL;AACIA,cAAAA,CAAAA,CAAEkG,UAAFlG,GAAeF,CAAAA,CAAEhE,IAAFgE,EAAfE;AACA;;AACJ,iBAAK,CAAL;AACIA,cAAAA,CAAAA,CAAEmG,OAAFnG,GAAYF,CAAAA,CAAElE,KAAFkE,EAAZE;AACA;;AACJ,iBAAK,CAAL;AACIA,cAAAA,CAAAA,CAAEoG,aAAFpG,GAAkBP,KAAAA,CAAMC,UAAND,CAAiB6B,SAAjB7B,CAA2BjR,MAA3BiR,CAAkCK,CAAlCL,EAAqCK,CAAAA,CAAEvE,MAAFuE,EAArCL,CAAlBO;AACA;;AACJ;AACIF,cAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAvBJ;AA2BJ;;AAAA,eAAOE,CAAP;AAAOA,OAzCX2F,EA4COA,CAAP;AArDY,KAAA,EA1HhBX,EAkLAA,CAAAA,CAAMY,aAANZ,GAAsB,YAAA;AAElB,eAASY,CAAT,CAAuB1Y,CAAvB,EAAuBA;AACnB,YAAIA,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,kBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AA6BR;;AAAA,aAxBA0Y,CAAAA,CAAc3W,SAAd2W,CAAwB3B,OAAxB2B,GAAkC,CAAlCA,EACAA,CAAAA,CAAc3W,SAAd2W,CAAwBS,WAAxBT,GAAsC,EADtCA,EAGAA,CAAAA,CAAcpX,MAAdoX,GAAuB,UAAgB9F,CAAhB,EAAmBC,CAAnB,EAAmBA;AAChCD,QAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,aADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiBuF,KAAjBvF,CAAuBmG,aAA3B,EACjD,EAAO9F,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,cAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,kBAAQ7R,CAAAA,KAAM,CAAd;AACA,iBAAK,CAAL;AACI+R,cAAAA,CAAAA,CAAEiE,OAAFjE,GAAYF,CAAAA,CAAEtE,KAAFsE,EAAZE;AACA;;AACJ,iBAAK,CAAL;AACIA,cAAAA,CAAAA,CAAEqG,WAAFrG,GAAgBF,CAAAA,CAAE7S,MAAF6S,EAAhBE;AACA;;AACJ;AACIF,cAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AARJ;AAYJ;;AAAA,eAAOE,CAAP;AAAOA,OArBX4F,EAwBOA,CAAP;AAjCkB,KAAA,EAlLtBZ,EAsNOA,CAAP;AAlOe,GAAA,EAxnCnBtF,EA61CAA,CAAAA,CAAW4G,MAAX5G,GAAoB,YAAA;AAEhB,aAAS4G,CAAT,CAAgBpZ,CAAhB,EAAgBA;AAEZ,UADA6B,KAAKuT,EAALvT,GAAKuT,EAALvT,EACI7B,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,gBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AA2BR;;AAAA,WAtBAoZ,CAAAA,CAAOrX,SAAPqX,CAAiBhE,EAAjBgE,GAAsB9G,KAAAA,CAAMjJ,UAA5B+P,EAEAA,CAAAA,CAAO9X,MAAP8X,GAAgB,UAAgBxG,CAAhB,EAAmBC,CAAnB,EAAmBA;AACzBD,MAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,WADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiB6G,MAArB,EACjD,EAAOxG,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,YAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,gBAAQ7R,CAAAA,KAAM,CAAd;AACA,eAAK,CAAL;AACU+R,YAAAA,CAAAA,CAAEsC,EAAFtC,IAAQA,CAAAA,CAAEsC,EAAFtC,CAAK1T,MAAb0T,KACFA,CAAAA,CAAEsC,EAAFtC,GAAEsC,EADAtC,GAENA,CAAAA,CAAEsC,EAAFtC,CAAK7R,IAAL6R,CAAUP,KAAAA,CAAMC,UAAND,CAAiBuF,KAAjBvF,CAAuBjR,MAAvBiR,CAA8BK,CAA9BL,EAAiCK,CAAAA,CAAEvE,MAAFuE,EAAjCL,CAAVO,CAFMA;AAGN;;AACJ;AACIF,YAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAPJ;AAWJ;;AAAA,aAAOE,CAAP;AAAOA,KAnBXsG,EAsBOA,CAAP;AAhCgB,GAAA,EA71CpB5G,EAg4CAA,CAAAA,CAAW6G,YAAX7G,GAA0B,YAAA;AAEtB,aAAS6G,CAAT,CAAsBrZ,CAAtB,EAAsBA;AAIlB,UAHA6B,KAAKyX,aAALzX,GAAKyX,EAALzX,EACAA,KAAK0X,YAAL1X,GAAK0X,EADL1X,EAEAA,KAAK2X,YAAL3X,GAAK2X,EAFL3X,EAGI7B,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,gBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AAgHR;;AAAA,WA3GAqZ,CAAAA,CAAatX,SAAbsX,CAAuBI,WAAvBJ,GAAqC,IAArCA,EACAA,CAAAA,CAAatX,SAAbsX,CAAuBK,QAAvBL,GAAkC,IADlCA,EAEAA,CAAAA,CAAatX,SAAbsX,CAAuBM,QAAvBN,GAAkC,IAFlCA,EAGAA,CAAAA,CAAatX,SAAbsX,CAAuBC,aAAvBD,GAAuC/G,KAAAA,CAAM/I,WAH7C8P,EAIAA,CAAAA,CAAatX,SAAbsX,CAAuBE,YAAvBF,GAAsC/G,KAAAA,CAAM/I,WAJ5C8P,EAKAA,CAAAA,CAAatX,SAAbsX,CAAuBG,YAAvBH,GAAsC/G,KAAAA,CAAMjJ,UAL5CgQ,EAOAA,CAAAA,CAAa/X,MAAb+X,GAAsB,UAAgBzG,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC/BD,MAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,WADA,IAAsFqC,CAAtF,EAAI1T,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiB8G,YAArB,EACjD,EAAOzG,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,YAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,gBAAQ7R,CAAAA,KAAM,CAAd;AACA,eAAK,CAAL;AACI+R,YAAAA,CAAAA,CAAE2G,WAAF3G,GAAgBP,KAAAA,CAAMC,UAAND,CAAiB8G,YAAjB9G,CAA8BqH,WAA9BrH,CAA0CjR,MAA1CiR,CAAiDK,CAAjDL,EAAoDK,CAAAA,CAAEvE,MAAFuE,EAApDL,CAAhBO;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAE4G,QAAF5G,GAAaP,KAAAA,CAAMC,UAAND,CAAiBmD,QAAjBnD,CAA0BjR,MAA1BiR,CAAiCK,CAAjCL,EAAoCK,CAAAA,CAAEvE,MAAFuE,EAApCL,CAAbO;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAE6G,QAAF7G,GAAaP,KAAAA,CAAMC,UAAND,CAAiBiE,QAAjBjE,CAA0BjR,MAA1BiR,CAAiCK,CAAjCL,EAAoCK,CAAAA,CAAEvE,MAAFuE,EAApCL,CAAbO;AACA;;AACJ,eAAK,CAAL;AACIF,YAAAA,CAAAA,CAAElC,IAAFkC,GAAS5P,GAAT4P,IACIE,CAAAA,CAAEwG,aAAFxG,KAAoBR,KAAAA,CAAM/I,WAA1BuJ,KACAA,CAAAA,CAAEwG,aAAFxG,GAAEwG,EADFxG,CADJF,EAGAqC,CAAAA,GAAIrC,CAAAA,CAAE7S,MAAF6S,EAHJA,EAIAA,CAAAA,CAAE5P,GAAF4P,EAJAA,EAKAE,CAAAA,CAAEwG,aAAFxG,CAAgBmC,CAAhBnC,IAAqBP,KAAAA,CAAMC,UAAND,CAAiBsD,aAAjBtD,CAA+BjR,MAA/BiR,CAAsCK,CAAtCL,EAAyCK,CAAAA,CAAEvE,MAAFuE,EAAzCL,CALrBK;AAMA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAElC,IAAFkC,GAAS5P,GAAT4P,IACIE,CAAAA,CAAEyG,YAAFzG,KAAmBR,KAAAA,CAAM/I,WAAzBuJ,KACAA,CAAAA,CAAEyG,YAAFzG,GAAEyG,EADFzG,CADJF,EAGAqC,CAAAA,GAAIrC,CAAAA,CAAE7S,MAAF6S,EAHJA,EAIAA,CAAAA,CAAE5P,GAAF4P,EAJAA,EAKAE,CAAAA,CAAEyG,YAAFzG,CAAemC,CAAfnC,IAAoBP,KAAAA,CAAMC,UAAND,CAAiBgF,YAAjBhF,CAA8BjR,MAA9BiR,CAAqCK,CAArCL,EAAwCK,CAAAA,CAAEvE,MAAFuE,EAAxCL,CALpBK;AAMA;;AACJ,eAAK,CAAL;AACUE,YAAAA,CAAAA,CAAE0G,YAAF1G,IAAkBA,CAAAA,CAAE0G,YAAF1G,CAAe1T,MAAjC0T,KACFA,CAAAA,CAAE0G,YAAF1G,GAAE0G,EADA1G,GAENA,CAAAA,CAAE0G,YAAF1G,CAAe7R,IAAf6R,CAAoBP,KAAAA,CAAMC,UAAND,CAAiBoF,YAAjBpF,CAA8BjR,MAA9BiR,CAAqCK,CAArCL,EAAwCK,CAAAA,CAAEvE,MAAFuE,EAAxCL,CAApBO,CAFMA;AAGN;;AACJ;AACIF,YAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAhCJ;AAoCJ;;AAAA,aAAOE,CAAP;AAAOA,KAjDXuG,EAoDAA,CAAAA,CAAaO,WAAbP,GAA2B,YAAA;AAEvB,eAASO,CAAT,CAAqB5Z,CAArB,EAAqBA;AAEjB,YADA6B,KAAKgY,IAALhY,GAAKgY,EAALhY,EACI7B,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,kBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AA+CR;;AAAA,aA1CA4Z,CAAAA,CAAY7X,SAAZ6X,CAAsBE,gBAAtBF,GAAyC,EAAzCA,EACAA,CAAAA,CAAY7X,SAAZ6X,CAAsBG,cAAtBH,GAAuC,IADvCA,EAEAA,CAAAA,CAAY7X,SAAZ6X,CAAsBI,OAAtBJ,GAAgC,IAFhCA,EAGAA,CAAAA,CAAY7X,SAAZ6X,CAAsBC,IAAtBD,GAA6BtH,KAAAA,CAAMjJ,UAHnCuQ,EAIAA,CAAAA,CAAY7X,SAAZ6X,CAAsBK,iBAAtBL,GAA0C,EAJ1CA,EAKAA,CAAAA,CAAY7X,SAAZ6X,CAAsBM,oBAAtBN,GAA6C,EAL7CA,EAOAA,CAAAA,CAAYtY,MAAZsY,GAAqB,UAAgBhH,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC9BD,QAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,aADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiB8G,YAAjB9G,CAA8BqH,WAAlC,EACjD,EAAOhH,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,cAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,kBAAQ7R,CAAAA,KAAM,CAAd;AACA,iBAAK,CAAL;AACI+R,cAAAA,CAAAA,CAAEgH,gBAAFhH,GAAqBF,CAAAA,CAAE7S,MAAF6S,EAArBE;AACA;;AACJ,iBAAK,CAAL;AACIA,cAAAA,CAAAA,CAAEiH,cAAFjH,GAAmBP,KAAAA,CAAMC,UAAND,CAAiB6G,MAAjB7G,CAAwBjR,MAAxBiR,CAA+BK,CAA/BL,EAAkCK,CAAAA,CAAEvE,MAAFuE,EAAlCL,CAAnBO;AACA;;AACJ,iBAAK,CAAL;AACIA,cAAAA,CAAAA,CAAEkH,OAAFlH,GAAYP,KAAAA,CAAMC,UAAND,CAAiBE,GAAjBF,CAAqBjR,MAArBiR,CAA4BK,CAA5BL,EAA+BK,CAAAA,CAAEvE,MAAFuE,EAA/BL,CAAZO;AACA;;AACJ,iBAAK,CAAL;AACUA,cAAAA,CAAAA,CAAE+G,IAAF/G,IAAUA,CAAAA,CAAE+G,IAAF/G,CAAO1T,MAAjB0T,KACFA,CAAAA,CAAE+G,IAAF/G,GAAE+G,EADA/G,GAENA,CAAAA,CAAE+G,IAAF/G,CAAO7R,IAAP6R,CAAYF,CAAAA,CAAE7S,MAAF6S,EAAZE,CAFMA;AAGN;;AACJ,iBAAK,CAAL;AACIA,cAAAA,CAAAA,CAAEmH,iBAAFnH,GAAsBF,CAAAA,CAAE7S,MAAF6S,EAAtBE;AACA;;AACJ,iBAAK,CAAL;AACIA,cAAAA,CAAAA,CAAEoH,oBAAFpH,GAAyBF,CAAAA,CAAE7S,MAAF6S,EAAzBE;AACA;;AACJ;AACIF,cAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAtBJ;AA0BJ;;AAAA,eAAOE,CAAP;AAAOA,OAvCX8G,EA0COA,CAAP;AApDuB,KAAA,EApD3BP,EA2GOA,CAAP;AAvHsB,GAAA,EAh4C1B7G,EA0/CAA,CAAAA,CAAW2H,UAAX3H,GAAwB,YAAA;AAEpB,aAAS2H,CAAT,CAAoBna,CAApB,EAAoBA;AAEhB,UADA6B,KAAKuY,UAALvY,GAAKuY,EAALvY,EACI7B,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,gBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AA+BR;;AAAA,WA1BAma,CAAAA,CAAWpY,SAAXoY,CAAqBE,uBAArBF,GAA+C7H,KAAAA,CAAMzK,IAANyK,GAAaA,KAAAA,CAAMzK,IAANyK,CAAWlH,QAAXkH,CAAoB,CAApBA,EAAsB,CAAtBA,EAAsB,CAAE,CAAxBA,CAAbA,GAA8C,CAA7F6H,EACAA,CAAAA,CAAWpY,SAAXoY,CAAqBC,UAArBD,GAAkC7H,KAAAA,CAAMjJ,UADxC8Q,EAGAA,CAAAA,CAAW7Y,MAAX6Y,GAAoB,UAAgBvH,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC7BD,MAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,WADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiB4H,UAArB,EACjD,EAAOvH,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,YAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,gBAAQ7R,CAAAA,KAAM,CAAd;AACA,eAAK,CAAL;AACI+R,YAAAA,CAAAA,CAAEuH,uBAAFvH,GAA4BF,CAAAA,CAAElE,KAAFkE,EAA5BE;AACA;;AACJ,eAAK,CAAL;AACUA,YAAAA,CAAAA,CAAEsH,UAAFtH,IAAgBA,CAAAA,CAAEsH,UAAFtH,CAAa1T,MAA7B0T,KACFA,CAAAA,CAAEsH,UAAFtH,GAAEsH,EADAtH,GAENA,CAAAA,CAAEsH,UAAFtH,CAAa7R,IAAb6R,CAAkBP,KAAAA,CAAMC,UAAND,CAAiB8G,YAAjB9G,CAA8BjR,MAA9BiR,CAAqCK,CAArCL,EAAwCK,CAAAA,CAAEvE,MAAFuE,EAAxCL,CAAlBO,CAFMA;AAGN;;AACJ;AACIF,YAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAVJ;AAcJ;;AAAA,aAAOE,CAAP;AAAOA,KAvBXqH,EA0BOA,CAAP;AApCoB,GAAA,EA1/CxB3H,EAiiDAA,CAAAA,CAAWoD,kBAAXpD,GAAgC,YAAA;AAE5B,aAASoD,CAAT,CAA4B5V,CAA5B,EAA4BA;AAGxB,UAFA6B,KAAe,QAAfA,GAAe,EAAfA,EACAA,KAAKyY,QAALzY,GAAKyY,EADLzY,EAEI7B,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,gBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AAiCR;;AAAA,WA5BA4V,CAAAA,CAAmB7T,SAAnB6T,CAAuC,QAAvCA,GAA2CtD,KAAAA,CAAMjJ,UAAjDuM,EACAA,CAAAA,CAAmB7T,SAAnB6T,CAA6B0E,QAA7B1E,GAAwCtD,KAAAA,CAAMjJ,UAD9CuM,EAGAA,CAAAA,CAAmBtU,MAAnBsU,GAA4B,UAAgBhD,CAAhB,EAAmBC,CAAnB,EAAmBA;AACrCD,MAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,WADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiBqD,kBAArB,EACjD,EAAOhD,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,YAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,gBAAQ7R,CAAAA,KAAM,CAAd;AACA,eAAK,CAAL;AACU+R,YAAAA,CAAAA,CAAY,QAAZA,IAAiBA,CAAAA,CAAY,QAAZA,CAAc1T,MAA/B0T,KACFA,CAAAA,CAAY,QAAZA,GAAY,EADVA,GAENA,CAAAA,CAAY,QAAZA,CAAc7R,IAAd6R,CAAmBP,KAAAA,CAAMC,UAAND,CAAiBgI,WAAjBhI,CAA6BjR,MAA7BiR,CAAoCK,CAApCL,EAAuCK,CAAAA,CAAEvE,MAAFuE,EAAvCL,CAAnBO,CAFMA;AAGN;;AACJ,eAAK,CAAL;AACUA,YAAAA,CAAAA,CAAEwH,QAAFxH,IAAcA,CAAAA,CAAEwH,QAAFxH,CAAW1T,MAAzB0T,KACFA,CAAAA,CAAEwH,QAAFxH,GAAEwH,EADAxH,GAENA,CAAAA,CAAEwH,QAAFxH,CAAW7R,IAAX6R,CAAgBP,KAAAA,CAAMC,UAAND,CAAiBiI,WAAjBjI,CAA6BjR,MAA7BiR,CAAoCK,CAApCL,EAAuCK,CAAAA,CAAEvE,MAAFuE,EAAvCL,CAAhBO,CAFMA;AAGN;;AACJ;AACIF,YAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AAZJ;AAgBJ;;AAAA,aAAOE,CAAP;AAAOA,KAzBX8C,EA4BOA,CAAP;AAvC4B,GAAA,EAjiDhCpD,EA2kDAA,CAAAA,CAAW+H,WAAX/H,GAAyB,YAAA;AAErB,aAAS+H,CAAT,CAAqBva,CAArB,EAAqBA;AAIjB,UAHA6B,KAAKmT,IAALnT,GAAKmT,EAALnT,EACAA,KAAK4Y,OAAL5Y,GAAK4Y,EADL5Y,EAEAA,KAAK6Y,GAAL7Y,GAAK6Y,EAFL7Y,EAGI7B,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,gBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AAiDR;;AAAA,WA5CAua,CAAAA,CAAYxY,SAAZwY,CAAsBI,SAAtBJ,GAAkC,IAAlCA,EACAA,CAAAA,CAAYxY,SAAZwY,CAAsBvF,IAAtBuF,GAA6BjI,KAAAA,CAAM/I,WADnCgR,EAEAA,CAAAA,CAAYxY,SAAZwY,CAAsBE,OAAtBF,GAAgCjI,KAAAA,CAAMjJ,UAFtCkR,EAGAA,CAAAA,CAAYxY,SAAZwY,CAAsBG,GAAtBH,GAA4BjI,KAAAA,CAAM/I,WAHlCgR,EAKAA,CAAAA,CAAYjZ,MAAZiZ,GAAqB,UAAgB3H,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC9BD,MAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,WADA,IAAqFqC,CAArF,EAAI1T,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiBgI,WAArB,EACjD,EAAO3H,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,YAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,gBAAQ7R,CAAAA,KAAM,CAAd;AACA,eAAK,CAAL;AACI+R,YAAAA,CAAAA,CAAE6H,SAAF7H,GAAcP,KAAAA,CAAMC,UAAND,CAAiBuF,KAAjBvF,CAAuBjR,MAAvBiR,CAA8BK,CAA9BL,EAAiCK,CAAAA,CAAEvE,MAAFuE,EAAjCL,CAAdO;AACA;;AACJ,eAAK,CAAL;AACIF,YAAAA,CAAAA,CAAElC,IAAFkC,GAAS5P,GAAT4P,IACIE,CAAAA,CAAEkC,IAAFlC,KAAWR,KAAAA,CAAM/I,WAAjBuJ,KACAA,CAAAA,CAAEkC,IAAFlC,GAAEkC,EADFlC,CADJF,EAGAqC,CAAAA,GAAIrC,CAAAA,CAAE7S,MAAF6S,EAHJA,EAIAA,CAAAA,CAAE5P,GAAF4P,EAJAA,EAKAE,CAAAA,CAAEkC,IAAFlC,CAAOmC,CAAPnC,IAAYP,KAAAA,CAAMC,UAAND,CAAiB6B,SAAjB7B,CAA2BjR,MAA3BiR,CAAkCK,CAAlCL,EAAqCK,CAAAA,CAAEvE,MAAFuE,EAArCL,CALZK;AAMA;;AACJ,eAAK,CAAL;AACUE,YAAAA,CAAAA,CAAE2H,OAAF3H,IAAaA,CAAAA,CAAE2H,OAAF3H,CAAU1T,MAAvB0T,KACFA,CAAAA,CAAE2H,OAAF3H,GAAE2H,EADA3H,GAENA,CAAAA,CAAE2H,OAAF3H,CAAU7R,IAAV6R,CAAeP,KAAAA,CAAMC,UAAND,CAAiB2C,OAAjB3C,CAAyBjR,MAAzBiR,CAAgCK,CAAhCL,EAAmCK,CAAAA,CAAEvE,MAAFuE,EAAnCL,CAAfO,CAFMA;AAGN;;AACJ,eAAK,CAAL;AACIF,YAAAA,CAAAA,CAAElC,IAAFkC,GAAS5P,GAAT4P,IACIE,CAAAA,CAAE4H,GAAF5H,KAAUR,KAAAA,CAAM/I,WAAhBuJ,KACAA,CAAAA,CAAE4H,GAAF5H,GAAE4H,EADF5H,CADJF,EAGAqC,CAAAA,GAAIrC,CAAAA,CAAE7S,MAAF6S,EAHJA,EAIAA,CAAAA,CAAE5P,GAAF4P,EAJAA,EAKAE,CAAAA,CAAE4H,GAAF5H,CAAMmC,CAANnC,IAAWF,CAAAA,CAAE7S,MAAF6S,EALXA;AAMA;;AACJ;AACIA,YAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AA1BJ;AA8BJ;;AAAA,aAAOE,CAAP;AAAOA,KAzCXyH,EA4COA,CAAP;AAxDqB,GAAA,EA3kDzB/H,EAsoDAA,CAAAA,CAAWgI,WAAXhI,GAAyB,YAAA;AAErB,aAASgI,CAAT,CAAqBxa,CAArB,EAAqBA;AACjB,UAAIA,CAAJ,EACI,KAAK,IAAI0S,CAAAA,GAAKxM,MAAAA,CAAOC,IAAPD,CAAYlG,CAAZkG,CAAT,EAAyB3F,CAAAA,GAAI,CAAlC,EAAqCA,CAAAA,GAAImS,CAAAA,CAAGtT,MAA5C,EAA4CA,EAAUmB,CAAtD;AACoB,gBAAZP,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CAAY,KACZ6B,KAAK6Q,CAAAA,CAAGnS,CAAHmS,CAAL7Q,IAAc7B,CAAAA,CAAE0S,CAAAA,CAAGnS,CAAHmS,CAAF1S,CADF;AADpB;AA6BR;;AAAA,WAxBAwa,CAAAA,CAAYzY,SAAZyY,CAAsBI,YAAtBJ,GAAqC,EAArCA,EACAA,CAAAA,CAAYzY,SAAZyY,CAAsBK,YAAtBL,GAAqC,EADrCA,EAGAA,CAAAA,CAAYlZ,MAAZkZ,GAAqB,UAAgB5H,CAAhB,EAAmBC,CAAnB,EAAmBA;AAC9BD,MAAAA,CAAAA,YAAaR,OAAbQ,KACFA,CAAAA,GAAIR,OAAAA,CAAQ9F,MAAR8F,CAAeQ,CAAfR,CADFQ;;AAGN,WADA,IAAIrR,CAAAA,GAAAA,KAAUE,CAAVF,KAAIsR,CAAJtR,GAAsBqR,CAAAA,CAAEtM,GAAxB/E,GAA8BqR,CAAAA,CAAE5P,GAAF4P,GAAQC,CAA1C,EAA6CC,CAAAA,GAAI,IAAIP,KAAAA,CAAMC,UAAND,CAAiBiI,WAArB,EACjD,EAAO5H,CAAAA,CAAE5P,GAAF4P,GAAQrR,CAAf,GAAkB;AACd,YAAIR,CAAAA,GAAI6R,CAAAA,CAAEvE,MAAFuE,EAAR;;AACA,gBAAQ7R,CAAAA,KAAM,CAAd;AACA,eAAK,CAAL;AACI+R,YAAAA,CAAAA,CAAE8H,YAAF9H,GAAiBF,CAAAA,CAAE7S,MAAF6S,EAAjBE;AACA;;AACJ,eAAK,CAAL;AACIA,YAAAA,CAAAA,CAAE+H,YAAF/H,GAAiBF,CAAAA,CAAE7S,MAAF6S,EAAjBE;AACA;;AACJ;AACIF,YAAAA,CAAAA,CAAEjC,QAAFiC,CAAe,IAAJ7R,CAAX6R;AARJ;AAYJ;;AAAA,aAAOE,CAAP;AAAOA,KArBX0H,EAwBOA,CAAP;AAjCqB,GAAA,EAtoDzBhI,EA0qDOA,CAAP;AA9qDe,CAAA,EAAnBD;;AAirDA,IAAA,YAAA,GAAiBA,KAAjB;AAAA,IAAiBA,cAAAA,GAAAA,YAAAA,CAAAA,UAAjB;;AAAiBA,SAAAA,aAAAA,CClqDbuI,CDkqDavI,EClqDM3I,CDkqDN2I,EClqDkBwI,CDkqDlBxI,ECjqDbyI,CDiqDazI,ECjqDbyI;AACF,MAAMC,CAAAA,GAAQrR,CAAAA,CAAK3K,MAAL2K,CAAYkR,CAAZlR,CAAd;;AACA,MAAIqR,CAAAA,IAAAA,KAA8BxZ,CAA9BwZ,KAASA,CAAAA,CAAMC,UAAnB,EAA6C;AAC3C,QAAmB,aAAfD,CAAAA,CAAMzG,IAAV,EACE,OAAO2G,SAAAA,CAAUvR,CAAAA,CAAKwR,UAALxR,CAAgBqR,CAAAA,CAAMC,UAAtBtR,CAAVuR,EAA6CJ,CAA7CI,EAAwDH,CAAxDG,CAAP;AAEF,QAAmB,cAAfF,CAAAA,CAAMzG,IAAV,EAQE,OAAA,CAPoC,MAArByG,CAAAA,CAAMC,UAAe,GACJ,MAA3BD,CAAAA,CAAMI,gBAAqB,GACvBzR,CAAAA,CAAKwR,UADkB,GAEvBxR,CAAAA,CAAKwR,UAALxR,CAAgBxI,KAAhBwI,CACIqR,CAAAA,CAAMC,UADVtR,EACUsR,CAAaD,CAAAA,CAAMI,gBAD7BzR,CAH2B,GAKhCA,CAAAA,CAAKwR,UAALxR,CAAgBxH,MAAhBwH,CAAuBqR,CAAAA,CAAMC,UAA7BtR,CAEJ,EAAc0R,GAAd,CAAkB,UAAA,CAAA,EAAA;AAAQ,aAAA,SAAA,CAAUxP,CAAV,EAAgBiP,CAAhB,EAA2BC,CAA3B,CAAA;AAA2BA,KAArD,CAAA;AAEF,QAAMO,CAAAA,GAAOrc,KAAAA,CAAM6C,SAAN7C,CAAgBkC,KAAhBlC,CAAsB+H,IAAtB/H,CACTic,SAAAA,CACIvR,CAAAA,CAAKwR,UAALxR,CAAgBxI,KAAhBwI,CAAsBqR,CAAAA,CAAMC,UAA5BtR,EAAwC,CAAxCA,CADJuR,EACgDJ,CADhDI,EAC2DH,CAD3DG,CAAAA,CAEKK,QAFLL,EADSjc,CAAb;AAIA,WAAsB,aAAf+b,CAAAA,CAAMzG,IAAS,GAAW+G,CAAAA,CAAK,CAALA,CAAX,GAAqBA,CAA3C;AAEF;;AAAA,SAAON,CAAAA,IAASA,CAAAA,CAAMxT,KAAtB;AASF;;AAAA,SAAA,SAAA,CACIqE,CADJ,EACkB2P,CADlB,EAEIT,CAFJ,EAEIA;AACI,MAAA,CAAA,GAAA,aAAA,CAAA,CAAA,CAAA;AAAA,MAACU,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CAAD;AAAA,MAAWpc,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CAAX;AAAA,MACAqc,CAAAA,GAAYX,CAAAA,CAAQY,iBAARZ,CAA0Ba,IAA1Bb,CAA+B,UAAA,CAAA,EAAA;AAC/C,WAAA,CAAA,CAASS,CAAAA,CAAWK,wBAAAA,CAAyBJ,CAAzBI,EAAmCH,CAAnCG,CAAXL,CAAT;AAAuDE,GADvCX,CADZ;AAKN,SAAA,KAAqBvZ,CAArB,KAAOka,CAAP,GACIF,CAAAA,CAAWK,wBAAAA,CAAyBJ,CAAzBI,EAAmCH,CAAnCG,CAAXL,CAAAA,CAA0Dnc,CAA1Dmc,CADJ,GAC8Dnc,KAC1DmC,CAFJ;AAUF;;AAAA,SAAA,4BAAA,CACIqK,CADJ,EACkB2P,CADlB,EAEIT,CAFJ,EAEIA;AACF,SAAOS,CAAAA,CAAWK,wBAAAA,CAAyBhQ,CAAzBgQ,EAA+Bd,CAAAA,CAAQe,gBAAvCD,CAAXL,CAAP;AASF;;AAAA,SAAA,mBAAA,CACIO,CADJ,EACuBhB,CADvB,EACuBA;AACf,MAAA,CAAA,GAAA,aAAA,CAAA,CAAA,CAAA;AAAA,MAACU,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CAAD;AAAA,MAAWpc,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CAAX;AAEN,SAAA,CACEwc,wBAAAA,CAAyBJ,CAAzBI,EAAmCd,CAAAA,IAAWA,CAAAA,CAAQe,gBAAtDD,CADF,EAEExc,CAFF,CAAA;AAMF;;AAAA,SAAA,wBAAA,CAAkCwM,CAAlC,EAAgD6P,CAAhD,EAAgDA;AAC9C,SAASA,CAAAA,GAAe7P,CAAAA,GAAAA,GAAAA,GAAQ6P,CAAvBA,GAAqC7P,CAA9C;AAGF;;AAAA,SAAA,aAAA,CAA8BA,CAA9B,EAA8BA;AAC5B,MAAMxM,CAAAA,GAAQwM,CAAAA,CAAKmQ,WAALnQ,CAAiB,GAAjBA,CAAd;AACA,SAAA,CAAe,CAAf,KAAIxM,CAAJ,GAAIA,CAAsBwM,CAAtBxM,EAA4B,CAA5BA,CAAJ,GAAgC,CAEfwM,CAAAA,CAAKF,SAALE,CAAe,CAAfA,EAAkBxM,CAAlBwM,CAFe,EAGdhC,MAAAA,CAAOgC,CAAAA,CAAKF,SAALE,CAAexM,CAAAA,GAAQ,CAAvBwM,CAAPhC,CAHc,CAAhC;AAMF;;AAAA,SAAA,OAAA,CAAsBoS,CAAtB,EAAqCrV,CAArC,EAAqCA;AAEnC,OADA,IAAMsV,CAAAA,GAAAA,EAAN,EACS5b,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAI2b,CAAAA,CAAI9c,MAAxB,EAAgCmB,CAAAA,IAAKsG,CAArC;AACEsV,IAAAA,CAAAA,CAAIlb,IAAJkb,CAASD,CAAAA,CAAI9a,KAAJ8a,CAAU3b,CAAV2b,EAAa3b,CAAAA,GAAIsG,CAAjBqV,CAATC;AADF;;AAGA,SAAOA,CAAP;AChGK;;AAAA,IAAMjP,IAAAA,GAAAA,CAAAA;AAETkP,EAAAA,QAAAA,EAAY,KAFHlP;AAGTmP,EAAAA,QAAAA,EAAY,KAHHnP;AAIToP,EAAAA,QAAAA,EAAY,YAJHpP;AAKTjO,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlDzd;AALSiO,CAAAA,EAWW;AAKpBkP,EAAAA,QAAAA,EAAY,MALQ;AAMpBC,EAAAA,QAAAA,EAAY,MANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACEsd,IAAAA,YAAAA,EAAgB,CADlBtd;AAEE0d,IAAAA,kBAAAA,EAAsB,CAFxB1d;AAGEud,IAAAA,WAAAA,EAAe,SAHjBvd;AAIEuV,IAAAA,IAAAA,EAAQ;AAJVvV,GAAAA;AARoB,CAXXiO,EAuBC;AAIVkP,EAAAA,QAAAA,EAAY,SAJF;AAKVC,EAAAA,QAAAA,EAAY,KALF;AAMVC,EAAAA,QAAAA,EAAY,YANF;AAOVrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlDzd;AAPU,CAvBDiO,EAoCW;AAKpBkP,EAAAA,QAAAA,EAAY,KALQ;AAMpBC,EAAAA,QAAAA,EAAY,KANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlDzd;AARoB,CApCXiO,EAkDW;AAKpBkP,EAAAA,QAAAA,EAAY,SALQ;AAMpBC,EAAAA,QAAAA,EAAY,KANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlDzd;AARoB,CAlDXiO,EAgEW;AAKpBkP,EAAAA,QAAAA,EAAY,KALQ;AAMpBC,EAAAA,QAAAA,EAAY,KANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlDzd;AARoB,CAhEXiO,EA8EW;AAKpBkP,EAAAA,QAAAA,EAAY,UALQ;AAMpBC,EAAAA,QAAAA,EAAY,UANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlDzd;AARoB,CA9EXiO,EA4FW;AAKpBkP,EAAAA,QAAAA,EAAY,KALQ;AAMpBC,EAAAA,QAAAA,EAAY,KANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlDzd;AARoB,CA5FXiO,EA0GW;AAKpBkP,EAAAA,QAAAA,EAAY,SALQ;AAMpBC,EAAAA,QAAAA,EAAY,SANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV;AARoB,CA1GXiO,EAoHyC;AAIlDkP,EAAAA,QAAAA,EAAY,SAJsC;AAKlDC,EAAAA,QAAAA,EAAY,SALsC;AAMlDC,EAAAA,QAAAA,EAAY,YANsC;AAOlDrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV;AAPkD,CApHzCiO,EA6HyC;AAIlDkP,EAAAA,QAAAA,EAAY,KAJsC;AAKlDC,EAAAA,QAAAA,EAAY,KALsC;AAMlDC,EAAAA,QAAAA,EAAY,YANsC;AAOlDrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlDzd;AAPkD,CA7HzCiO,EA0IW;AAKpBkP,EAAAA,QAAAA,EAAY,mBALQ;AAMpBC,EAAAA,QAAAA,EAAY,mBANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlDzd;AARoB,CA1IXiO,EAwJW;AAKpBkP,EAAAA,QAAAA,EAAY,KALQ;AAMpBC,EAAAA,QAAAA,EAAY,KANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlDzd;AARoB,CAxJXiO,EAsKW;AAKpBkP,EAAAA,QAAAA,EAAY,UALQ;AAMpBC,EAAAA,QAAAA,EAAY,KANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlDzd;AARoB,CAtKXiO,CAAN;AAAA,IAoLiB,UAAA,GAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,IAAA,EAAA;AAAA,CAAA,CApLjB;AAAA,ICAMA,MAAAA,GAAAA,CAAAA;AAETkP,EAAAA,QAAAA,EAAY,KAFHlP;AAGTmP,EAAAA,QAAAA,EAAY,KAHHnP;AAIToP,EAAAA,QAAAA,EAAY,YAJHpP;AAKTjO,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AALSiO,CAAAA,EAUW;AAKpBkP,EAAAA,QAAAA,EAAY,MALQ;AAMpBC,EAAAA,QAAAA,EAAY,MANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CAVXiO,EAuBW;AAKpBkP,EAAAA,QAAAA,EAAY,MALQ;AAMpBC,EAAAA,QAAAA,EAAY,MANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CAvBXiO,EAoCW;AAKpBkP,EAAAA,QAAAA,EAAY,MALQ;AAMpBC,EAAAA,QAAAA,EAAY,MANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CApCXiO,EAiDW;AAKpBkP,EAAAA,QAAAA,EAAY,OALQ;AAMpBC,EAAAA,QAAAA,EAAY,OANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlDzd;AARoB,CAjDXiO,EA+DW;AAKpBkP,EAAAA,QAAAA,EAAY,MALQ;AAMpBC,EAAAA,QAAAA,EAAY,MANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CA/DXiO,EA4EW;AAKpBkP,EAAAA,QAAAA,EAAY,aALQ;AAMpBC,EAAAA,QAAAA,EAAY,aANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,gBAD+B;AAE9CD,IAAAA,WAAAA,EAAe,cAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ;AAHsC,GADlDvV,EAIY;AAGRwd,IAAAA,WAAAA,EAAe,gBAHP;AAIRD,IAAAA,WAAAA,EAAe,cAJP;AAKRhI,IAAAA,IAAAA,EAAQ;AALA,GAJZvV;AARoB,CA5EXiO,EA6FG;AAKZkP,EAAAA,QAAAA,EAAY,KALA;AAMZC,EAAAA,QAAAA,EAAY,KANA;AAOZC,EAAAA,QAAAA,EAAY,YAPA;AAQZrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARY,CA7FHiO,EA0GW;AAKpBkP,EAAAA,QAAAA,EAAY,MALQ;AAMpBC,EAAAA,QAAAA,EAAY,MANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CA1GXiO,EAuHW;AAKpBkP,EAAAA,QAAAA,EAAY,KALQ;AAMpBC,EAAAA,QAAAA,EAAY,KANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CAvHXiO,EAoIW;AAKpBkP,EAAAA,QAAAA,EAAY,KALQ;AAMpBC,EAAAA,QAAAA,EAAY,KANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CApIXiO,EAiJW;AAKpBkP,EAAAA,QAAAA,EAAY,OALQ;AAMpBC,EAAAA,QAAAA,EAAY,OANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CAjJXiO,EA8JW;AAKpBkP,EAAAA,QAAAA,EAAY,KALQ;AAMpBC,EAAAA,QAAAA,EAAY,KANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CA9JXiO,EA2KW;AAKpBkP,EAAAA,QAAAA,EAAY,KALQ;AAMpBC,EAAAA,QAAAA,EAAY,KANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CA3KXiO,EAwLW;AAKpBkP,EAAAA,QAAAA,EAAY,MALQ;AAMpBC,EAAAA,QAAAA,EAAY,MANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CAxLXiO,EAqMW;AAKpBkP,EAAAA,QAAAA,EAAY,OALQ;AAMpBC,EAAAA,QAAAA,EAAY,aANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd,EAKoB;AAEjBud,IAAAA,WAAAA,EAAe,cAFE;AAEchI,IAAAA,IAAAA,EAAQ,QAFtB;AAEgCuE,IAAAA,YAAAA,EAAgB;AAFhD,GALpB9Z,EAOoE;AACjEud,IAAAA,WAAAA,EAAe,cADkD;AAClChI,IAAAA,IAAAA,EAAQ,QAD0B;AAChBuE,IAAAA,YAAAA,EAAgB;AADA,GAPpE9Z;AARoB,CArMXiO,EAqN2D;AAIpEkP,EAAAA,QAAAA,EAAY,MAJwD;AAKpEC,EAAAA,QAAAA,EAAY,MALwD;AAMpEC,EAAAA,QAAAA,EAAY,YANwD;AAOpErd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AAPoE,CArN3DiO,EAiOW;AAKpBkP,EAAAA,QAAAA,EAAY,SALQ;AAMpBC,EAAAA,QAAAA,EAAY,SANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CAjOXiO,EA8OW;AAKpBkP,EAAAA,QAAAA,EAAY,KALQ;AAMpBC,EAAAA,QAAAA,EAAY,KANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CA9OXiO,EA2PW;AAKpBkP,EAAAA,QAAAA,EAAY,MALQ;AAMpBC,EAAAA,QAAAA,EAAY,MANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CA3PXiO,EAwQW;AAKpBkP,EAAAA,QAAAA,EAAY,MALQ;AAMpBC,EAAAA,QAAAA,EAAY,MANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CAxQXiO,EAqRW;AAKpBkP,EAAAA,QAAAA,EAAY,OALQ;AAMpBC,EAAAA,QAAAA,EAAY,OANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CArRXiO,EAkSW;AAKpBkP,EAAAA,QAAAA,EAAY,QALQ;AAMpBC,EAAAA,QAAAA,EAAY,QANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CAlSXiO,EA+SW;AAKpBkP,EAAAA,QAAAA,EAAY,KALQ;AAMpBC,EAAAA,QAAAA,EAAY,KANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CA/SXiO,EA4TW;AAKpBkP,EAAAA,QAAAA,EAAY,MALQ;AAMpBC,EAAAA,QAAAA,EAAY,MANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CA5TXiO,EAyUW;AAKpBkP,EAAAA,QAAAA,EAAY,MALQ;AAMpBC,EAAAA,QAAAA,EAAY,MANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CAzUXiO,EAsVW;AAKpBkP,EAAAA,QAAAA,EAAY,OALQ;AAMpBC,EAAAA,QAAAA,EAAY,OANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CAtVXiO,EAmWW;AAKpBkP,EAAAA,QAAAA,EAAY,OALQ;AAMpBC,EAAAA,QAAAA,EAAY,OANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CAnWXiO,EAgXW;AAKpBkP,EAAAA,QAAAA,EAAY,OALQ;AAMpBC,EAAAA,QAAAA,EAAY,OANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CAhXXiO,EA6XW;AAKpBkP,EAAAA,QAAAA,EAAY,YALQ;AAMpBC,EAAAA,QAAAA,EAAY,YANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CA7XXiO,EA0YW;AAKpBkP,EAAAA,QAAAA,EAAY,YALQ;AAMpBC,EAAAA,QAAAA,EAAY,YANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CA1YXiO,EAuZW;AAKpBkP,EAAAA,QAAAA,EAAY,UALQ;AAMpBC,EAAAA,QAAAA,EAAY,UANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CAvZXiO,EAoaW;AAKpBkP,EAAAA,QAAAA,EAAY,OALQ;AAMpBC,EAAAA,QAAAA,EAAY,OANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CApaXiO,EAibW;AAKpBkP,EAAAA,QAAAA,EAAY,OALQ;AAMpBC,EAAAA,QAAAA,EAAY,OANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CAjbXiO,EA8bW;AAKpBkP,EAAAA,QAAAA,EAAY,OALQ;AAMpBC,EAAAA,QAAAA,EAAY,OANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CA9bXiO,EA2cW;AAKpBkP,EAAAA,QAAAA,EAAY,KALQ;AAMpBC,EAAAA,QAAAA,EAAY,KANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CA3cXiO,EAwdW;AAKpBkP,EAAAA,QAAAA,EAAY,MALQ;AAMpBC,EAAAA,QAAAA,EAAY,MANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,MADa;AACLhI,IAAAA,IAAAA,EAAQ;AADH,GADlDvV,EAEqD;AACjDwd,IAAAA,WAAAA,EAAe,WADkC;AAEjDD,IAAAA,WAAAA,EAAe,UAFkC;AAGjDhI,IAAAA,IAAAA,EAAQ,MAHyC;AAIjDkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJiC,GAFrDzd,EAMoB;AAGhBwd,IAAAA,WAAAA,EAAe,GAHC;AAIhBD,IAAAA,WAAAA,EAAe,OAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,OALQ;AAMhBkI,IAAAA,YAAAA,EAAAA,CAAgB;AANA,GANpBzd;AARoB,CAxdXiO,EA4eW;AAKpBkP,EAAAA,QAAAA,EAAY,WALQ;AAMpBC,EAAAA,QAAAA,EAAY,WANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,OAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,QAHsC;AAI9CuE,IAAAA,YAAAA,EAAgB;AAJ8B,GADlD9Z,EAKoB;AAGhBwd,IAAAA,WAAAA,EAAe,GAHC;AAIhBD,IAAAA,WAAAA,EAAe,OAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,OALQ;AAMhBkI,IAAAA,YAAAA,EAAAA,CAAgB;AANA,GALpBzd;AARoB,CA5eXiO,CDAN;AAAA,IC+fiB,SAAA,GAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,IAAA,EAAA;AAAA,CAAA,CD/fjB;AAAA,IEAMA,MAAAA,GAAAA,CAAAA;AAETkP,EAAAA,QAAAA,EAAY,UAFHlP;AAGTmP,EAAAA,QAAAA,EAAY,UAHHnP;AAIToP,EAAAA,QAAAA,EAAY,SAJHpP;AAKTjO,EAAAA,MAAAA,EAAAA,CAAAA;AAAYsd,IAAAA,YAAAA,EAAgB,CAA5Btd;AAA+Bud,IAAAA,WAAAA,EAAe,MAA9Cvd;AAAsDuV,IAAAA,IAAAA,EAAQ;AAA9DvV,GAAAA;AALSiO,CAAAA,EAKqD;AAG9DkP,EAAAA,QAAAA,EAAY,QAHkD;AAI9DC,EAAAA,QAAAA,EAAY,QAJkD;AAK9DC,EAAAA,QAAAA,EAAY,SALkD;AAM9Drd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,MADrCvd;AAC6CuV,IAAAA,IAAAA,EAAQ;AADrDvV,GAAAA,EACqD;AAClDsd,IAAAA,YAAAA,EAAgB,CADkC;AAC/BC,IAAAA,WAAAA,EAAe,MADgB;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADrDvV;AAN8D,CALrDiO,EAa4C;AAIrDkP,EAAAA,QAAAA,EAAY,OAJyC;AAKrDC,EAAAA,QAAAA,EAAY,OALyC;AAMrDC,EAAAA,QAAAA,EAAY,SANyC;AAOrDrd,EAAAA,MAAAA,EAAAA,CAAAA;AACEsd,IAAAA,YAAAA,EAAgB,CADlBtd;AAEE0d,IAAAA,kBAAAA,EAAsB,CAFxB1d;AAGEud,IAAAA,WAAAA,EAAe,SAHjBvd;AAIEuV,IAAAA,IAAAA,EAAQ;AAJVvV,GAAAA;AAPqD,CAb5CiO,EAwBC;AAIVkP,EAAAA,QAAAA,EAAY,OAJF;AAKVC,EAAAA,QAAAA,EAAY,OALF;AAMVC,EAAAA,QAAAA,EAAY,SANF;AAOVrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,QADrCvd;AAC+CuV,IAAAA,IAAAA,EAAQ;AADvDvV,GAAAA,EACuD;AACnDwd,IAAAA,WAAAA,EAAe,GADoC;AAEnDD,IAAAA,WAAAA,EAAe,OAFoC;AAGnDhI,IAAAA,IAAAA,EAAQ,OAH2C;AAInDkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJmC,GADvDzd,EAKoB;AAGhBwd,IAAAA,WAAAA,EAAe,YAHC;AAIhBD,IAAAA,WAAAA,EAAe,WAJC;AAKhBhI,IAAAA,IAAAA,EAAQ;AALQ,GALpBvV,EAUY;AAGRwd,IAAAA,WAAAA,EAAe,aAHP;AAIRD,IAAAA,WAAAA,EAAe,YAJP;AAKRhI,IAAAA,IAAAA,EAAQ;AALA,GAVZvV;AAPU,CAxBDiO,EA8CG;AAKZkP,EAAAA,QAAAA,EAAY,MALA;AAMZC,EAAAA,QAAAA,EAAY,MANA;AAOZC,EAAAA,QAAAA,EAAY,SAPA;AAQZrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,QADrCvd;AAC+CuV,IAAAA,IAAAA,EAAQ;AADvDvV,GAAAA,EACuD;AACnDwd,IAAAA,WAAAA,EAAe,GADoC;AAEnDD,IAAAA,WAAAA,EAAe,OAFoC;AAGnDhI,IAAAA,IAAAA,EAAQ,OAH2C;AAInDkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJmC,GADvDzd;AARY,CA9CHiO,EA2DW;AAKpBkP,EAAAA,QAAAA,EAAY,eALQ;AAMpBC,EAAAA,QAAAA,EAAY,eANQ;AAOpBC,EAAAA,QAAAA,EAAY,SAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,QADrCvd;AAC+CuV,IAAAA,IAAAA,EAAQ;AADvDvV,GAAAA,EACuD;AACnDwd,IAAAA,WAAAA,EAAe,GADoC;AAEnDD,IAAAA,WAAAA,EAAe,OAFoC;AAGnDhI,IAAAA,IAAAA,EAAQ,OAH2C;AAInDkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJmC,GADvDzd;AARoB,CA3DXiO,EAwEW;AAKpBkP,EAAAA,QAAAA,EAAY,eALQ;AAMpBC,EAAAA,QAAAA,EAAY,aANQ;AAOpBC,EAAAA,QAAAA,EAAY,SAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,MADrCvd;AAC6CuV,IAAAA,IAAAA,EAAQ;AADrDvV,GAAAA,EACqD;AAClDwd,IAAAA,WAAAA,EAAe,OADmC;AAC1BD,IAAAA,WAAAA,EAAe,OADW;AACFhI,IAAAA,IAAAA,EAAQ;AADN,GADrDvV,EAE2D;AACvDwd,IAAAA,WAAAA,EAAe,eADwC;AAEvDD,IAAAA,WAAAA,EAAe,cAFwC;AAGvDhI,IAAAA,IAAAA,EAAQ;AAH+C,GAF3DvV,EAKY;AAGRwd,IAAAA,WAAAA,EAAe,cAHP;AAIRD,IAAAA,WAAAA,EAAe,aAJP;AAKRhI,IAAAA,IAAAA,EAAQ;AALA,GALZvV,EAUY;AAGRwd,IAAAA,WAAAA,EAAe,kBAHP;AAIRD,IAAAA,WAAAA,EAAe,gBAJP;AAKRhI,IAAAA,IAAAA,EAAQ;AALA,GAVZvV,EAeY;AAGRwd,IAAAA,WAAAA,EAAe,0BAHP;AAIRD,IAAAA,WAAAA,EAAe,wBAJP;AAKRhI,IAAAA,IAAAA,EAAQ;AALA,GAfZvV,EAoBY;AAGRwd,IAAAA,WAAAA,EAAe,mBAHP;AAIRD,IAAAA,WAAAA,EAAe,MAJP;AAKRhI,IAAAA,IAAAA,EAAQ;AALA,GApBZvV;AARoB,CAxEXiO,EAyGG;AAKZkP,EAAAA,QAAAA,EAAY,oBALA;AAMZC,EAAAA,QAAAA,EAAY,kBANA;AAOZC,EAAAA,QAAAA,EAAY,SAPA;AAQZrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,eADrCvd;AACsDuV,IAAAA,IAAAA,EAAQ;AAD9DvV,GAAAA,EAC8D;AAC3Dsd,IAAAA,YAAAA,EAAgB,CAD2C;AACxCC,IAAAA,WAAAA,EAAe,OADyB;AAChBhI,IAAAA,IAAAA,EAAQ;AADQ,GAD9DvV,EAEsD;AACnDsd,IAAAA,YAAAA,EAAgB,CADmC;AAChCC,IAAAA,WAAAA,EAAe,QADiB;AACPhI,IAAAA,IAAAA,EAAQ;AADD,GAFtDvV,EAGuD;AACpDsd,IAAAA,YAAAA,EAAgB,CADoC;AACjCC,IAAAA,WAAAA,EAAe,QADkB;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GAHvDvV,EAIuD;AACnDwd,IAAAA,WAAAA,EAAe,GADoC;AAEnDD,IAAAA,WAAAA,EAAe,OAFoC;AAGnDhI,IAAAA,IAAAA,EAAQ,OAH2C;AAInDkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJmC,GAJvDzd;AARY,CAzGHiO,EAyHW;AAKpBkP,EAAAA,QAAAA,EAAY,mBALQ;AAMpBC,EAAAA,QAAAA,EAAY,iBANQ;AAOpBC,EAAAA,QAAAA,EAAY,SAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,eADrCvd;AACsDuV,IAAAA,IAAAA,EAAQ;AAD9DvV,GAAAA,EAC8D;AAC3Dsd,IAAAA,YAAAA,EAAgB,CAD2C;AACxCC,IAAAA,WAAAA,EAAe,OADyB;AAChBhI,IAAAA,IAAAA,EAAQ;AADQ,GAD9DvV,EAEsD;AACnDsd,IAAAA,YAAAA,EAAgB,CADmC;AAChCC,IAAAA,WAAAA,EAAe,QADiB;AACPhI,IAAAA,IAAAA,EAAQ;AADD,GAFtDvV,EAGuD;AACnDwd,IAAAA,WAAAA,EAAe,OADoC;AAEnDD,IAAAA,WAAAA,EAAe,OAFoC;AAGnDhI,IAAAA,IAAAA,EAAQ,OAH2C;AAInDkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJmC,GAHvDzd;AARoB,CAzHXiO,EAwIW;AAKpBkP,EAAAA,QAAAA,EAAY,qBALQ;AAMpBC,EAAAA,QAAAA,EAAY,mBANQ;AAOpBC,EAAAA,QAAAA,EAAY,SAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,eADrCvd;AACsDuV,IAAAA,IAAAA,EAAQ;AAD9DvV,GAAAA,EAC8D;AAC3Dsd,IAAAA,YAAAA,EAAgB,CAD2C;AACxCC,IAAAA,WAAAA,EAAe,SADyB;AACdhI,IAAAA,IAAAA,EAAQ;AADM,GAD9DvV,EAEwD;AACrDsd,IAAAA,YAAAA,EAAgB,CADqC;AAClCC,IAAAA,WAAAA,EAAe,QADmB;AACThI,IAAAA,IAAAA,EAAQ;AADC,GAFxDvV,EAGuD;AACpDwd,IAAAA,WAAAA,EAAe,OADqC;AAC5BD,IAAAA,WAAAA,EAAe,OADa;AACJhI,IAAAA,IAAAA,EAAQ;AADJ,GAHvDvV,EAI2D;AACvDwd,IAAAA,WAAAA,EAAe,eADwC;AAEvDD,IAAAA,WAAAA,EAAe,cAFwC;AAGvDhI,IAAAA,IAAAA,EAAQ;AAH+C,GAJ3DvV;AARoB,CAxIXiO,EAuJG;AAKZkP,EAAAA,QAAAA,EAAY,sBALA;AAMZC,EAAAA,QAAAA,EAAY,oBANA;AAOZC,EAAAA,QAAAA,EAAY,SAPA;AAQZrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,eADrCvd;AACsDuV,IAAAA,IAAAA,EAAQ;AAD9DvV,GAAAA,EAC8D;AAC3Dsd,IAAAA,YAAAA,EAAgB,CAD2C;AACxCC,IAAAA,WAAAA,EAAe,SADyB;AACdhI,IAAAA,IAAAA,EAAQ;AADM,GAD9DvV,EAEwD;AACrDsd,IAAAA,YAAAA,EAAgB,CADqC;AAClCC,IAAAA,WAAAA,EAAe,QADmB;AACThI,IAAAA,IAAAA,EAAQ;AADC,GAFxDvV,EAGuD;AACpDsd,IAAAA,YAAAA,EAAgB,CADoC;AACjCC,IAAAA,WAAAA,EAAe,QADkB;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GAHvDvV,EAIuD;AACpDwd,IAAAA,WAAAA,EAAe,GADqC;AAChCD,IAAAA,WAAAA,EAAe,OADiB;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GAJvDvV;AARY,CAvJHiO,EAoK8C;AAIvDkP,EAAAA,QAAAA,EAAY,qBAJ2C;AAKvDC,EAAAA,QAAAA,EAAY,mBAL2C;AAMvDC,EAAAA,QAAAA,EAAY,SAN2C;AAOvDrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,eADrCvd;AACsDuV,IAAAA,IAAAA,EAAQ;AAD9DvV,GAAAA,EAC8D;AAC3Dsd,IAAAA,YAAAA,EAAgB,CAD2C;AACxCC,IAAAA,WAAAA,EAAe,QADyB;AACfhI,IAAAA,IAAAA,EAAQ;AADO,GAD9DvV,EAEuD;AACpDwd,IAAAA,WAAAA,EAAe,OADqC;AAC5BD,IAAAA,WAAAA,EAAe,OADa;AACJhI,IAAAA,IAAAA,EAAQ;AADJ,GAFvDvV,EAG2D;AACvDwd,IAAAA,WAAAA,EAAe,uBADwC;AAEvDD,IAAAA,WAAAA,EAAe,qBAFwC;AAGvDhI,IAAAA,IAAAA,EAAQ,OAH+C;AAIvDkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJuC,GAH3Dzd;AAPuD,CApK9CiO,EAkLW;AAKpBkP,EAAAA,QAAAA,EAAY,oBALQ;AAMpBC,EAAAA,QAAAA,EAAY,kBANQ;AAOpBC,EAAAA,QAAAA,EAAY,SAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,eADrCvd;AACsDuV,IAAAA,IAAAA,EAAQ;AAD9DvV,GAAAA,EAC8D;AAC3Dsd,IAAAA,YAAAA,EAAgB,CAD2C;AACxCC,IAAAA,WAAAA,EAAe,QADyB;AACfhI,IAAAA,IAAAA,EAAQ;AADO,GAD9DvV,EAEuD;AACpDsd,IAAAA,YAAAA,EAAgB,CADoC;AACjCC,IAAAA,WAAAA,EAAe,SADkB;AACPhI,IAAAA,IAAAA,EAAQ;AADD,GAFvDvV,EAGwD;AACrDsd,IAAAA,YAAAA,EAAgB,CADqC;AAClCC,IAAAA,WAAAA,EAAe,QADmB;AACThI,IAAAA,IAAAA,EAAQ;AADC,GAHxDvV,EAIuD;AACpDwd,IAAAA,WAAAA,EAAe,GADqC;AAChCD,IAAAA,WAAAA,EAAe,OADiB;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GAJvDvV;AARoB,CAlLXiO,EA+L8C;AAIvDkP,EAAAA,QAAAA,EAAY,mBAJ2C;AAKvDC,EAAAA,QAAAA,EAAY,iBAL2C;AAMvDC,EAAAA,QAAAA,EAAY,SAN2C;AAOvDrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,eADrCvd;AACsDuV,IAAAA,IAAAA,EAAQ;AAD9DvV,GAAAA,EAC8D;AAC3Dsd,IAAAA,YAAAA,EAAgB,CAD2C;AACxCC,IAAAA,WAAAA,EAAe,QADyB;AACfhI,IAAAA,IAAAA,EAAQ;AADO,GAD9DvV;AAPuD,CA/L9CiO,EAwM8C;AAIvDkP,EAAAA,QAAAA,EAAY,oBAJ2C;AAKvDC,EAAAA,QAAAA,EAAY,kBAL2C;AAMvDC,EAAAA,QAAAA,EAAY,SAN2C;AAOvDrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,eADrCvd;AACsDuV,IAAAA,IAAAA,EAAQ;AAD9DvV,GAAAA;AAPuD,CAxM9CiO,CFAN;AAAA,IEgN2D,OAAA,GAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,IAAA,EAAA;AAAA,CAAA,CFhN3D;AAAA,IGAMA,MAAAA,GAAAA,CAAAA;AAETkP,EAAAA,QAAAA,EAAY,SAFHlP;AAGTmP,EAAAA,QAAAA,EAAY,SAHHnP;AAIToP,EAAAA,QAAAA,EAAY,aAJHpP;AAKTjO,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Cwd,IAAAA,WAAAA,EAAe,SADgC;AACrBD,IAAAA,WAAAA,EAAe,SADM;AACKhI,IAAAA,IAAAA,EAAQ;AADb,GADlDvV,EAE+D;AAC5Dwd,IAAAA,WAAAA,EAAe,SAD6C;AAClCD,IAAAA,WAAAA,EAAe,KADmB;AACZhI,IAAAA,IAAAA,EAAQ;AADI,GAF/DvV,EAG2D;AACvDwd,IAAAA,WAAAA,EAAe,aADwC;AAEvDD,IAAAA,WAAAA,EAAe,YAFwC;AAGvDhI,IAAAA,IAAAA,EAAQ,QAH+C;AAIvDkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJuC,GAH3Dzd,EAOoB;AAEjBwd,IAAAA,WAAAA,EAAe,OAFE;AAEOD,IAAAA,WAAAA,EAAe,YAFtB;AAEoChI,IAAAA,IAAAA,EAAQ;AAF5C,GAPpBvV,EASgE;AAE5Dwd,IAAAA,WAAAA,EAAe,GAF6C;AAG5DD,IAAAA,WAAAA,EAAe,OAH6C;AAI5DhI,IAAAA,IAAAA,EAAQ,OAJoD;AAK5DkI,IAAAA,YAAAA,EAAAA,CAAgB;AAL4C,GAThEzd;AALSiO,CAAAA,EAmBW;AAKpBkP,EAAAA,QAAAA,EAAY,SALQ;AAMpBC,EAAAA,QAAAA,EAAY,SANQ;AAOpBC,EAAAA,QAAAA,EAAY,aAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Cwd,IAAAA,WAAAA,EAAe,SADgC;AACrBD,IAAAA,WAAAA,EAAe,SADM;AACKhI,IAAAA,IAAAA,EAAQ;AADb,GADlDvV,EAE+D;AAC5Dwd,IAAAA,WAAAA,EAAe,SAD6C;AAClCD,IAAAA,WAAAA,EAAe,KADmB;AACZhI,IAAAA,IAAAA,EAAQ;AADI,GAF/DvV,EAG2D;AACvDwd,IAAAA,WAAAA,EAAe,aADwC;AAEvDD,IAAAA,WAAAA,EAAe,YAFwC;AAGvDhI,IAAAA,IAAAA,EAAQ,QAH+C;AAIvDkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJuC,GAH3Dzd,EAOoB;AAEjBwd,IAAAA,WAAAA,EAAe,OAFE;AAEOD,IAAAA,WAAAA,EAAe,YAFtB;AAEoChI,IAAAA,IAAAA,EAAQ;AAF5C,GAPpBvV,EASgE;AAE5Dwd,IAAAA,WAAAA,EAAe,GAF6C;AAG5DD,IAAAA,WAAAA,EAAe,OAH6C;AAI5DhI,IAAAA,IAAAA,EAAQ,OAJoD;AAK5DkI,IAAAA,YAAAA,EAAAA,CAAgB;AAL4C,GAThEzd;AARoB,CAnBXiO,EAyCW;AAKpBkP,EAAAA,QAAAA,EAAY,QALQ;AAMpBC,EAAAA,QAAAA,EAAY,QANQ;AAOpBC,EAAAA,QAAAA,EAAY,aAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,QADa;AACHhI,IAAAA,IAAAA,EAAQ;AADL,GADlDvV,EAEuD;AACpDwd,IAAAA,WAAAA,EAAe,QADqC;AAC3BD,IAAAA,WAAAA,EAAe,QADY;AACFhI,IAAAA,IAAAA,EAAQ;AADN,GAFvDvV,EAG6D;AAC1Dwd,IAAAA,WAAAA,EAAe,SAD2C;AAChCD,IAAAA,WAAAA,EAAe,KADiB;AACVhI,IAAAA,IAAAA,EAAQ;AADE,GAH7DvV,EAI2D;AACvDwd,IAAAA,WAAAA,EAAe,aADwC;AAEvDD,IAAAA,WAAAA,EAAe,YAFwC;AAGvDhI,IAAAA,IAAAA,EAAQ,QAH+C;AAIvDuE,IAAAA,YAAAA,EAAgB;AAJuC,GAJ3D9Z,EAQoB;AAGhBwd,IAAAA,WAAAA,EAAe,GAHC;AAIhBD,IAAAA,WAAAA,EAAe,OAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,OALQ;AAMhBkI,IAAAA,YAAAA,EAAAA,CAAgB;AANA,GARpBzd,EAcoB;AAGhBwd,IAAAA,WAAAA,EAAe,UAHC;AAIhBD,IAAAA,WAAAA,EAAe,UAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,QALQ;AAMhBuE,IAAAA,YAAAA,EAAgB;AANA,GAdpB9Z;AARoB,CAzCXiO,EAqEW;AAKpBkP,EAAAA,QAAAA,EAAY,QALQ;AAMpBC,EAAAA,QAAAA,EAAY,QANQ;AAOpBC,EAAAA,QAAAA,EAAY,aAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,QADa;AACHhI,IAAAA,IAAAA,EAAQ;AADL,GADlDvV,EAEuD;AACnDwd,IAAAA,WAAAA,EAAe,GADoC;AAEnDD,IAAAA,WAAAA,EAAe,OAFoC;AAGnDhI,IAAAA,IAAAA,EAAQ,OAH2C;AAInDkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJmC,GAFvDzd,EAMoB;AAEjBwd,IAAAA,WAAAA,EAAe,SAFE;AAESD,IAAAA,WAAAA,EAAe,SAFxB;AAEmChI,IAAAA,IAAAA,EAAQ;AAF3C,GANpBvV,EAQ+D;AAC5Dwd,IAAAA,WAAAA,EAAe,SAD6C;AAClCD,IAAAA,WAAAA,EAAe,KADmB;AACZhI,IAAAA,IAAAA,EAAQ;AADI,GAR/DvV,EAS2D;AACvDwd,IAAAA,WAAAA,EAAe,eADwC;AAEvDD,IAAAA,WAAAA,EAAe,eAFwC;AAGvDhI,IAAAA,IAAAA,EAAQ;AAH+C,GAT3DvV,EAYY;AAGRwd,IAAAA,WAAAA,EAAe,aAHP;AAIRD,IAAAA,WAAAA,EAAe,YAJP;AAKRhI,IAAAA,IAAAA,EAAQ,QALA;AAMRuE,IAAAA,YAAAA,EAAgB;AANR,GAZZ9Z,EAkBoB;AAGhBwd,IAAAA,WAAAA,EAAe,WAHC;AAIhBD,IAAAA,WAAAA,EAAe,WAJC;AAKhBhI,IAAAA,IAAAA,EAAQ;AALQ,GAlBpBvV;AARoB,CArEXiO,EAoGG;AAKZkP,EAAAA,QAAAA,EAAY,qBALA;AAMZC,EAAAA,QAAAA,EAAY,iBANA;AAOZC,EAAAA,QAAAA,EAAY,aAPA;AAQZrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,QADa;AACHhI,IAAAA,IAAAA,EAAQ;AADL,GADlDvV,EAEuD;AACpDsd,IAAAA,YAAAA,EAAgB,CADoC;AACjCC,IAAAA,WAAAA,EAAe,aADkB;AACHhI,IAAAA,IAAAA,EAAQ;AADL,GAFvDvV,EAG4D;AACzDwd,IAAAA,WAAAA,EAAe,SAD0C;AAC/BD,IAAAA,WAAAA,EAAe,SADgB;AACLhI,IAAAA,IAAAA,EAAQ;AADH,GAH5DvV,EAI+D;AAC5Dwd,IAAAA,WAAAA,EAAe,SAD6C;AAClCD,IAAAA,WAAAA,EAAe,KADmB;AACZhI,IAAAA,IAAAA,EAAQ;AADI,GAJ/DvV,EAK2D;AACvDwd,IAAAA,WAAAA,EAAe,aADwC;AAEvDD,IAAAA,WAAAA,EAAe,YAFwC;AAGvDhI,IAAAA,IAAAA,EAAQ,QAH+C;AAIvDkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJuC,GAL3Dzd;AARY,CApGHiO,EAqHW;AAKpBkP,EAAAA,QAAAA,EAAY,iBALQ;AAMpBC,EAAAA,QAAAA,EAAY,iBANQ;AAOpBC,EAAAA,QAAAA,EAAY,aAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,OADrCvd;AAC8CuV,IAAAA,IAAAA,EAAQ;AADtDvV,GAAAA,EACsD;AACnDsd,IAAAA,YAAAA,EAAgB,CADmC;AAChCC,IAAAA,WAAAA,EAAe,QADiB;AACPhI,IAAAA,IAAAA,EAAQ;AADD,GADtDvV,EAEuD;AACpDwd,IAAAA,WAAAA,EAAe,SADqC;AAC1BD,IAAAA,WAAAA,EAAe,SADW;AACAhI,IAAAA,IAAAA,EAAQ;AADR,GAFvDvV,EAG+D;AAC5Dwd,IAAAA,WAAAA,EAAe,SAD6C;AAClCD,IAAAA,WAAAA,EAAe,KADmB;AACZhI,IAAAA,IAAAA,EAAQ;AADI,GAH/DvV,EAI2D;AACvDwd,IAAAA,WAAAA,EAAe,aADwC;AAEvDD,IAAAA,WAAAA,EAAe,YAFwC;AAGvDhI,IAAAA,IAAAA,EAAQ,QAH+C;AAIvDuE,IAAAA,YAAAA,EAAgB;AAJuC,GAJ3D9Z,EAQoB;AAGhBwd,IAAAA,WAAAA,EAAe,WAHC;AAIhBD,IAAAA,WAAAA,EAAe,WAJC;AAKhBhI,IAAAA,IAAAA,EAAQ;AALQ,GARpBvV;AARoB,CArHXiO,EA0IG;AAKZkP,EAAAA,QAAAA,EAAY,uBALA;AAMZC,EAAAA,QAAAA,EAAY,iBANA;AAOZC,EAAAA,QAAAA,EAAY,aAPA;AAQZrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,OADrCvd;AAC8CuV,IAAAA,IAAAA,EAAQ;AADtDvV,GAAAA,EACsD;AACnDsd,IAAAA,YAAAA,EAAgB,CADmC;AAChCC,IAAAA,WAAAA,EAAe,QADiB;AACPhI,IAAAA,IAAAA,EAAQ;AADD,GADtDvV,EAEuD;AACpDwd,IAAAA,WAAAA,EAAe,SADqC;AAC1BD,IAAAA,WAAAA,EAAe,SADW;AACAhI,IAAAA,IAAAA,EAAQ;AADR,GAFvDvV,EAG+D;AAC5Dwd,IAAAA,WAAAA,EAAe,SAD6C;AAClCD,IAAAA,WAAAA,EAAe,KADmB;AACZhI,IAAAA,IAAAA,EAAQ;AADI,GAH/DvV,EAI2D;AACvDwd,IAAAA,WAAAA,EAAe,aADwC;AAEvDD,IAAAA,WAAAA,EAAe,YAFwC;AAGvDhI,IAAAA,IAAAA,EAAQ,QAH+C;AAIvDuE,IAAAA,YAAAA,EAAgB;AAJuC,GAJ3D9Z,EAQoB;AAGhBwd,IAAAA,WAAAA,EAAe,WAHC;AAIhBD,IAAAA,WAAAA,EAAe,WAJC;AAKhBhI,IAAAA,IAAAA,EAAQ;AALQ,GARpBvV;AARY,CA1IHiO,CHAN;AAAA,IG+JS,WAAA,GAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,IAAA,EAAA;AAAA,CAAA,CH/JT;AAAA,IIAMA,MAAAA,GAAAA,CAAAA;AAETkP,EAAAA,QAAAA,EAAY,MAFHlP;AAGTmP,EAAAA,QAAAA,EAAY,MAHHnP;AAIToP,EAAAA,QAAAA,EAAY,UAJHpP;AAKTjO,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,OADrCvd;AAC8CuV,IAAAA,IAAAA,EAAQ;AADtDvV,GAAAA,EACsD;AACnDsd,IAAAA,YAAAA,EAAgB,CADmC;AAChCC,IAAAA,WAAAA,EAAe,OADiB;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADtDvV,EAEsD;AACnDwd,IAAAA,WAAAA,EAAe,GADoC;AAC/BD,IAAAA,WAAAA,EAAe,OADgB;AACPhI,IAAAA,IAAAA,EAAQ;AADD,GAFtDvV;AALSiO,CAAAA,EAQ8C;AAIvDkP,EAAAA,QAAAA,EAAY,UAJ2C;AAKvDC,EAAAA,QAAAA,EAAY,UAL2C;AAMvDC,EAAAA,QAAAA,EAAY,UAN2C;AAOvDrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,OADrCvd;AAC8CuV,IAAAA,IAAAA,EAAQ;AADtDvV,GAAAA,EACsD;AACnDsd,IAAAA,YAAAA,EAAgB,CADmC;AAChCC,IAAAA,WAAAA,EAAe,MADiB;AACThI,IAAAA,IAAAA,EAAQ;AADC,GADtDvV,EAEqD;AAClDsd,IAAAA,YAAAA,EAAgB,CADkC;AAC/BC,IAAAA,WAAAA,EAAe,KADgB;AACThI,IAAAA,IAAAA,EAAQ;AADC,GAFrDvV,EAGoD;AAChDwd,IAAAA,WAAAA,EAAe,GADiC;AAEhDD,IAAAA,WAAAA,EAAe,OAFiC;AAGhDhI,IAAAA,IAAAA,EAAQ,OAHwC;AAIhDkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJgC,GAHpDzd;AAPuD,CAR9CiO,EAsBW;AAKpBkP,EAAAA,QAAAA,EAAY,QALQ;AAMpBC,EAAAA,QAAAA,EAAY,QANQ;AAOpBC,EAAAA,QAAAA,EAAY,UAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,SADrCvd;AACgDuV,IAAAA,IAAAA,EAAQ;AADxDvV,GAAAA,EACwD;AACrDsd,IAAAA,YAAAA,EAAgB,CADqC;AAClCC,IAAAA,WAAAA,EAAe,OADmB;AACVhI,IAAAA,IAAAA,EAAQ;AADE,GADxDvV,EAEsD;AAClDsd,IAAAA,YAAAA,EAAgB,CADkC;AAElDC,IAAAA,WAAAA,EAAe,SAFmC;AAGlDhI,IAAAA,IAAAA,EAAQ,QAH0C;AAIlDuE,IAAAA,YAAAA,EAAgB;AAJkC,GAFtD9Z,EAMoB;AAGhBsd,IAAAA,YAAAA,EAAgB,CAHA;AAIhBC,IAAAA,WAAAA,EAAe,UAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,QALQ;AAMhBuE,IAAAA,YAAAA,EAAgB;AANA,GANpB9Z,EAYoB;AAGhBwd,IAAAA,WAAAA,EAAe,MAHC;AAIhBD,IAAAA,WAAAA,EAAe,MAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,QALQ;AAMhBkI,IAAAA,YAAAA,EAAAA,CAAgB;AANA,GAZpBzd,EAkBoB;AAGhBwd,IAAAA,WAAAA,EAAe,GAHC;AAIhBD,IAAAA,WAAAA,EAAe,OAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,OALQ;AAMhBkI,IAAAA,YAAAA,EAAAA,CAAgB;AANA,GAlBpBzd;AARoB,CAtBXiO,EAsDW;AAKpBkP,EAAAA,QAAAA,EAAY,MALQ;AAMpBC,EAAAA,QAAAA,EAAY,MANQ;AAOpBC,EAAAA,QAAAA,EAAY,UAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,OADrCvd;AAC8CuV,IAAAA,IAAAA,EAAQ;AADtDvV,GAAAA,EACsD;AACnDwd,IAAAA,WAAAA,EAAe,GADoC;AAC/BD,IAAAA,WAAAA,EAAe,OADgB;AACPhI,IAAAA,IAAAA,EAAQ;AADD,GADtDvV;AARoB,CAtDXiO,EAgE8C;AAIvDkP,EAAAA,QAAAA,EAAY,UAJ2C;AAKvDC,EAAAA,QAAAA,EAAY,UAL2C;AAMvDC,EAAAA,QAAAA,EAAY,UAN2C;AAOvDrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Cwd,IAAAA,WAAAA,EAAe,OADgC;AACvBD,IAAAA,WAAAA,EAAe,OADQ;AACChI,IAAAA,IAAAA,EAAQ;AADT,GADlDvV;AAPuD,CAhE9CiO,EAyEkD;AAI3DkP,EAAAA,QAAAA,EAAY,eAJ+C;AAK3DC,EAAAA,QAAAA,EAAY,eAL+C;AAM3DC,EAAAA,QAAAA,EAAY,UAN+C;AAO3Drd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,OADrCvd;AAC8CuV,IAAAA,IAAAA,EAAQ;AADtDvV,GAAAA,EACsD;AAClDwd,IAAAA,WAAAA,EAAe,QADmC;AAElDD,IAAAA,WAAAA,EAAe,QAFmC;AAGlDhI,IAAAA,IAAAA,EAAQ,QAH0C;AAIlDuE,IAAAA,YAAAA,EAAgB;AAJkC,GADtD9Z,EAKoB;AAGhBwd,IAAAA,WAAAA,EAAe,QAHC;AAIhBD,IAAAA,WAAAA,EAAe,QAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,QALQ;AAMhBuE,IAAAA,YAAAA,EAAgB;AANA,GALpB9Z,EAWoB;AAEjBwd,IAAAA,WAAAA,EAAe,OAFE;AAEOD,IAAAA,WAAAA,EAAe,OAFtB;AAE+BhI,IAAAA,IAAAA,EAAQ;AAFvC,GAXpBvV,EAa2D;AACvDwd,IAAAA,WAAAA,EAAe,MADwC;AAEvDD,IAAAA,WAAAA,EAAe,MAFwC;AAGvDhI,IAAAA,IAAAA,EAAQ,QAH+C;AAIvDuE,IAAAA,YAAAA,EAAgB;AAJuC,GAb3D9Z,EAiBoB;AAGhBwd,IAAAA,WAAAA,EAAe,OAHC;AAIhBD,IAAAA,WAAAA,EAAe,OAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,QALQ;AAMhBuE,IAAAA,YAAAA,EAAgB,CANA;AAOhB2D,IAAAA,YAAAA,EAAAA,CAAgB;AAPA,GAjBpBzd,EAwBoB;AAGhBwd,IAAAA,WAAAA,EAAe,GAHC;AAIhBD,IAAAA,WAAAA,EAAe,GAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,QALQ;AAMhBkI,IAAAA,YAAAA,EAAAA,CAAgB;AANA,GAxBpBzd;AAP2D,CAzElDiO,EA8GW;AAKpBkP,EAAAA,QAAAA,EAAY,OALQ;AAMpBC,EAAAA,QAAAA,EAAY,OANQ;AAOpBC,EAAAA,QAAAA,EAAY,UAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,OADrCvd;AAC8CuV,IAAAA,IAAAA,EAAQ;AADtDvV,GAAAA,EACsD;AACnDsd,IAAAA,YAAAA,EAAgB,CADmC;AAChCC,IAAAA,WAAAA,EAAe,MADiB;AACThI,IAAAA,IAAAA,EAAQ;AADC,GADtDvV,EAEqD;AACjDsd,IAAAA,YAAAA,EAAgB,CADiC;AAEjDC,IAAAA,WAAAA,EAAe,MAFkC;AAGjDhI,IAAAA,IAAAA,EAAQ,QAHyC;AAIjDuE,IAAAA,YAAAA,EAAgB;AAJiC,GAFrD9Z,EAMoB;AAEjBwd,IAAAA,WAAAA,EAAe,MAFE;AAEMD,IAAAA,WAAAA,EAAe,OAFrB;AAE8BhI,IAAAA,IAAAA,EAAQ;AAFtC,GANpBvV;AARoB,CA9GXiO,EA8HiD;AAI1DkP,EAAAA,QAAAA,EAAY,iBAJ8C;AAK1DC,EAAAA,QAAAA,EAAY,iBAL8C;AAM1DC,EAAAA,QAAAA,EAAY,UAN8C;AAO1Drd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,OADrCvd;AAC8CuV,IAAAA,IAAAA,EAAQ;AADtDvV,GAAAA,EACsD;AAClDwd,IAAAA,WAAAA,EAAe,OADmC;AAElDD,IAAAA,WAAAA,EAAe,MAFmC;AAGlDhI,IAAAA,IAAAA,EAAQ,QAH0C;AAIlDuE,IAAAA,YAAAA,EAAgB;AAJkC,GADtD9Z,EAKoB;AAGhBwd,IAAAA,WAAAA,EAAe,QAHC;AAIhBD,IAAAA,WAAAA,EAAe,QAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,QALQ;AAMhBuE,IAAAA,YAAAA,EAAgB;AANA,GALpB9Z,EAWoB;AAEjBwd,IAAAA,WAAAA,EAAe,MAFE;AAEMD,IAAAA,WAAAA,EAAe,MAFrB;AAE6BhI,IAAAA,IAAAA,EAAQ;AAFrC,GAXpBvV,EAayD;AACrDwd,IAAAA,WAAAA,EAAe,OADsC;AAErDD,IAAAA,WAAAA,EAAe,OAFsC;AAGrDhI,IAAAA,IAAAA,EAAQ,QAH6C;AAIrDuE,IAAAA,YAAAA,EAAgB,CAJqC;AAKrD2D,IAAAA,YAAAA,EAAAA,CAAgB;AALqC,GAbzDzd,EAkBoB;AAEjBwd,IAAAA,WAAAA,EAAe,OAFE;AAEOD,IAAAA,WAAAA,EAAe,OAFtB;AAE+BhI,IAAAA,IAAAA,EAAQ;AAFvC,GAlBpBvV,EAoB2D;AACvDwd,IAAAA,WAAAA,EAAe,GADwC;AAEvDD,IAAAA,WAAAA,EAAe,GAFwC;AAGvDhI,IAAAA,IAAAA,EAAQ,QAH+C;AAIvDkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJuC,GApB3Dzd;AAP0D,CA9HjDiO,EA6JW;AAKpBkP,EAAAA,QAAAA,EAAY,OALQ;AAMpBC,EAAAA,QAAAA,EAAY,OANQ;AAOpBC,EAAAA,QAAAA,EAAY,UAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,OADrCvd;AAC8CuV,IAAAA,IAAAA,EAAQ;AADtDvV,GAAAA,EACsD;AACnDwd,IAAAA,WAAAA,EAAe,GADoC;AAC/BD,IAAAA,WAAAA,EAAe,OADgB;AACPhI,IAAAA,IAAAA,EAAQ;AADD,GADtDvV;AARoB,CA7JXiO,EAuK8C;AAIvDkP,EAAAA,QAAAA,EAAY,WAJ2C;AAKvDC,EAAAA,QAAAA,EAAY,WAL2C;AAMvDC,EAAAA,QAAAA,EAAY,UAN2C;AAOvDrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Cwd,IAAAA,WAAAA,EAAe,GADgC;AAC3BD,IAAAA,WAAAA,EAAe,OADY;AACHhI,IAAAA,IAAAA,EAAQ;AADL,GADlDvV;AAPuD,CAvK9CiO,CJAN;AAAA,IIgLoD,QAAA,GAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,IAAA,EAAA;AAAA,CAAA,CJhLpD;AAAA,IKAMA,MAAAA,GAAAA,CAAAA;AAETkP,EAAAA,QAAAA,EAAY,qBAFHlP;AAGTmP,EAAAA,QAAAA,EAAY,mBAHHnP;AAIToP,EAAAA,QAAAA,EAAY,SAJHpP;AAKTjO,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,OADrCvd;AAC8CuV,IAAAA,IAAAA,EAAQ;AADtDvV,GAAAA,EACsD;AACnDsd,IAAAA,YAAAA,EAAgB,CADmC;AAChCC,IAAAA,WAAAA,EAAe,QADiB;AACPhI,IAAAA,IAAAA,EAAQ;AADD,GADtDvV,EAEuD;AACpDsd,IAAAA,YAAAA,EAAgB,CADoC;AACjCC,IAAAA,WAAAA,EAAe,eADkB;AACDhI,IAAAA,IAAAA,EAAQ;AADP,GAFvDvV,EAG8D;AAC3Dsd,IAAAA,YAAAA,EAAgB,CAD2C;AACxCC,IAAAA,WAAAA,EAAe,cADyB;AACThI,IAAAA,IAAAA,EAAQ;AADC,GAH9DvV;AALSiO,CAAAA,EASoD;AAI7DkP,EAAAA,QAAAA,EAAY,qBAJiD;AAK7DC,EAAAA,QAAAA,EAAY,mBALiD;AAM7DC,EAAAA,QAAAA,EAAY,SANiD;AAO7Drd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,OADrCvd;AAC8CuV,IAAAA,IAAAA,EAAQ;AADtDvV,GAAAA,EACsD;AACnDsd,IAAAA,YAAAA,EAAgB,CADmC;AAChCC,IAAAA,WAAAA,EAAe,QADiB;AACPhI,IAAAA,IAAAA,EAAQ;AADD,GADtDvV,EAEuD;AACpDsd,IAAAA,YAAAA,EAAgB,CADoC;AACjCC,IAAAA,WAAAA,EAAe,eADkB;AACDhI,IAAAA,IAAAA,EAAQ;AADP,GAFvDvV,EAG8D;AAC3Dsd,IAAAA,YAAAA,EAAgB,CAD2C;AACxCC,IAAAA,WAAAA,EAAe,cADyB;AACThI,IAAAA,IAAAA,EAAQ;AADC,GAH9DvV,EAI6D;AAC1Dsd,IAAAA,YAAAA,EAAgB,CAD0C;AACvCC,IAAAA,WAAAA,EAAe,gBADwB;AACNhI,IAAAA,IAAAA,EAAQ;AADF,GAJ7DvV;AAP6D,CATpDiO,EAqBsD;AAI/DkP,EAAAA,QAAAA,EAAY,OAJmD;AAK/DC,EAAAA,QAAAA,EAAY,YALmD;AAM/DC,EAAAA,QAAAA,EAAY,SANmD;AAO/Drd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,WADrCvd;AACkDuV,IAAAA,IAAAA,EAAQ;AAD1DvV,GAAAA,EAC0D;AACtDwd,IAAAA,WAAAA,EAAe,GADuC;AAEtDD,IAAAA,WAAAA,EAAe,OAFuC;AAGtDhI,IAAAA,IAAAA,EAAQ,OAH8C;AAItDkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJsC,GAD1Dzd;AAP+D,CArBtDiO,EAiCW;AAKpBkP,EAAAA,QAAAA,EAAY,UALQ;AAMpBC,EAAAA,QAAAA,EAAY,gBANQ;AAOpBC,EAAAA,QAAAA,EAAY,SAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlDzd;AARoB,CAjCXiO,CLAN;AAAA,IK+CiB,OAAA,GAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,IAAA,EAAA;AAAA,CAAA,CL/CjB;AAAA,IMAMA,MAAAA,GAAAA,CAAAA;AACXkP,EAAAA,QAAAA,EAAY,QADDlP;AAEXmP,EAAAA,QAAAA,EAAY,MAFDnP;AAGXoP,EAAAA,QAAAA,EAAY,YAHDpP;AAIXjO,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC/Cwd,IAAAA,WAAAA,EAAe,QADgC;AACtBD,IAAAA,WAAAA,EAAe,QADO;AACGhI,IAAAA,IAAAA,EAAQ;AADX,GAFlDvV;AAJWiO,CAAAA,CNAN;AAAA,IMOwD,UAAA,GAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,IAAA,EAAA;AAAA,CAAA,CNPxD;AAAA,IOAMA,MAAAA,GAAAA,CAAAA;AAETkP,EAAAA,QAAAA,EAAY,wBAFHlP;AAGTmP,EAAAA,QAAAA,EAAY,aAHHnP;AAIToP,EAAAA,QAAAA,EAAY,OAJHpP;AAKTjO,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,SADrCvd;AACgDuV,IAAAA,IAAAA,EAAQ;AADxDvV,GAAAA,EACwD;AACrDwd,IAAAA,WAAAA,EAAe,OADsC;AAC7BD,IAAAA,WAAAA,EAAe,OADc;AACLhI,IAAAA,IAAAA,EAAQ;AADH,GADxDvV,EAE2D;AACxDwd,IAAAA,WAAAA,EAAe,OADyC;AAChCD,IAAAA,WAAAA,EAAe,OADiB;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GAF3DvV;AALSiO,CAAAA,EAQkD;AAI3DkP,EAAAA,QAAAA,EAAY,aAJ+C;AAK3DC,EAAAA,QAAAA,EAAY,aAL+C;AAM3DC,EAAAA,QAAAA,EAAY,OAN+C;AAO3Drd,EAAAA,MAAAA,EAAAA,CAAAA;AACGwd,IAAAA,WAAAA,EAAe,OADlBxd;AAC2Bud,IAAAA,WAAAA,EAAe,OAD1Cvd;AACmDuV,IAAAA,IAAAA,EAAQ;AAD3DvV,GAAAA,EAC2D;AACxDwd,IAAAA,WAAAA,EAAe,OADyC;AAChCD,IAAAA,WAAAA,EAAe,OADiB;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GAD3DvV;AAP2D,CARlDiO,EAiBkD;AAG5DkP,EAAAA,QAAAA,EAAY,OAHgD;AAGvCC,EAAAA,QAAAA,EAAY,OAH2B;AAGlBC,EAAAA,QAAAA,EAAY;AAHM,CAjBlDpP,EAoB4C;AACrDkP,EAAAA,QAAAA,EAAY,UADyC;AAErDC,EAAAA,QAAAA,EAAY,UAFyC;AAGrDC,EAAAA,QAAAA,EAAY,OAHyC;AAIrDrd,EAAAA,MAAAA,EAAAA,CAAAA;AAAYsd,IAAAA,YAAAA,EAAgB,CAA5Btd;AAA+Bud,IAAAA,WAAAA,EAAe,GAA9Cvd;AAAmDuV,IAAAA,IAAAA,EAAQ;AAA3DvV,GAAAA;AAJqD,CApB5CiO,EAwBkD;AAG3DkP,EAAAA,QAAAA,EAAY,UAH+C;AAI3DC,EAAAA,QAAAA,EAAY,UAJ+C;AAK3DC,EAAAA,QAAAA,EAAY,OAL+C;AAM3Drd,EAAAA,MAAAA,EAAAA,CAAAA;AAAYsd,IAAAA,YAAAA,EAAgB,CAA5Btd;AAA+Bud,IAAAA,WAAAA,EAAe,GAA9Cvd;AAAmDuV,IAAAA,IAAAA,EAAQ;AAA3DvV,GAAAA;AAN2D,CAxBlDiO,EA8BkD;AAG3DkP,EAAAA,QAAAA,EAAY,MAH+C;AAI3DC,EAAAA,QAAAA,EAAY,MAJ+C;AAK3DC,EAAAA,QAAAA,EAAY,OAL+C;AAM3Drd,EAAAA,MAAAA,EAAAA,CAAAA;AAAYsd,IAAAA,YAAAA,EAAgB,CAA5Btd;AAA+Bud,IAAAA,WAAAA,EAAe,GAA9Cvd;AAAmDuV,IAAAA,IAAAA,EAAQ;AAA3DvV,GAAAA;AAN2D,CA9BlDiO,EAoCkD;AAG3DkP,EAAAA,QAAAA,EAAY,MAH+C;AAI3DC,EAAAA,QAAAA,EAAY,MAJ+C;AAK3DC,EAAAA,QAAAA,EAAY,OAL+C;AAM3Drd,EAAAA,MAAAA,EAAAA,CAAAA;AAAYsd,IAAAA,YAAAA,EAAgB,CAA5Btd;AAA+Bud,IAAAA,WAAAA,EAAe,GAA9Cvd;AAAmDuV,IAAAA,IAAAA,EAAQ;AAA3DvV,GAAAA;AAN2D,CApClDiO,EA0CkD;AAG3DkP,EAAAA,QAAAA,EAAY,OAH+C;AAI3DC,EAAAA,QAAAA,EAAY,OAJ+C;AAK3DC,EAAAA,QAAAA,EAAY,OAL+C;AAM3Drd,EAAAA,MAAAA,EAAAA,CAAAA;AAAYsd,IAAAA,YAAAA,EAAgB,CAA5Btd;AAA+Bud,IAAAA,WAAAA,EAAe,GAA9Cvd;AAAmDuV,IAAAA,IAAAA,EAAQ;AAA3DvV,GAAAA;AAN2D,CA1ClDiO,EAgDkD;AAG3DkP,EAAAA,QAAAA,EAAY,QAH+C;AAI3DC,EAAAA,QAAAA,EAAY,QAJ+C;AAK3DC,EAAAA,QAAAA,EAAY,OAL+C;AAM3Drd,EAAAA,MAAAA,EAAAA,CAAAA;AACEsd,IAAAA,YAAAA,EAAgB,CADlBtd;AAEE0d,IAAAA,kBAAAA,EAAsB,CAFxB1d;AAGEud,IAAAA,WAAAA,EAAe,GAHjBvd;AAIEuV,IAAAA,IAAAA,EAAQ;AAJVvV,GAAAA;AAN2D,CAhDlDiO,EA0DC;AAIVkP,EAAAA,QAAAA,EAAY,OAJF;AAKVC,EAAAA,QAAAA,EAAY,OALF;AAMVC,EAAAA,QAAAA,EAAY,OANF;AAOVrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Csd,IAAAA,YAAAA,EAAgB,CAD8B;AAE9CI,IAAAA,kBAAAA,EAAsB,CAFwB;AAG9CH,IAAAA,WAAAA,EAAe,MAH+B;AAI9ChI,IAAAA,IAAAA,EAAQ;AAJsC,GADlDvV,EAKY;AAETwd,IAAAA,WAAAA,EAAe,SAFN;AAEiBD,IAAAA,WAAAA,EAAe,SAFhC;AAE2ChI,IAAAA,IAAAA,EAAQ;AAFnD,GALZvV,EAO+D;AAC3Dwd,IAAAA,WAAAA,EAAe,SAD4C;AAE3DD,IAAAA,WAAAA,EAAe,QAF4C;AAG3DhI,IAAAA,IAAAA,EAAQ,QAHmD;AAI3DoI,IAAAA,WAAAA,EAAAA,CAAe;AAJ4C,GAP/D3d,EAWmB;AAGfwd,IAAAA,WAAAA,EAAe,WAHA;AAIfD,IAAAA,WAAAA,EAAe,WAJA;AAKfhI,IAAAA,IAAAA,EAAQ,QALO;AAMfuE,IAAAA,YAAAA,EAAgB;AAND,GAXnB9Z;AAPU,CA1DDiO,EAkFW;AAIrBkP,EAAAA,QAAAA,EAAY,MAJS;AAIDC,EAAAA,QAAAA,EAAY,MAJX;AAImBC,EAAAA,QAAAA,EAAY,OAJ/B;AAIwCrd,EAAAA,MAAAA,EAAAA;AAJxC,CAlFXiO,EAsFmDjO;AAC5Dmd,EAAAA,QAAAA,EAAY,cADgDnd;AAE5Dod,EAAAA,QAAAA,EAAY,cAFgDpd;AAG5Dqd,EAAAA,QAAAA,EAAY,OAHgDrd;AAI5DA,EAAAA,MAAAA,EAAAA,CAAAA;AAAYsd,IAAAA,YAAAA,EAAgB,CAA5Btd;AAA+Bud,IAAAA,WAAAA,EAAe,GAA9Cvd;AAAmDuV,IAAAA,IAAAA,EAAQ;AAA3DvV,GAAAA;AAJ4DA,CAtFnDiO,EA0FkD;AAG3DkP,EAAAA,QAAAA,EAAY,yBAH+C;AAI3DC,EAAAA,QAAAA,EAAY,yBAJ+C;AAK3DC,EAAAA,QAAAA,EAAY,OAL+C;AAM3Drd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Cwd,IAAAA,WAAAA,EAAe,KADgC;AACzBD,IAAAA,WAAAA,EAAe,KADU;AACHhI,IAAAA,IAAAA,EAAQ;AADL,GADlDvV,EAEuD;AACpDwd,IAAAA,WAAAA,EAAe,KADqC;AAC9BD,IAAAA,WAAAA,EAAe,KADe;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GAFvDvV;AAN2D,CA1FlDiO,CPAN;AAAA,IOmGoD,KAAA,GAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,IAAA,EAAA;AAAA,CAAA,CPnGpD;AAAA,IQAMA,MAAAA,GAAAA,CAAAA;AAETkP,EAAAA,QAAAA,EAAY,gBAFHlP;AAGTmP,EAAAA,QAAAA,EAAY,gBAHHnP;AAIToP,EAAAA,QAAAA,EAAY,OAJHpP;AAKTjO,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,QADrCvd;AAC+CuV,IAAAA,IAAAA,EAAQ;AADvDvV,GAAAA,EACuD;AACpDsd,IAAAA,YAAAA,EAAgB,CADoC;AACjCC,IAAAA,WAAAA,EAAe,MADkB;AACVhI,IAAAA,IAAAA,EAAQ;AADE,GADvDvV,EAEqD;AACjDwd,IAAAA,WAAAA,EAAe,eADkC;AAEjDD,IAAAA,WAAAA,EAAe,cAFkC;AAGjDhI,IAAAA,IAAAA,EAAQ;AAHyC,GAFrDvV,EAKY;AAGRwd,IAAAA,WAAAA,EAAe,GAHP;AAIRD,IAAAA,WAAAA,EAAe,OAJP;AAKRhI,IAAAA,IAAAA,EAAQ,OALA;AAMRkI,IAAAA,YAAAA,EAAAA,CAAgB;AANR,GALZzd;AALSiO,CAAAA,EAgBW;AAKpBkP,EAAAA,QAAAA,EAAY,uBALQ;AAMpBC,EAAAA,QAAAA,EAAY,uBANQ;AAOpBC,EAAAA,QAAAA,EAAY,OAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,QADrCvd;AAC+CuV,IAAAA,IAAAA,EAAQ;AADvDvV,GAAAA,EACuD;AACpDsd,IAAAA,YAAAA,EAAgB,CADoC;AACjCC,IAAAA,WAAAA,EAAe,MADkB;AACVhI,IAAAA,IAAAA,EAAQ;AADE,GADvDvV,EAEqD;AACjDwd,IAAAA,WAAAA,EAAe,eADkC;AAEjDD,IAAAA,WAAAA,EAAe,cAFkC;AAGjDhI,IAAAA,IAAAA,EAAQ;AAHyC,GAFrDvV,EAKY;AAGRwd,IAAAA,WAAAA,EAAe,GAHP;AAIRD,IAAAA,WAAAA,EAAe,OAJP;AAKRhI,IAAAA,IAAAA,EAAQ,OALA;AAMRkI,IAAAA,YAAAA,EAAAA,CAAgB;AANR,GALZzd;AARoB,CAhBXiO,EAmCW;AAKpBkP,EAAAA,QAAAA,EAAY,eALQ;AAMpBC,EAAAA,QAAAA,EAAY,eANQ;AAOpBC,EAAAA,QAAAA,EAAY,OAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,OADrCvd;AAC8CuV,IAAAA,IAAAA,EAAQ;AADtDvV,GAAAA,EACsD;AACnDsd,IAAAA,YAAAA,EAAgB,CADmC;AAChCC,IAAAA,WAAAA,EAAe,OADiB;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADtDvV,EAEsD;AACnDsd,IAAAA,YAAAA,EAAgB,CADmC;AAChCC,IAAAA,WAAAA,EAAe,QADiB;AACPhI,IAAAA,IAAAA,EAAQ;AADD,GAFtDvV,EAGuD;AACpDsd,IAAAA,YAAAA,EAAgB,CADoC;AACjCC,IAAAA,WAAAA,EAAe,UADkB;AACNhI,IAAAA,IAAAA,EAAQ;AADF,GAHvDvV,EAIyD;AACtDwd,IAAAA,WAAAA,EAAe,QADuC;AAC7BD,IAAAA,WAAAA,EAAe,QADc;AACJhI,IAAAA,IAAAA,EAAQ;AADJ,GAJzDvV,EAK6D;AACzDwd,IAAAA,WAAAA,EAAe,qBAD0C;AAEzDD,IAAAA,WAAAA,EAAe,oBAF0C;AAGzDhI,IAAAA,IAAAA,EAAQ;AAHiD,GAL7DvV;AARoB,CAnCXiO,CRAN;AAAA,IQmDS,OAAA,GAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,IAAA,EAAA;AAAA,CAAA,CRnDT;AAAA,ISAMA,MAAAA,GAAAA,CAAAA;AAETkP,EAAAA,QAAAA,EAAY,OAFHlP;AAGTmP,EAAAA,QAAAA,EAAY,OAHHnP;AAIToP,EAAAA,QAAAA,EAAY,SAJHpP;AAKTjO,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlDzd;AALSiO,CAAAA,EAWW;AAKpBkP,EAAAA,QAAAA,EAAY,UALQ;AAMpBC,EAAAA,QAAAA,EAAY,UANQ;AAOpBC,EAAAA,QAAAA,EAAY,SAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlDzd;AARoB,CAXXiO,EAyBW;AAKpBkP,EAAAA,QAAAA,EAAY,SALQ;AAMpBC,EAAAA,QAAAA,EAAY,SANQ;AAOpBC,EAAAA,QAAAA,EAAY,SAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlDzd;AARoB,CAzBXiO,EAuCW;AAKpBkP,EAAAA,QAAAA,EAAY,cALQ;AAMpBC,EAAAA,QAAAA,EAAY,cANQ;AAOpBC,EAAAA,QAAAA,EAAY,SAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlDzd;AARoB,CAvCXiO,EAqDW;AAKpBkP,EAAAA,QAAAA,EAAY,MALQ;AAMpBC,EAAAA,QAAAA,EAAY,MANQ;AAOpBC,EAAAA,QAAAA,EAAY,SAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlDzd;AARoB,CArDXiO,EAmEW;AAKpBkP,EAAAA,QAAAA,EAAY,WALQ;AAMpBC,EAAAA,QAAAA,EAAY,WANQ;AAOpBC,EAAAA,QAAAA,EAAY,SAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlDzd;AARoB,CAnEXiO,EAiFW;AAKpBkP,EAAAA,QAAAA,EAAY,YALQ;AAMpBC,EAAAA,QAAAA,EAAY,YANQ;AAOpBC,EAAAA,QAAAA,EAAY,SAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlDzd;AARoB,CAjFXiO,EA+FW;AAKpBkP,EAAAA,QAAAA,EAAY,YALQ;AAMpBC,EAAAA,QAAAA,EAAY,YANQ;AAOpBC,EAAAA,QAAAA,EAAY,SAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CA/FXiO,EA4GW;AAKpBkP,EAAAA,QAAAA,EAAY,WALQ;AAMpBC,EAAAA,QAAAA,EAAY,WANQ;AAOpBC,EAAAA,QAAAA,EAAY,SAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlDzd;AARoB,CA5GXiO,EA0HW;AAKpBkP,EAAAA,QAAAA,EAAY,QALQ;AAMpBC,EAAAA,QAAAA,EAAY,OANQ;AAOpBC,EAAAA,QAAAA,EAAY,SAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,WADrCvd;AACkDuV,IAAAA,IAAAA,EAAQ;AAD1DvV,GAAAA,EAC0D;AACvDsd,IAAAA,YAAAA,EAAgB,CADuC;AACpCC,IAAAA,WAAAA,EAAe,GADqB;AAChBhI,IAAAA,IAAAA,EAAQ;AADQ,GAD1DvV,EAEkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GAFlDvV,EAGkD;AAC9Cwd,IAAAA,WAAAA,EAAe,GAD+B;AAE9CD,IAAAA,WAAAA,EAAe,OAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAHlDzd;AARoB,CA1HXiO,CTAN;AAAA,ISyIiB,OAAA,GAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,IAAA,EAAA;AAAA,CAAA,CTzIjB;AAAA,IUAMA,OAAAA,GAAAA,CAAAA;AAETkP,EAAAA,QAAAA,EAAY,QAFHlP;AAGTmP,EAAAA,QAAAA,EAAY,QAHHnP;AAIToP,EAAAA,QAAAA,EAAY,UAJHpP;AAKTjO,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,aAD+B;AAE9CD,IAAAA,WAAAA,EAAe,YAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,MAHsC;AAI9CuE,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlD9Z,EAMoB;AAGhBwd,IAAAA,WAAAA,EAAe,aAHC;AAIhBD,IAAAA,WAAAA,EAAe,YAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,MALQ;AAMhBuE,IAAAA,YAAAA,EAAAA,CAAgB;AANA,GANpB9Z,EAYoB;AAGhBwd,IAAAA,WAAAA,EAAe,GAHC;AAIhBD,IAAAA,WAAAA,EAAe,OAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,OALQ;AAMhBkI,IAAAA,YAAAA,EAAAA,CAAgB;AANA,GAZpBzd;AALSiO,CAAAA,EAuBW;AAKpBkP,EAAAA,QAAAA,EAAY,aALQ;AAMpBC,EAAAA,QAAAA,EAAY,QANQ;AAOpBC,EAAAA,QAAAA,EAAY,UAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,GADa;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GADlDvV,EAEkD;AAC9Cwd,IAAAA,WAAAA,EAAe,OAD+B;AAE9CD,IAAAA,WAAAA,EAAe,YAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,MAHsC;AAI9CuE,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GAFlD9Z,EAMoB;AAGhBwd,IAAAA,WAAAA,EAAe,OAHC;AAIhBD,IAAAA,WAAAA,EAAe,YAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,MALQ;AAMhBuE,IAAAA,YAAAA,EAAAA,CAAgB;AANA,GANpB9Z,EAYoB;AAGhBwd,IAAAA,WAAAA,EAAe,GAHC;AAIhBD,IAAAA,WAAAA,EAAe,OAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,OALQ;AAMhBkI,IAAAA,YAAAA,EAAAA,CAAgB;AANA,GAZpBzd;AARoB,CAvBXiO,EAiDW;AAKpBkP,EAAAA,QAAAA,EAAY,WALQ;AAMpBC,EAAAA,QAAAA,EAAY,WANQ;AAOpBC,EAAAA,QAAAA,EAAY,UAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,MADa;AACLhI,IAAAA,IAAAA,EAAQ;AADH,GADlDvV,EAEqD;AACjDwd,IAAAA,WAAAA,EAAe,GADkC;AAEjDD,IAAAA,WAAAA,EAAe,OAFkC;AAGjDhI,IAAAA,IAAAA,EAAQ,OAHyC;AAIjDkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJiC,GAFrDzd;AARoB,CAjDXiO,CVAN;AAAA,IU+DiB,QAAA,GAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,IAAA,EAAA;AAAA,CAAA,CV/DjB;AAAA,IWAMA,OAAAA,GAAAA,CAAAA;AAETkP,EAAAA,QAAAA,EAAY,gBAFHlP;AAGTmP,EAAAA,QAAAA,EAAY,oBAHHnP;AAIToP,EAAAA,QAAAA,EAAY,eAJHpP;AAKTjO,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,OADa;AACJhI,IAAAA,IAAAA,EAAQ;AADJ,GADlDvV,EAEsD;AACnDsd,IAAAA,YAAAA,EAAgB,CADmC;AAChCC,IAAAA,WAAAA,EAAe,QADiB;AACPhI,IAAAA,IAAAA,EAAQ;AADD,GAFtDvV,EAGuD;AACpDsd,IAAAA,YAAAA,EAAgB,CADoC;AACjCC,IAAAA,WAAAA,EAAe,MADkB;AACVhI,IAAAA,IAAAA,EAAQ;AADE,GAHvDvV,EAIqD;AAClDsd,IAAAA,YAAAA,EAAgB,CADkC;AAC/BC,IAAAA,WAAAA,EAAe,UADgB;AACJhI,IAAAA,IAAAA,EAAQ;AADJ,GAJrDvV,EAKyD;AACrDwd,IAAAA,WAAAA,EAAe,SADsC;AAErDD,IAAAA,WAAAA,EAAe,SAFsC;AAGrDhI,IAAAA,IAAAA,EAAQ,QAH6C;AAIrDuE,IAAAA,YAAAA,EAAgB;AAJqC,GALzD9Z,EASoB;AAGhBwd,IAAAA,WAAAA,EAAe,aAHC;AAIhBD,IAAAA,WAAAA,EAAe,YAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,QALQ;AAMhBkI,IAAAA,YAAAA,EAAAA,CAAgB;AANA,GATpBzd;AALSiO,CAAAA,EAoBW;AAKpBkP,EAAAA,QAAAA,EAAY,kBALQ;AAMpBC,EAAAA,QAAAA,EAAY,oBANQ;AAOpBC,EAAAA,QAAAA,EAAY,eAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,OADa;AACJhI,IAAAA,IAAAA,EAAQ;AADJ,GADlDvV,EAEsD;AACnDsd,IAAAA,YAAAA,EAAgB,CADmC;AAChCC,IAAAA,WAAAA,EAAe,QADiB;AACPhI,IAAAA,IAAAA,EAAQ;AADD,GAFtDvV,EAGuD;AACpDsd,IAAAA,YAAAA,EAAgB,CADoC;AACjCC,IAAAA,WAAAA,EAAe,MADkB;AACVhI,IAAAA,IAAAA,EAAQ;AADE,GAHvDvV,EAIqD;AAClDsd,IAAAA,YAAAA,EAAgB,CADkC;AAC/BC,IAAAA,WAAAA,EAAe,UADgB;AACJhI,IAAAA,IAAAA,EAAQ;AADJ,GAJrDvV,EAKyD;AACrDwd,IAAAA,WAAAA,EAAe,SADsC;AAErDD,IAAAA,WAAAA,EAAe,SAFsC;AAGrDhI,IAAAA,IAAAA,EAAQ,QAH6C;AAIrDuE,IAAAA,YAAAA,EAAgB;AAJqC,GALzD9Z,EASoB;AAGhBwd,IAAAA,WAAAA,EAAe,aAHC;AAIhBD,IAAAA,WAAAA,EAAe,YAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,QALQ;AAMhBkI,IAAAA,YAAAA,EAAAA,CAAgB;AANA,GATpBzd;AARoB,CApBXiO,EA2CW;AAKpBkP,EAAAA,QAAAA,EAAY,KALQ;AAMpBC,EAAAA,QAAAA,EAAY,4BANQ;AAOpBC,EAAAA,QAAAA,EAAY,eAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,cAD+B;AAE9CD,IAAAA,WAAAA,EAAe,QAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,QAHsC;AAI9CuE,IAAAA,YAAAA,EAAgB;AAJ8B,GADlD9Z,EAKoB;AAGhBwd,IAAAA,WAAAA,EAAe,MAHC;AAIhBD,IAAAA,WAAAA,EAAe,MAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,QALQ;AAMhBuE,IAAAA,YAAAA,EAAgB;AANA,GALpB9Z,EAWoB;AAGhBwd,IAAAA,WAAAA,EAAe,OAHC;AAIhBD,IAAAA,WAAAA,EAAe,OAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,QALQ;AAMhBuE,IAAAA,YAAAA,EAAgB;AANA,GAXpB9Z,EAiBoB;AAGhBwd,IAAAA,WAAAA,EAAe,MAHC;AAIhBD,IAAAA,WAAAA,EAAe,MAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,QALQ;AAMhBuE,IAAAA,YAAAA,EAAgB;AANA,GAjBpB9Z;AARoB,CA3CXiO,EA0EW;AAKpBkP,EAAAA,QAAAA,EAAY,SALQ;AAMpBC,EAAAA,QAAAA,EAAY,SANQ;AAOpBC,EAAAA,QAAAA,EAAY,eAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AAAYsd,IAAAA,YAAAA,EAAgB,CAA5Btd;AAA+Bud,IAAAA,WAAAA,EAAe,GAA9Cvd;AAAmDuV,IAAAA,IAAAA,EAAQ;AAA3DvV,GAAAA;AARoB,CA1EXiO,EAkFkD;AAG3DkP,EAAAA,QAAAA,EAAY,YAH+C;AAI3DC,EAAAA,QAAAA,EAAY,YAJ+C;AAK3DC,EAAAA,QAAAA,EAAY,eAL+C;AAM3Drd,EAAAA,MAAAA,EAAAA,CAAAA;AAAYsd,IAAAA,YAAAA,EAAgB,CAA5Btd;AAA+Bud,IAAAA,WAAAA,EAAe,GAA9Cvd;AAAmDuV,IAAAA,IAAAA,EAAQ;AAA3DvV,GAAAA;AAN2D,CAlFlDiO,EAwFkD;AAG3DkP,EAAAA,QAAAA,EAAY,eAH+C;AAI3DC,EAAAA,QAAAA,EAAY,eAJ+C;AAK3DC,EAAAA,QAAAA,EAAY,eAL+C;AAM3Drd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,eADrCvd;AACsDuV,IAAAA,IAAAA,EAAQ;AAD9DvV,GAAAA,EAC8D;AAC3Dsd,IAAAA,YAAAA,EAAgB,CAD2C;AACxCC,IAAAA,WAAAA,EAAe,aADyB;AACVhI,IAAAA,IAAAA,EAAQ;AADE,GAD9DvV,EAE4D;AACzDsd,IAAAA,YAAAA,EAAgB,CADyC;AACtCC,IAAAA,WAAAA,EAAe,cADuB;AACPhI,IAAAA,IAAAA,EAAQ;AADD,GAF5DvV,EAG6D;AAC1Dsd,IAAAA,YAAAA,EAAgB,CAD0C;AACvCC,IAAAA,WAAAA,EAAe,cADwB;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GAH7DvV,EAI6D;AACzDwd,IAAAA,WAAAA,EAAe,kBAD0C;AAEzDD,IAAAA,WAAAA,EAAe,iBAF0C;AAGzDhI,IAAAA,IAAAA,EAAQ,MAHiD;AAIzDuE,IAAAA,YAAAA,EAAAA,CAAgB,CAJyC;AAKzD2D,IAAAA,YAAAA,EAAAA,CAAgB;AALyC,GAJ7Dzd;AAN2D,CAxFlDiO,CXAN;AAAA,IWuGiB,aAAA,GAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,IAAA,EAAA;AAAA,CAAA,CXvGjB;AAAA,IYAMA,OAAAA,GAAAA,CAAAA;AAETkP,EAAAA,QAAAA,EAAY,KAFHlP;AAGTmP,EAAAA,QAAAA,EAAY,KAHHnP;AAIToP,EAAAA,QAAAA,EAAY,WAJHpP;AAKTjO,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,MADa;AACLhI,IAAAA,IAAAA,EAAQ;AADH,GADlDvV,EAEqD;AAClDwd,IAAAA,WAAAA,EAAe,WADmC;AACtBD,IAAAA,WAAAA,EAAe,UADO;AACKhI,IAAAA,IAAAA,EAAQ;AADb,GAFrDvV;AALSiO,CAAAA,EAQyD;AAIlEkP,EAAAA,QAAAA,EAAY,MAJsD;AAKlEC,EAAAA,QAAAA,EAAY,MALsD;AAMlEC,EAAAA,QAAAA,EAAY,WANsD;AAOlErd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,MADa;AACLhI,IAAAA,IAAAA,EAAQ;AADH,GADlDvV,EAEqD;AAClDwd,IAAAA,WAAAA,EAAe,WADmC;AACtBD,IAAAA,WAAAA,EAAe,UADO;AACKhI,IAAAA,IAAAA,EAAQ;AADb,GAFrDvV;AAPkE,CARzDiO,EAkByD;AAIlEkP,EAAAA,QAAAA,EAAY,KAJsD;AAKlEC,EAAAA,QAAAA,EAAY,KALsD;AAMlEC,EAAAA,QAAAA,EAAY,WANsD;AAOlErd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,MADa;AACLhI,IAAAA,IAAAA,EAAQ;AADH,GADlDvV,EAEqD;AAClDwd,IAAAA,WAAAA,EAAe,WADmC;AACtBD,IAAAA,WAAAA,EAAe,UADO;AACKhI,IAAAA,IAAAA,EAAQ;AADb,GAFrDvV;AAPkE,CAlBzDiO,EA4ByD;AAIlEkP,EAAAA,QAAAA,EAAY,KAJsD;AAKlEC,EAAAA,QAAAA,EAAY,KALsD;AAMlEC,EAAAA,QAAAA,EAAY,WANsD;AAOlErd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,MADa;AACLhI,IAAAA,IAAAA,EAAQ;AADH,GADlDvV,EAEqD;AAClDwd,IAAAA,WAAAA,EAAe,WADmC;AACtBD,IAAAA,WAAAA,EAAe,UADO;AACKhI,IAAAA,IAAAA,EAAQ;AADb,GAFrDvV;AAPkE,CA5BzDiO,EAsCyD;AAIlEkP,EAAAA,QAAAA,EAAY,KAJsD;AAKlEC,EAAAA,QAAAA,EAAY,KALsD;AAMlEC,EAAAA,QAAAA,EAAY,WANsD;AAOlErd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,MADa;AACLhI,IAAAA,IAAAA,EAAQ;AADH,GADlDvV,EAEqD;AAClDwd,IAAAA,WAAAA,EAAe,WADmC;AACtBD,IAAAA,WAAAA,EAAe,UADO;AACKhI,IAAAA,IAAAA,EAAQ;AADb,GAFrDvV;AAPkE,CAtCzDiO,EAgDyD;AAIlEkP,EAAAA,QAAAA,EAAY,KAJsD;AAKlEC,EAAAA,QAAAA,EAAY,KALsD;AAMlEC,EAAAA,QAAAA,EAAY,WANsD;AAOlErd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,MADa;AACLhI,IAAAA,IAAAA,EAAQ;AADH,GADlDvV,EAEqD;AAClDwd,IAAAA,WAAAA,EAAe,WADmC;AACtBD,IAAAA,WAAAA,EAAe,UADO;AACKhI,IAAAA,IAAAA,EAAQ;AADb,GAFrDvV;AAPkE,CAhDzDiO,EA0DyD;AAIlEkP,EAAAA,QAAAA,EAAY,QAJsD;AAKlEC,EAAAA,QAAAA,EAAY,QALsD;AAMlEC,EAAAA,QAAAA,EAAY,WANsD;AAOlErd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,MADa;AACLhI,IAAAA,IAAAA,EAAQ;AADH,GADlDvV;AAPkE,CA1DzDiO,EAmE4C;AAIrDkP,EAAAA,QAAAA,EAAY,QAJyC;AAKrDC,EAAAA,QAAAA,EAAY,QALyC;AAMrDC,EAAAA,QAAAA,EAAY,WANyC;AAOrDrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,MADa;AACLhI,IAAAA,IAAAA,EAAQ;AADH,GADlDvV;AAPqD,CAnE5CiO,EA4E4C;AAIrDkP,EAAAA,QAAAA,EAAY,MAJyC;AAKrDC,EAAAA,QAAAA,EAAY,MALyC;AAMrDC,EAAAA,QAAAA,EAAY,WANyC;AAOrDrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,MADa;AACLhI,IAAAA,IAAAA,EAAQ;AADH,GADlDvV,EAEqD;AACjDwd,IAAAA,WAAAA,EAAe,WADkC;AAEjDD,IAAAA,WAAAA,EAAe,UAFkC;AAGjDhI,IAAAA,IAAAA,EAAQ;AAHyC,GAFrDvV;AAPqD,CA5E5CiO,CZAN;AAAA,IYwFS,SAAA,GAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,IAAA,EAAA;AAAA,CAAA,CZxFT;AAAA,IaAMA,OAAAA,GAAAA,CAAAA;AAETkP,EAAAA,QAAAA,EAAY,UAFHlP;AAGTmP,EAAAA,QAAAA,EAAY,QAHHnP;AAIToP,EAAAA,QAAAA,EAAY,YAJHpP;AAKTjO,EAAAA,MAAAA,EAAAA,CAAAA;AAEIsd,IAAAA,YAAAA,EAAgB,CAFpBtd;AAGI0d,IAAAA,kBAAAA,EAAsB,CAH1B1d;AAIIud,IAAAA,WAAAA,EAAe,SAJnBvd;AAKIuV,IAAAA,IAAAA,EAAQ;AALZvV,GAAAA,EAKY;AAETsd,IAAAA,YAAAA,EAAAA,CAAiB,CAFR;AAEWC,IAAAA,WAAAA,EAAe,MAF1B;AAEkChI,IAAAA,IAAAA,EAAQ;AAF1C,GALZvV;AALSiO,CAAAA,EAY6C;AAItDkP,EAAAA,QAAAA,EAAY,QAJ0C;AAKtDC,EAAAA,QAAAA,EAAY,QAL0C;AAMtDC,EAAAA,QAAAA,EAAY,YAN0C;AAOtDrd,EAAAA,MAAAA,EAAAA,CAAAA;AAEIsd,IAAAA,YAAAA,EAAgB,CAFpBtd;AAGI0d,IAAAA,kBAAAA,EAAsB,CAH1B1d;AAIIud,IAAAA,WAAAA,EAAe,SAJnBvd;AAKIuV,IAAAA,IAAAA,EAAQ;AALZvV,GAAAA,EAKY;AAETsd,IAAAA,YAAAA,EAAgB,CAFP;AAEUC,IAAAA,WAAAA,EAAe,MAFzB;AAEiChI,IAAAA,IAAAA,EAAQ;AAFzC,GALZvV;AAPsD,CAZ7CiO,EA0B4C;AAIrDkP,EAAAA,QAAAA,EAAY,UAJyC;AAKrDC,EAAAA,QAAAA,EAAY,QALyC;AAMrDC,EAAAA,QAAAA,EAAY,YANyC;AAOrDrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,SADa;AACFhI,IAAAA,IAAAA,EAAQ;AADN,GADlDvV,EAEwD;AACpDsd,IAAAA,YAAAA,EAAgB,CADoC;AAEpDC,IAAAA,WAAAA,EAAe,MAFqC;AAGpDhI,IAAAA,IAAAA,EAAQ,QAH4C;AAIpDuE,IAAAA,YAAAA,EAAgB;AAJoC,GAFxD9Z;AAPqD,CA1B5CiO,EAuCW;AAKpBkP,EAAAA,QAAAA,EAAY,QALQ;AAMpBC,EAAAA,QAAAA,EAAY,QANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,SADa;AACFhI,IAAAA,IAAAA,EAAQ;AADN,GADlDvV,EAEwD;AACpDwd,IAAAA,WAAAA,EAAe,MADqC;AAEpDD,IAAAA,WAAAA,EAAe,MAFqC;AAGpDhI,IAAAA,IAAAA,EAAQ,QAH4C;AAIpDuE,IAAAA,YAAAA,EAAgB;AAJoC,GAFxD9Z,EAMoB;AAGhBwd,IAAAA,WAAAA,EAAe,kBAHC;AAIhBD,IAAAA,WAAAA,EAAe,iBAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,MALQ;AAMhBkI,IAAAA,YAAAA,EAAAA,CAAgB;AANA,GANpBzd;AARoB,CAvCXiO,EA2DW;AAKpBkP,EAAAA,QAAAA,EAAY,SALQ;AAMpBC,EAAAA,QAAAA,EAAY,SANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Csd,IAAAA,YAAAA,EAAgB,CAD8B;AAE9CC,IAAAA,WAAAA,EAAe,MAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,MAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd;AARoB,CA3DXiO,EAwEW;AAKpBkP,EAAAA,QAAAA,EAAY,WALQ;AAMpBC,EAAAA,QAAAA,EAAY,SANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,MADa;AACLhI,IAAAA,IAAAA,EAAQ;AADH,GADlDvV;AARoB,CAxEXiO,EAkF4C;AAIrDkP,EAAAA,QAAAA,EAAY,OAJyC;AAKrDC,EAAAA,QAAAA,EAAY,OALyC;AAMrDC,EAAAA,QAAAA,EAAY,YANyC;AAOrDrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,OADa;AACJhI,IAAAA,IAAAA,EAAQ;AADJ,GADlDvV,EAEsD;AACnDsd,IAAAA,YAAAA,EAAgB,CADmC;AAChCC,IAAAA,WAAAA,EAAe,MADiB;AACThI,IAAAA,IAAAA,EAAQ;AADC,GAFtDvV;AAPqD,CAlF5CiO,EA4F4C;AAIrDkP,EAAAA,QAAAA,EAAY,cAJyC;AAKrDC,EAAAA,QAAAA,EAAY,cALyC;AAMrDC,EAAAA,QAAAA,EAAY,YANyC;AAOrDrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,OADa;AACJhI,IAAAA,IAAAA,EAAQ;AADJ,GADlDvV,EAEsD;AACnDsd,IAAAA,YAAAA,EAAgB,CADmC;AAChCC,IAAAA,WAAAA,EAAe,KADiB;AACVhI,IAAAA,IAAAA,EAAQ;AADE,GAFtDvV,EAGoD;AACjDsd,IAAAA,YAAAA,EAAgB,CADiC;AAC9BC,IAAAA,WAAAA,EAAe,SADe;AACJhI,IAAAA,IAAAA,EAAQ;AADJ,GAHpDvV,EAIwD;AACpDwd,IAAAA,WAAAA,EAAe,YADqC;AAEpDD,IAAAA,WAAAA,EAAe,WAFqC;AAGpDhI,IAAAA,IAAAA,EAAQ,QAH4C;AAIpDuE,IAAAA,YAAAA,EAAgB;AAJoC,GAJxD9Z,EAQoB;AAGhBwd,IAAAA,WAAAA,EAAe,UAHC;AAIhBD,IAAAA,WAAAA,EAAe,SAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,QALQ;AAMhBuE,IAAAA,YAAAA,EAAgB;AANA,GARpB9Z,EAcoB;AAGhBwd,IAAAA,WAAAA,EAAe,eAHC;AAIhBD,IAAAA,WAAAA,EAAe,aAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,QALQ;AAMhBuE,IAAAA,YAAAA,EAAgB;AANA,GAdpB9Z,EAoBoB;AAGhBwd,IAAAA,WAAAA,EAAe,eAHC;AAIhBD,IAAAA,WAAAA,EAAe,cAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,QALQ;AAMhBuE,IAAAA,YAAAA,EAAgB;AANA,GApBpB9Z,EA0BoB;AAGhBwd,IAAAA,WAAAA,EAAe,kBAHC;AAIhBD,IAAAA,WAAAA,EAAe,gBAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,QALQ;AAMhBuE,IAAAA,YAAAA,EAAgB;AANA,GA1BpB9Z;AAPqD,CA5F5CiO,EAmIW;AAKpBkP,EAAAA,QAAAA,EAAY,MALQ;AAMpBC,EAAAA,QAAAA,EAAY,OANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AAEIsd,IAAAA,YAAAA,EAAgB,CAFpBtd;AAGI0d,IAAAA,kBAAAA,EAAsB,CAH1B1d;AAIIud,IAAAA,WAAAA,EAAe,SAJnBvd;AAKIuV,IAAAA,IAAAA,EAAQ;AALZvV,GAAAA,EAKY;AAGRwd,IAAAA,WAAAA,EAAe,MAHP;AAIRD,IAAAA,WAAAA,EAAe,MAJP;AAKRhI,IAAAA,IAAAA,EAAQ,QALA;AAMRuE,IAAAA,YAAAA,EAAgB;AANR,GALZ9Z;AARoB,CAnIXiO,EAsJW;AAKpBkP,EAAAA,QAAAA,EAAY,QALQ;AAMpBC,EAAAA,QAAAA,EAAY,SANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AAEIsd,IAAAA,YAAAA,EAAgB,CAFpBtd;AAGI0d,IAAAA,kBAAAA,EAAsB,CAH1B1d;AAIIud,IAAAA,WAAAA,EAAe,QAJnBvd;AAKIuV,IAAAA,IAAAA,EAAQ;AALZvV,GAAAA,EAKY;AAGRwd,IAAAA,WAAAA,EAAe,MAHP;AAIRD,IAAAA,WAAAA,EAAe,MAJP;AAKRhI,IAAAA,IAAAA,EAAQ,QALA;AAMRuE,IAAAA,YAAAA,EAAgB;AANR,GALZ9Z,EAWoB;AAGhBwd,IAAAA,WAAAA,EAAe,KAHC;AAIhBD,IAAAA,WAAAA,EAAe,KAJC;AAKhBhI,IAAAA,IAAAA,EAAQ,QALQ;AAMhBuE,IAAAA,YAAAA,EAAgB,CANA;AAOhB2D,IAAAA,YAAAA,EAAAA,CAAgB;AAPA,GAXpBzd;AARoB,CAtJXiO,EAgLW;AAKpBkP,EAAAA,QAAAA,EAAY,MALQ;AAMpBC,EAAAA,QAAAA,EAAY,MANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,MADa;AACLhI,IAAAA,IAAAA,EAAQ;AADH,GADlDvV;AARoB,CAhLXiO,EA0L4C;AAIrDkP,EAAAA,QAAAA,EAAY,OAJyC;AAKrDC,EAAAA,QAAAA,EAAY,OALyC;AAMrDC,EAAAA,QAAAA,EAAY,YANyC;AAOrDrd,EAAAA,MAAAA,EAAAA,CAAAA;AAEIsd,IAAAA,YAAAA,EAAgB,CAFpBtd;AAGIud,IAAAA,WAAAA,EAAe,MAHnBvd;AAIIuV,IAAAA,IAAAA,EAAQ,QAJZvV;AAKI8Z,IAAAA,YAAAA,EAAgB;AALpB9Z,GAAAA,EAKoB;AAEjBsd,IAAAA,YAAAA,EAAgB,CAFC;AAEEC,IAAAA,WAAAA,EAAe,GAFjB;AAEsBhI,IAAAA,IAAAA,EAAQ;AAF9B,GALpBvV,EAOkD;AAC9Cwd,IAAAA,WAAAA,EAAe,WAD+B;AAE9CD,IAAAA,WAAAA,EAAe,iBAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,QAHsC;AAI9CuE,IAAAA,YAAAA,EAAgB;AAJ8B,GAPlD9Z;AAPqD,CA1L5CiO,EA4MW;AAKpBkP,EAAAA,QAAAA,EAAY,QALQ;AAMpBC,EAAAA,QAAAA,EAAY,OANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,iBADa;AACMhI,IAAAA,IAAAA,EAAQ;AADd,GADlDvV,EAEgE;AAE5Dsd,IAAAA,YAAAA,EAAgB,CAF4C;AAG5DC,IAAAA,WAAAA,EAAe,MAH6C;AAI5DhI,IAAAA,IAAAA,EAAQ,QAJoD;AAK5DuE,IAAAA,YAAAA,EAAgB;AAL4C,GAFhE9Z;AARoB,CA5MXiO,EA2NW;AAKpBkP,EAAAA,QAAAA,EAAY,WALQ;AAMpBC,EAAAA,QAAAA,EAAY,WANQ;AAOpBC,EAAAA,QAAAA,EAAY,YAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,SADrCvd;AACgDuV,IAAAA,IAAAA,EAAQ;AADxDvV,GAAAA,EACwD;AACrDsd,IAAAA,YAAAA,EAAgB,CADqC;AAClCC,IAAAA,WAAAA,EAAe,QADmB;AACThI,IAAAA,IAAAA,EAAQ;AADC,GADxDvV,EAEuD;AACpDsd,IAAAA,YAAAA,EAAgB,CADoC;AACjCC,IAAAA,WAAAA,EAAe,OADkB;AACThI,IAAAA,IAAAA,EAAQ;AADC,GAFvDvV;AARoB,CA3NXiO,EAsO6C;AAItDkP,EAAAA,QAAAA,EAAY,UAJ0C;AAKtDC,EAAAA,QAAAA,EAAY,UAL0C;AAMtDC,EAAAA,QAAAA,EAAY,YAN0C;AAOtDrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,SADa;AACFhI,IAAAA,IAAAA,EAAQ;AADN,GADlDvV;AAPsD,CAtO7CiO,EA+O+C;AAIxDkP,EAAAA,QAAAA,EAAY,eAJ4C;AAKxDC,EAAAA,QAAAA,EAAY,eAL4C;AAMxDC,EAAAA,QAAAA,EAAY,YAN4C;AAOxDrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,eADrCvd;AACsDuV,IAAAA,IAAAA,EAAQ;AAD9DvV,GAAAA,EAC8D;AAC3Dsd,IAAAA,YAAAA,EAAgB,CAD2C;AACxCC,IAAAA,WAAAA,EAAe,aADyB;AACVhI,IAAAA,IAAAA,EAAQ;AADE,GAD9DvV,EAE4D;AACzDsd,IAAAA,YAAAA,EAAgB,CADyC;AACtCC,IAAAA,WAAAA,EAAe,cADuB;AACPhI,IAAAA,IAAAA,EAAQ;AADD,GAF5DvV,EAG6D;AAC1Dsd,IAAAA,YAAAA,EAAgB,CAD0C;AACvCC,IAAAA,WAAAA,EAAe,cADwB;AACRhI,IAAAA,IAAAA,EAAQ;AADA,GAH7DvV,EAI6D;AACzDwd,IAAAA,WAAAA,EAAe,kBAD0C;AAEzDD,IAAAA,WAAAA,EAAe,iBAF0C;AAGzDhI,IAAAA,IAAAA,EAAQ,MAHiD;AAIzDuE,IAAAA,YAAAA,EAAAA,CAAgB,CAJyC;AAKzD2D,IAAAA,YAAAA,EAAAA,CAAgB;AALyC,GAJ7Dzd;AAPwD,CA/O/CiO,CbAN;AAAA,Ia+PiB,SAAA,GAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,IAAA,EAAA;AAAA,CAAA,Cb/PjB;AAAA,IcAMA,OAAAA,GAAAA,CAAAA;AAETkP,EAAAA,QAAAA,EAAY,KAFHlP;AAGTmP,EAAAA,QAAAA,EAAY,KAHHnP;AAIToP,EAAAA,QAAAA,EAAY,UAJHpP;AAKTjO,EAAAA,MAAAA,EAAAA,CAAAA;AAAYsd,IAAAA,YAAAA,EAAgB,CAA5Btd;AAA+Bud,IAAAA,WAAAA,EAAe,GAA9Cvd;AAAmDuV,IAAAA,IAAAA,EAAQ;AAA3DvV,GAAAA;AALSiO,CAAAA,EAKkD;AAG3DkP,EAAAA,QAAAA,EAAY,MAH+C;AAI3DC,EAAAA,QAAAA,EAAY,MAJ+C;AAK3DC,EAAAA,QAAAA,EAAY,UAL+C;AAM3Drd,EAAAA,MAAAA,EAAAA,CAAAA;AAAYsd,IAAAA,YAAAA,EAAgB,CAA5Btd;AAA+Bud,IAAAA,WAAAA,EAAe,GAA9Cvd;AAAmDuV,IAAAA,IAAAA,EAAQ;AAA3DvV,GAAAA;AAN2D,CALlDiO,EAWkD;AAG3DkP,EAAAA,QAAAA,EAAY,MAH+C;AAI3DC,EAAAA,QAAAA,EAAY,MAJ+C;AAK3DC,EAAAA,QAAAA,EAAY,UAL+C;AAM3Drd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Csd,IAAAA,YAAAA,EAAgB,CAD8B;AAE9CC,IAAAA,WAAAA,EAAe,YAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,QAHsC;AAI9CqI,IAAAA,WAAAA,EAAAA,CAAe;AAJ+B,GADlD5d;AAN2D,CAXlDiO,EAsBU;AAKnBkP,EAAAA,QAAAA,EAAY,OALO;AAMnBC,EAAAA,QAAAA,EAAY,OANO;AAOnBC,EAAAA,QAAAA,EAAY,UAPO;AAQnBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Csd,IAAAA,YAAAA,EAAgB,CAD8B;AAE9CC,IAAAA,WAAAA,EAAe,YAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,QAHsC;AAI9CqI,IAAAA,WAAAA,EAAAA,CAAe;AAJ+B,GADlD5d;AARmB,CAtBViO,CdAN;AAAA,IcmCgB,QAAA,GAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,IAAA,EAAA;AAAA,CAAA,CdnChB;AAAA,IeAMA,OAAAA,GAAAA,CAAAA;AAETkP,EAAAA,QAAAA,EAAY,MAFHlP;AAGTmP,EAAAA,QAAAA,EAAY,MAHHnP;AAIToP,EAAAA,QAAAA,EAAY,gBAJHpP;AAKTjO,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,MAD+B;AAE9CD,IAAAA,WAAAA,EAAe,QAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ,OAHsC;AAI9CkI,IAAAA,YAAAA,EAAAA,CAAgB;AAJ8B,GADlDzd,EAKoB;AAEjBwd,IAAAA,WAAAA,EAAe,MAFE;AAEMD,IAAAA,WAAAA,EAAe,OAFrB;AAE8BhI,IAAAA,IAAAA,EAAQ;AAFtC,GALpBvV;AALSiO,CAAAA,EAYiD;AAI1DkP,EAAAA,QAAAA,EAAY,YAJ8C;AAK1DC,EAAAA,QAAAA,EAAY,YAL8C;AAM1DC,EAAAA,QAAAA,EAAY,gBAN8C;AAO1Drd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Csd,IAAAA,YAAAA,EAAgB,CAD8B;AAE9CO,IAAAA,qBAAAA,EAAyB,KAFqB;AAG9CN,IAAAA,WAAAA,EAAe,MAH+B;AAI9ChI,IAAAA,IAAAA,EAAQ;AAJsC,GADlDvV;AAP0D,CAZjDiO,EAwBG;AAKZkP,EAAAA,QAAAA,EAAY,KALA;AAMZC,EAAAA,QAAAA,EAAY,KANA;AAOZC,EAAAA,QAAAA,EAAY,gBAPA;AAQZrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,SADa;AACFhI,IAAAA,IAAAA,EAAQ;AADN,GADlDvV,EAEwD;AACpDwd,IAAAA,WAAAA,EAAe,gBADqC;AAEpDD,IAAAA,WAAAA,EAAe,eAFqC;AAGpDhI,IAAAA,IAAAA,EAAQ,QAH4C;AAIpDuE,IAAAA,YAAAA,EAAgB;AAJoC,GAFxD9Z;AARY,CAxBHiO,EAsCW;AAKpBkP,EAAAA,QAAAA,EAAY,OALQ;AAMpBC,EAAAA,QAAAA,EAAY,KANQ;AAOpBC,EAAAA,QAAAA,EAAY,gBAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,SADa;AACFhI,IAAAA,IAAAA,EAAQ;AADN,GADlDvV,EAEwD;AACpDsd,IAAAA,YAAAA,EAAgB,CADoC;AAEpDC,IAAAA,WAAAA,EAAe,eAFqC;AAGpDhI,IAAAA,IAAAA,EAAQ,QAH4C;AAIpDuE,IAAAA,YAAAA,EAAgB;AAJoC,GAFxD9Z;AARoB,CAtCXiO,EAoDW;AAKpBkP,EAAAA,QAAAA,EAAY,SALQ;AAMpBC,EAAAA,QAAAA,EAAY,SANQ;AAOpBC,EAAAA,QAAAA,EAAY,gBAPQ;AAQpBrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,OADa;AACJhI,IAAAA,IAAAA,EAAQ;AADJ,GADlDvV;AARoB,CApDXiO,EA8D6C;AAItDkP,EAAAA,QAAAA,EAAY,SAJ0C;AAKtDC,EAAAA,QAAAA,EAAY,SAL0C;AAMtDC,EAAAA,QAAAA,EAAY,gBAN0C;AAOtDrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,MAD+B;AAE9CK,IAAAA,qBAAAA,EAAyB,cAFqB;AAG9CN,IAAAA,WAAAA,EAAe,MAH+B;AAI9ChI,IAAAA,IAAAA,EAAQ;AAJsC,GADlDvV;AAPsD,CA9D7CiO,EA0EG;AAKZkP,EAAAA,QAAAA,EAAY,gBALA;AAMZC,EAAAA,QAAAA,EAAY,gBANA;AAOZC,EAAAA,QAAAA,EAAY,gBAPA;AAQZrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,YADa;AACChI,IAAAA,IAAAA,EAAQ;AADT,GADlDvV,EAE2D;AACxDsd,IAAAA,YAAAA,EAAgB,CADwC;AACrCC,IAAAA,WAAAA,EAAe,UADsB;AACVhI,IAAAA,IAAAA,EAAQ;AADE,GAF3DvV;AARY,CA1EHiO,EAqFgD;AAIzDkP,EAAAA,QAAAA,EAAY,gBAJ6C;AAKzDC,EAAAA,QAAAA,EAAY,gBAL6C;AAMzDC,EAAAA,QAAAA,EAAY,gBAN6C;AAOzDrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC/Csd,IAAAA,YAAAA,EAAgB,CAD+B;AAC5BC,IAAAA,WAAAA,EAAe,YADa;AACChI,IAAAA,IAAAA,EAAQ;AADT,GADlDvV,EAE2D;AACxDsd,IAAAA,YAAAA,EAAgB,CADwC;AACrCC,IAAAA,WAAAA,EAAe,OADsB;AACbhI,IAAAA,IAAAA,EAAQ;AADK,GAF3DvV;AAPyD,CArFhDiO,EA+F6C;AAItDkP,EAAAA,QAAAA,EAAY,cAJ0C;AAKtDC,EAAAA,QAAAA,EAAY,cAL0C;AAMtDC,EAAAA,QAAAA,EAAY,gBAN0C;AAOtDrd,EAAAA,MAAAA,EAAAA,CAAAA;AACGsd,IAAAA,YAAAA,EAAgB,CADnBtd;AACsBud,IAAAA,WAAAA,EAAe,GADrCvd;AAC0CuV,IAAAA,IAAAA,EAAQ;AADlDvV,GAAAA,EACkD;AAC9Cwd,IAAAA,WAAAA,EAAe,YAD+B;AAE9CD,IAAAA,WAAAA,EAAe,WAF+B;AAG9ChI,IAAAA,IAAAA,EAAQ;AAHsC,GADlDvV,EAIY;AAGRwd,IAAAA,WAAAA,EAAe,aAHP;AAIRD,IAAAA,WAAAA,EAAe,YAJP;AAKRhI,IAAAA,IAAAA,EAAQ;AALA,GAJZvV;AAPsD,CA/F7CiO,CfAN;AAAA,Ie+GS,cAAA,GAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,IAAA,EAAA;AAAA,CAAA,Cf/GT;AAAA,IgBsBD6P,gBAAAA,GAAAA,CAAoB,QAApBA,EAA8B,OAA9BA,EAAuC,OAAvCA,EAAgD,MAAhDA,EAAwD,eAAxDA,ChBtBC;AAAA,IgBuBDC,iBAAAA,GAAAA,CACD,qBADCA,EACsB,qBADtBA,EAC6C,OAD7CA,ChBvBC;AAAA,IgBwB4C,eAAA,GAAA,YAAA;AAajD,WAAA,CAAA,GAAA;AACE,QAAMG,CAAAA,GAAAA,CACJC,UADID,EACQE,SADRF,EACmBG,OADnBH,EAC4BI,WAD5BJ,EACyCK,QADzCL,EACmDM,OADnDN,EAEJO,UAFIP,EAEQQ,OAFRR,EAEiBS,OAFjBT,EAEwBU,KAFxBV,EAE+BW,QAF/BX,EAEyCY,aAFzCZ,EAEwDa,SAFxDb,EAGJc,SAHId,EAGOe,QAHPf,EAGiBgB,cAHjBhB,CAAN;AAAA,QAKMiB,CAAAA,GAAAA,GAA6BC,MAA7BD,CAAoCxe,KAApCwe,CAAoCxe,EAApCwe,EAA8CjB,CAAAA,CAAI7B,GAAJ6B,CAAQ,UAAA,CAAA,EAAA;AAAM,aAAA,CAAA,CAAGjQ,IAAH;AAAGA,KAAjBiQ,CAA9CiB,CALN;AAOAvc,SAAKyc,SAALzc,GAAiBuc,CAAAA,CAAYG,MAAZH,CACb,UAAC9C,CAAD,EAAMkD,CAAN,EAAMA;AAEJ,aADAlD,CAAAA,CAAIkD,CAAAA,CAAOpC,QAAXd,CAAAA,GAAuBkD,CAAvBlD,EACOA,CAAP;AAAOA,KAHI8C,EAGJ9C,EAHI8C,CAAjBvc;AAgOJ;;AAAA,SA7OEqE,MAAAA,CAAAA,cAAAA,CAAkB+W,CAAlB/W,EAAkB+W,UAAlB/W,EAAkB+W;AAAAA,IAAAA,GAAAA,EAAlB/W,eAAAA;AACE,aAAOrE,KAAKqb,SAALrb,KAAmBA,KAAKqb,SAALrb,GAAiB,IAAIA,IAAJ,EAApCA,CAAP;AAA+CA,KAD/Bob;AAC+Bpb,IAAAA,UAAAA,EAAAA,CAAAA,CAD/Bob;AAC+Bpb,IAAAA,YAAAA,EAAAA,CAAAA;AAD/Bob,GAAlB/W,GAqBQ+W,CAAAA,CAAAA,SAAAA,CAAAA,aAAAA,GAAR,UAAsBrT,CAAtB,EAAsBA;AACpB,WAAOmT,gBAAAA,CAAiB0B,IAAjB1B,CAAsB,UAAA,CAAA,EAAA;AAAM,aAAA,CAAA,KAAOnT,CAAAA,CAAKwL,EAAZ;AAAYA,KAAxC2H,CAAP;AAA+C3H,GAtBjDlP,EAyBQ+W,CAAAA,CAAAA,SAAAA,CAAAA,cAAAA,GAAR,UAAuBrT,CAAvB,EAAuBA;AACrB,WAAOoT,iBAAAA,CAAkByB,IAAlBzB,CAAuB,UAAA,CAAA,EAAA;AAAM,aAAA,CAAA,KAAOpT,CAAAA,CAAKwL,EAAZ;AAAYA,KAAzC4H,CAAP;AAAgD5H,GA1BlDlP,EA8BA+W,CAAAA,CAAAA,SAAAA,CAAAA,cAAAA,GAAAA,UAAeY,CAAfZ,EAAeY;AAAfZ,QAAAA,CAAAA,GAAAA,IAAAA;AAAAA,QAEMyB,CAAAA,GAAAA,CAAkB,CAFxBzB;AAAAA,QAGM0B,CAAAA,GAAAA,CAAmB,CAHzB1B;AAAAA,QAIQ2B,CAAAA,GAAAA,EAJR3B;AAAAA,QAKQ4B,CAAAA,GAAAA,EALR5B;AAAAA,QAMQ6B,CAAAA,GALUjB,CAAAA,CAAMjU,IAANiU,CAKMU,MALNV,CAKoC,UAACvC,CAAD,EAAM1R,CAAN,EAAMA;AAMxD,aALA0R,CAAAA,CAAI1R,CAAAA,CAAKkC,IAATwP,CAAAA,GAAiByD,CAAAA,CAAKC,OAALD,CAAanV,CAAbmV,CAAjBzD,EACIyD,CAAAA,CAAKE,aAALF,CAAmBnV,CAAnBmV,MAA0BL,CAAAA,GAAAA,CAAkB,CAA5CK,CADJzD,EAEIyD,CAAAA,CAAKG,cAALH,CAAoBnV,CAApBmV,MAA2BJ,CAAAA,GAAAA,CAAmB,CAA9CI,CAFJzD,EAGgB,kBAAZ1R,CAAAA,CAAKwL,EAAO,IAAewJ,CAAAA,CAAa3d,IAAb2d,CAAkBtD,CAAAA,CAAI1R,CAAAA,CAAKkC,IAATwP,CAAlBsD,CAH/BtD,EAIgB,YAAZ1R,CAAAA,CAAKwL,EAAO,IAASyJ,CAAAA,CAAQ5d,IAAR4d,CAAavD,CAAAA,CAAI1R,CAAAA,CAAKkC,IAATwP,CAAbuD,CAJzBvD,EAKOA,CAAP;AAAOA,KAXOuC,EAWPvC,EAXOuC,CADlBZ;AAAAA,QAeQzF,CAAAA,GAAAA,EAfRyF;AAAAA,QAgBQxF,CAAAA,GAAAA,EAhBRwF;AAgCE,WAfA/W,MAAAA,CAAOC,IAAPD,CAAY4Y,CAAZ5Y,EAAmBiZ,OAAnBjZ,CAA2B,UAAA,CAAA,EAAA;AACzB,UAAM0D,CAAAA,GAAOkV,CAAAA,CAAMM,CAANN,CAAb;AACAlV,MAAAA,CAAAA,CAAKwR,UAALxR,CAAgBuV,OAAhBvV,CAAwB,UAAA,CAAA,EAAA;AACf,YAAA,CAAA,GAAA,mBAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACPA,QAAAA,CAAAA,CAAK4N,MAAL5N,CAAY3I,IAAZ2I,CAAiBkV,CAAAA,CAAMpD,CAANoD,CAAjBlV,GACAkV,CAAAA,CAAMpD,CAANoD,CAAAA,CAAgBO,QAAhBP,CAAyB7d,IAAzB6d,CAA8BlV,CAA9BkV,CADAlV;AAC8BA,OAHhCA,GAK2B,MAAvBA,CAAAA,CAAK4N,MAAL5N,CAAYxK,MAAW,IAAGoY,CAAAA,CAAOvW,IAAPuW,CAAY5N,CAAZ4N,CAL9B5N;AAK0CA,KAP5C1D,GAUAA,MAAAA,CAAOC,IAAPD,CAAY4Y,CAAZ5Y,EAAmBiZ,OAAnBjZ,CAA2B,UAAA,CAAA,EAAA;AACzB,UAAM0D,CAAAA,GAAOkV,CAAAA,CAAMM,CAANN,CAAb;AAC6B,YAAzBlV,CAAAA,CAAKyV,QAALzV,CAAcxK,MAAW,IAAGqY,CAAAA,CAAQxW,IAARwW,CAAa7N,CAAb6N,CAAH;AAAgB7N,KAF/C1D,CAVAA,EAY+C0D;AAI7CkV,MAAAA,KAAAA,EAAAA,CAJ6ClV;AAK7C4N,MAAAA,MAAAA,EAAAA,CAL6C5N;AAM7C6N,MAAAA,OAAAA,EAAAA,CAN6C7N;AAO7CiV,MAAAA,OAAAA,EAAAA,CAP6CjV;AAQ7CgV,MAAAA,YAAAA,EAAAA,CAR6ChV;AAS7C8U,MAAAA,eAAAA,EAAAA,CAT6C9U;AAU7C+U,MAAAA,gBAAAA,EAAAA;AAV6C/U,KAG/C;AAOE+U,GArEJzY,EAyEQ+W,CAAAA,CAAAA,SAAAA,CAAAA,OAAAA,GAAR,UAAgBrT,CAAhB,EAAgBA;AAAhB,QAAA,CAAA,GAAA,IAAA;AAAA,QACQ4U,CAAAA,GAAS3c,KAAKyc,SAALzc,CAAe+H,CAAAA,CAAKwL,EAApBvT,CADjB;AAEE,QAAA,KAAeJ,CAAf,KAAI+c,CAAJ,EACE,MAAM,IAAI9c,KAAJ,CAAU,qCAAqCkI,CAAAA,CAAKwL,EAApD,CAAN;AAEF,QAAMkK,CAAAA,GAAAA;AACJxT,MAAAA,IAAAA,EAAMlC,CAAAA,CAAKkC,IADPwT;AAEJlK,MAAAA,EAAAA,EAAIoJ,CAAAA,CAAOnC,QAFPiD;AAGJhD,MAAAA,QAAAA,EAAUkC,CAAAA,CAAOlC,QAHbgD;AAIJlE,MAAAA,UAAAA,EAAAA,CACKxR,CAAAA,CAAKuL,KAALvL,IAAKuL,EADViG,EAESE,GAFTF,CAEa,UAAA,CAAA,EAAA;AAAS,eAAA,CAAA,CAAMmE,UAAN,CAAiB,GAAjB,IAAwBpK,CAAAA,CAAMqK,MAANrK,CAAa,CAAbA,CAAxB,GAA0CA,CAA1C;AAA0CA,OAFhEiG,CAJIkE;AAOJ9H,MAAAA,MAAAA,EAAAA,EAPI8H;AAQJD,MAAAA,QAAAA,EAAAA,EARIC;AASJrgB,MAAAA,MAAAA,EAAAA;AATIqgB,KAAN;AAyFA,WA7EMd,CAAAA,CAAOvf,MAAPuf,KACJc,CAAAA,CAAQrgB,MAARqgB,GAAiBd,CAAAA,CAAOvf,MAAPuf,CAAcD,MAAdC,CACuC,UAAClD,CAAD,EAAML,CAAN,EAAMA;AAC5D,UAAMC,CAAAA,GAAaD,CAAAA,CAAMsB,YAAzB;AAAA,UACMlB,CAAAA,GAAmBJ,CAAAA,CAAM0B,kBAD/B;AAAA,UAEMnI,CAAAA,GAAOyG,CAAAA,CAAMzG,IAFnB;AAAA,UAGI/M,CAAAA,GAAAA,KAAQhG,CAHZ;AAIA,UAAA,KAAmBA,CAAnB,KAAIyZ,CAAJ,EACE,QAAQD,CAAAA,CAAMzG,IAAd;AACE,aAAK,QAAL;AAAK,eAIW/S,CAJX,MACHgG,CAAAA,GAAQsX,CAAAA,CAAKU,cAALV,CACJnV,CAAAA,CAAKoL,IADD+J,EACO9D,CAAAA,CAAMwB,WADbsC,EAC0B9D,CAAAA,CAAMlC,YADhCgG,CADL,KAI0B9D,CAAAA,CAAM6B,qBAJhC,KAKDrV,CAAAA,GAAQsX,CAAAA,CAAKU,cAALV,CACJnV,CAAAA,CAAKoL,IADD+J,EACO9D,CAAAA,CAAM6B,qBADbiC,EAEJ9D,CAAAA,CAAMlC,YAFFgG,CALP;AASH;;AACF,aAAK,QAAL;AAAK,eAIWtd,CAJX,MACHgG,CAAAA,GAAQsX,CAAAA,CAAKW,cAALX,CACJnV,CAAAA,CAAKoL,IADD+J,EACO9D,CAAAA,CAAMwB,WADbsC,EAEH9D,CAAAA,CAAMlC,YAANkC,IAAsB,CAFnB8D,CADL,KAI0B9D,CAAAA,CAAM6B,qBAJhC,KAKDrV,CAAAA,GAAQsX,CAAAA,CAAKW,cAALX,CACJnV,CAAAA,CAAKoL,IADD+J,EACO9D,CAAAA,CAAM6B,qBADbiC,EAEJ9D,CAAAA,CAAMlC,YAFFgG,CALP;AASH;;AACF,aAAK,UAAL;AAAK,eAGWtd,CAHX,MACHgG,CAAAA,GAAQsX,CAAAA,CAAKY,oBAALZ,CACJnV,CAAAA,CAAKoL,IADD+J,EACO9D,CAAAA,CAAMwB,WADbsC,EAC0B9D,CAAAA,CAAMlC,YADhCgG,CADL,KAG0B9D,CAAAA,CAAM6B,qBAHhC,KAIDrV,CAAAA,GAAQsX,CAAAA,CAAKY,oBAALZ,CACJnV,CAAAA,CAAKoL,IADD+J,EACO9D,CAAAA,CAAM6B,qBADbiC,EAEJ9D,CAAAA,CAAMlC,YAFFgG,CAJP;AAQH;;AACF,aAAK,MAAL;AAAK,eAGWtd,CAHX,MACHgG,CAAAA,GAAQsX,CAAAA,CAAKa,YAALb,CACJnV,CAAAA,CAAKoL,IADD+J,EACO9D,CAAAA,CAAMwB,WADbsC,EAC0B9D,CAAAA,CAAMlC,YADhCgG,CADL,KAG0B9D,CAAAA,CAAM6B,qBAHhC,KAIDrV,CAAAA,GAAQsX,CAAAA,CAAKa,YAALb,CACJnV,CAAAA,CAAKoL,IADD+J,EACO9D,CAAAA,CAAM6B,qBADbiC,EAEJ9D,CAAAA,CAAMlC,YAFFgG,CAJP;AAQH;;AACF,aAAK,OAAL;AAAK,eAGWtd,CAHX,MACHgG,CAAAA,GAAQsX,CAAAA,CAAKc,mBAALd,CACJnV,CAAAA,CAAKoL,IADD+J,EACO9D,CAAAA,CAAMwB,WADbsC,EAC0B9D,CAAAA,CAAMlC,YADhCgG,CADL,KAG0B9D,CAAAA,CAAM6B,qBAHhC,KAIDrV,CAAAA,GAAQsX,CAAAA,CAAKc,mBAALd,CACJnV,CAAAA,CAAKoL,IADD+J,EACO9D,CAAAA,CAAM6B,qBADbiC,EAEJ9D,CAAAA,CAAMlC,YAFFgG,CAJP;AAQH;;AACF,aAAK,OAAL;AAAK,eAGWtd,CAHX,MACHgG,CAAAA,GAAQsX,CAAAA,CAAKe,aAALf,CACJnV,CAAAA,CAAKoL,IADD+J,EACO9D,CAAAA,CAAMwB,WADbsC,EAC0B9D,CAAAA,CAAMlC,YADhCgG,CADL,KAG0B9D,CAAAA,CAAM6B,qBAHhC,KAIDrV,CAAAA,GAAQsX,CAAAA,CAAKe,aAALf,CACJnV,CAAAA,CAAKoL,IADD+J,EACO9D,CAAAA,CAAM6B,qBADbiC,EAEJ9D,CAAAA,CAAMlC,YAFFgG,CAJP;AAQH;;AACF,aAAK,QAAL;AACA,aAAK,SAAL;AACE;;AACF;AACE,gBAAM,IAAIrd,KAAJ,CACF,6BAA2BuZ,CAAAA,CAAMzG,IAAjC,GAAiCA,WAAjC,GAAiD5K,CAAAA,CAAKwL,EADpD,CAAN;AA7DJ;AAkEF,aADAkG,CAAAA,CAAIL,CAAAA,CAAMuB,WAAVlB,CAAAA,GAAUkB;AAAgB/U,QAAAA,KAAAA,EAAAA,CAAhB+U;AAAuBtB,QAAAA,UAAAA,EAAAA,CAAvBsB;AAAmChI,QAAAA,IAAAA,EAAAA,CAAnCgI;AAAyCnB,QAAAA,gBAAAA,EAAAA;AAAzCmB,OAAVlB,EACOA,CAAP;AAAOA,KAzEQkD,EAyERlD,EAzEQkD,CADbA,GA6ECc,CAAP;AAAOA,GAvKTpZ,EA0KQ+W,CAAAA,CAAAA,SAAAA,CAAAA,cAAAA,GAAR,UACI8C,CADJ,EACmDjU,CADnD,EACiEkU,CADjE,EAEIC,CAFJ,EAEIA;AAAAA,SAAAA,CAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CAAAA,CAAAA;AACF,QAAMhF,CAAAA,GAAQ8E,CAAAA,CAAMjU,CAANiU,CAAd;;AACA,QAAA,KAActe,CAAd,KAAIwZ,CAAJ,EAAyB;AACvB,UAAMxT,CAAAA,GAAQvG,MAAAA,CAAOC,YAAPD,CAAoBtB,KAApBsB,CAA0B,IAA1BA,EAAgC+Z,CAAAA,CAAM3G,CAAtCpT,CAAd;AACA,aAAO+e,CAAAA,GAAWxY,CAAXwY,GAAmBxY,CAAAA,CAAMkE,WAANlE,EAA1B;AAEF;;AAAA,WAAOuY,CAAP;AAAOA,GAlLT9Z,EAqLQ+W,CAAAA,CAAAA,SAAAA,CAAAA,YAAAA,GAAR,UACI8C,CADJ,EACmDjU,CADnD,EAEIkU,CAFJ,EAEIA;AACF,QAAM/E,CAAAA,GAAQ8E,CAAAA,CAAMjU,CAANiU,CAAd;AACA,WAAO9E,CAAAA,GAAQA,CAAAA,CAAMja,CAAdia,GAAkB+E,CAAzB;AAAyBA,GAzL3B9Z,EA4LQ+W,CAAAA,CAAAA,SAAAA,CAAAA,cAAAA,GAAR,UACI8C,CADJ,EACmDjU,CADnD,EAEIkU,CAFJ,EAEIA;AACF,QAAM/E,CAAAA,GAAQ8E,CAAAA,CAAMjU,CAANiU,CAAd;AAAA,QACMtY,CAAAA,GAASwT,CAAAA,GAAQA,CAAAA,CAAMA,CAAAA,CAAMxT,KAAZwT,CAARA,GAA6B+E,CAD5C;AAEA,WAAyB,YAAA,OAAVvY,CAAU,GAAYA,CAAZ,GAAoBA,CAAAA,CAAa,KAAbA,EAA7C;AAA0D,GAjM5DvB,EAmMQ+W,CAAAA,CAAAA,SAAAA,CAAAA,aAAAA,GAAR,UACI8C,CADJ,EACmDjU,CADnD,EAEIkU,CAFJ,EAEIA;AACF,QAAM/E,CAAAA,GAAQ8E,CAAAA,CAAMjU,CAANiU,CAAd;AACA,QAAI9E,CAAAA,IAASA,CAAAA,CAAMzG,IAAnB,EACE,QAAQyG,CAAAA,CAAMzG,IAAd;AACE,WAAKhC,cAAAA,CAAWO,QAAXP,CAAoB0N,QAAzB;AACE,eAAO,SAAP;;AACF,WAAK1N,cAAAA,CAAWO,QAAXP,CAAoB2N,QAAzB;AACE,eAAO,OAAP;;AACF,WAAK3N,cAAAA,CAAWO,QAAXP,CAAoB4N,OAAzB;AACE,eAAO,MAAP;;AACF;AACE,eAAOJ,CAAP;AARJ;AAWF,WAAOA,CAAP;AAAOA,GAnNT9Z,EAqNQ+W,CAAAA,CAAAA,SAAAA,CAAAA,mBAAAA,GAAR,UACI8C,CADJ,EACmDjU,CADnD,EAEIkU,CAFJ,EAEIA;AACF,QAAM/E,CAAAA,GAAQ8E,CAAAA,CAAMjU,CAANiU,CAAd;AACA,WAAI9E,CAAAA,IAASA,CAAAA,CAAMxG,KAAfwG,GACKA,CAAAA,CAAMxG,KAANwG,CAAY9H,GAAZ8H,CAAgBK,GAAhBL,CACH,UAAA,CAAA,EAAA;AACI,aAAqB,YAAA,OAAb9H,CAAAA,CAAItM,IAAS,GAAYsM,CAAAA,CAAItM,IAAhB,GAAuBsM,CAAAA,CAAItM,IAAJsM,CAAgB,KAAhBA,EAA5C;AAA4D,KAF7D8H,CADLA,GAKG+E,CALP;AAKOA,GA9NT9Z,EAiOQ+W,CAAAA,CAAAA,SAAAA,CAAAA,oBAAAA,GAAR,UACI8C,CADJ,EACmDjU,CADnD,EAEIkU,CAFJ,EAEIA;AACF,QAAM/E,CAAAA,GAAQ8E,CAAAA,CAAMjU,CAANiU,CAAd;AACA,WAAI9E,CAAAA,GAAAA,CACOA,CAAAA,CAAM5G,IAAN4G,CAAW1G,CAAX0G,IAAgBA,CAAAA,CAAM5G,IAAN4G,CAAW1G,CAAX0G,CAAa7b,MAA7B6b,GAAsCA,CAAAA,CAAM5G,IAAN4G,CAAW1G,CAAjD0G,GACsCA,CAAAA,CAAM5G,IAAN4G,CAAW1a,CAFxD0a,EAGUK,GAHVL,CAGc,UAAA,CAAA,EAAA;AAAK,aAAc,YAAA,OAANoF,CAAM,GAAYA,CAAZ,GAAgBA,CAAAA,CAAS,KAATA,EAA9B;AAAuC,KAH1DpF,CAAAA,GAMG+E,CANP;AAMOA,GA3OT9Z,EA2OS8Z,CAEX;AAFWA,CAnPwC,EhBxB5C;AAAA,IiBSIM,SAAAA,GAAwB,SAAxBA,SAAwB,CAAC1W,CAAD,EAAamR,CAAb,EACCC,CADD,EACCA;AAElC,UAAQpR,CAAAA,CAAKwL,EAAb;AACE,SAAK,KAAL;AACE,aAAA,CAAQmL,GAAAA,CACHC,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADGD,EAEJC,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAFID,CAAR,CAAA;;AAIF,SAAK,MAAL;AACE,aAAA,CAAQE,IAAAA,CACJD,aAAAA,CAAc,SAAdA,EAAyB5W,CAAzB4W,EAA+BzF,CAA/ByF,EAA0CxF,CAA1CwF,CADIC,CAAR,CAAA;;AAGF,SAAK,KAAL;AACE,aAAA,CAAQC,GAAAA,CACJF,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIE,EAEJF,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAFIE,CAAR,CAAA;;AAGF,SAAK,KAAL;AACE,aAAA,CAAQC,GAAAA,CACJH,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIG,EAEJH,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAFIG,CAAR,CAAA;;AAGF,SAAK,KAAL;AACE,aAAA,CAAQC,GAAAA,CACJJ,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADII,EAEJJ,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAFII,CAAR,CAAA;;AAIF,SAAK,UAAL;AACE,aAAA,CAAQC,QAAAA,CACJL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIK,EAEJL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAFIK,CAAR,CAAA;;AAIF,SAAK,KAAL;AACE,aAAA,CAAQC,GAAAA,CACJN,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIM,EAEJN,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAFIM,CAAR,CAAA;;AAIF,SAAK,SAAL;AACE,aAAA,CAAQC,OAAAA,CACJP,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIO,EAEJP,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAFIO,CAAR,CAAA;;AAIF,SAAK,SAAL;AACE,aAAA,CAAQC,OAAAA,CACJR,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIQ,EAEJR,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAFIQ,CAAR,CAAA;;AAIF,SAAK,KAAL;AACE,aAAA,CAAQC,GAAAA,CACJT,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIS,EAEJT,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAFIS,CAAR,CAAA;;AAIF,SAAK,mBAAL;AACE,aAAA,CAAQC,iBAAAA,CACJV,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIU,EAEJV,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAFIU,CAAR,CAAA;;AAIF;AACE,YAAM9P,SAAAA,CAAU,eAAaxH,CAAAA,CAAKwL,EAAlB,GAAkBA,qBAA5BhE,CAAN;AAtDJ;AAsDsCgE,CjBlEjC;AAAA,IkBSIkL,WAAAA,GAAwB,SAAxBA,WAAwB,CAAC1W,CAAD,EAAamR,CAAb,EACCC,CADD,EACCA;AAElC,UAAQpR,CAAAA,CAAKwL,EAAb;AACE,SAAK,KAAL;AACE,aAAA,CAAQ+L,GAAAA,CACJX,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIW,CAAR,CAAA;;AAEF,SAAK,MAAL;AACE,aAAA,CAAQC,IAAAA,CACJZ,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIY,CAAR,CAAA;;AAEF,SAAK,OAAL;AACE,aAAA,CAAQC,KAAAA,CACJb,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIa,CAAR,CAAA;;AAEF,SAAK,MAAL;AACE,aAAA,CAAQC,IAAAA,CACJd,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIc,CAAR,CAAA;;AAEF,SAAK,OAAL;AACE,aAAA,CAAQC,KAAAA,CACJf,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIe,CAAR,CAAA;;AAEF,SAAK,MAAL;AACE,aAAA,CAAQC,IAAAA,CACJhB,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIgB,CAAR,CAAA;;AAEF,SAAK,OAAL;AACE,aAAA,CAAQC,KAAAA,CACJjB,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIiB,EAEJjB,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAFIiB,CAAR,CAAA;;AAGF,SAAK,OAAL;AACE,aAAA,CAAQC,KAAAA,CACJlB,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIkB,CAAR,CAAA;;AAEF,SAAK,MAAL;AACE,aAAA,CAAQC,IAAAA,CACJnB,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADImB,CAAR,CAAA;;AAEF,SAAK,KAAL;AACE,aAAA,CAAQC,GAAAA,CACJpB,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIoB,CAAR,CAAA;;AAEF,SAAK,MAAL;AACE,aAAA,CAAQC,IAAAA,CACJrB,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIqB,CAAR,CAAA;;AAEF,SAAK,KAAL;AACE,aAAA,CAAQC,GAAAA,CACJtB,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIsB,CAAR,CAAA;;AAEF,SAAK,KAAL;AACE,aAAA,CAAQC,GAAAA,CACJvB,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIuB,CAAR,CAAA;;AAEF,SAAK,KAAL;AACE,aAAA,CAAQC,GAAAA,CACJxB,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIwB,CAAR,CAAA;;AAEF,SAAK,OAAL;AACE,aAAA,CAAQC,KAAAA,CACJzB,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIyB,CAAR,CAAA;;AAGF,SAAK,OAAL;AACE,aAAA,CAAQC,KAAAA,CACJ1B,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI0B,CAAR,CAAA;;AAEF,SAAK,KAAL;AACE,aAAA,CAAQC,GAAAA,CACJ3B,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI2B,CAAR,CAAA;;AAEF,SAAK,OAAL;AACE,aAAA,CAAQC,KAAAA,CACJ5B,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI4B,CAAR,CAAA;;AAGF,SAAK,KAAL;AACE,aAAA,CAAQC,GAAAA,CACJ7B,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI6B,CAAR,CAAA;;AAEF,SAAK,YAAL;AACE,aAAA,CAAQC,UAAAA,CACJ9B,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI8B,CAAR,CAAA;;AAGF,SAAK,MAAL;AACE,aAAA,CAAQC,IAAAA,CACJ/B,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI+B,CAAR,CAAA;;AAEF,SAAK,OAAL;AACE,aAAA,CAAQC,KAAAA,CACJhC,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIgC,CAAR,CAAA;;AAGF,SAAK,MAAL;AACE,aAAA,CAAQC,IAAAA,CACJjC,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIiC,CAAR,CAAA;;AAEF,SAAK,SAAL;AACE,aAAA,CAAQC,OAAAA,CACJlC,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIkC,CAAR,CAAA;;AAEF,SAAK,KAAL;AACE,aAAA,CAAQC,GAAAA,CACJnC,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADImC,CAAR,CAAA;;AAEF,SAAK,MAAL;AACE,aAAA,CAAQC,IAAAA,CACJpC,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIoC,CAAR,CAAA;;AAGF,SAAK,MAAL;AACE,aAAA,CAAQC,IAAAA,CACJrC,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIqC,CAAR,CAAA;;AAGF,SAAK,UAAL;AACE,aAAA,CAAQC,QAAAA,CACJtC,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIsC,CAAR,CAAA;;AAGF,SAAK,MAAL;AACE,aAAA,CAAQC,IAAAA,CACJvC,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIuC,CAAR,CAAA;;AAGF,SAAK,QAAL;AACE,aAAA,CAAQC,MAAAA,CACJxC,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIwC,CAAR,CAAA;;AAGF,SAAK,MAAL;AACE,aAAA,CAAQC,IAAAA,CACJzC,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIyC,CAAR,CAAA;;AAGF,SAAK,KAAL;AACE,aAAA,CAAQC,GAAAA,CACJ1C,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI0C,CAAR,CAAA;;AAEF,SAAK,aAAL;AACE,aAAA,CAAQC,WAAAA,CACJ3C,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI2C,EAEJ3C,aAAAA,CAAc,cAAdA,EAA8B5W,CAA9B4W,EAAoCzF,CAApCyF,EAA+CxF,CAA/CwF,CAFI2C,EAGJ3C,aAAAA,CAAc,cAAdA,EAA8B5W,CAA9B4W,EAAoCzF,CAApCyF,EAA+CxF,CAA/CwF,CAHI2C,CAAR,CAAA;;AAIF,SAAK,OAAL;AACE,aAAA,CAAQvC,GAAAA,CACJwC,MAAAA,CAAW,CAAXA,EAAgB,SAAhBA,CADIxC,EAEJmC,IAAAA,CAAS5H,SAAAA,CAAUvR,CAAAA,CAAKwR,UAALxR,CAAgB,CAAhBA,CAAVuR,EAA8BJ,CAA9BI,EAAyCH,CAAzCG,CAAT4H,CAFInC,CAAR,CAAA;;AAGF,SAAK,MAAL;AACE,aAAA,CAAQyC,IAAAA,CACJ7C,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI6C,EAEJ7C,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAFI6C,CAAR,CAAA;;AAGF,SAAK,WAAL;AACE,aAAA,CAAQC,SAAAA,CACJ9C,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI8C,EAEJ9C,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CAFI8C,CAAR,CAAA;;AAGF;AACE,YAAMlS,SAAAA,CAAU,eAAaxH,CAAAA,CAAKwL,EAAlB,GAAkBA,qBAA5BhE,CAAN;AA9HJ;AA8HsCgE,ClB1IjC;AAAA,IkB0IiCA,WAAAA,GAAAA,YAAAA;ACzHtC,WAAA,CAAA,CACoBtJ,CADpB,EACkDkI,CADlD,EAEYwP,CAFZ,EAEqCC,CAFrC,EAGoBC,CAHpB,EAIoBC,CAJpB,EAKoBC,CALpB,EAKoBA;AAJA9X,SAAAA,IAAAA,GAAAA,CAAAA,EAA8BkI,KAAAA,KAAAA,GAAAA,CAA9BlI,EACR0X,KAAAA,OAAAA,GAAAA,CADQ1X,EACiB2X,KAAAA,YAAAA,GAAAA,CADjB3X,EAEA4X,KAAAA,sBAAAA,GAAAA,CAFA5X,EAGA6X,KAAAA,WAAAA,GAAAA,CAHA7X,EAIA8X,KAAAA,cAAAA,GAAAA,CAJA9X,EAJZjK,KAAAA,OAAAA,GAAAA,EAIYiK,EAHZjK,KAAAA,OAAAA,GAAAA,CAAU,CAGEiK,EAKlBjK,KAAKgiB,EAALhiB,GAAU0hB,CAAAA,CAAYO,MAAZP,EALQzX;AA8RtB;;AAAA,SAtRE5F,MAAAA,CAAAA,cAAAA,CAAIqd,CAAAA,CAAAA,SAAJrd,EAAIqd,QAAJrd,EAAIqd;AAAAA,IAAAA,GAAAA,EAAJrd,eAAAA;AACE,aAAOrE,KAAKkiB,OAAZ;AAAYA,KADVR;AACUQ,IAAAA,UAAAA,EAAAA,CAAAA,CADVR;AACUQ,IAAAA,YAAAA,EAAAA,CAAAA;AADVR,GAAJrd,GAOAqd,CAAAA,CAAAA,SAAAA,CAAAA,aAAAA,GAAAA,YAAAA;AACE1hB,SAAKmiB,OAALniB,CAAasd,OAAbtd,CAAqB,UAAA,CAAA,EAAA;AAAU,aAAA,CAAA,CAAO6S,MAAP,CAAcuP,OAAd,EAAA;AAAcA,KAA7CpiB,GACAA,KAAKmiB,OAALniB,GAAKmiB,EADLniB,EAEAA,KAAKkiB,OAALliB,GAAKkiB,CAAU,CAFfliB;AAEe,GAVjBqE,EAaAqd,CAAAA,CAAAA,SAAAA,CAAAA,IAAAA,GAAAA,YAAAA;AACE,WAAO1hB,KAAKmiB,OAALniB,CAAazC,MAApB;AAAoBA,GAdtB8G,EAqBAqd,CAAAA,CAAAA,SAAAA,CAAAA,IAAAA,GAAAA,UAAKjkB,CAALikB,EAAKjkB;AACH,QAAIuC,KAAKkiB,OAAT,EACE,MAAM,IAAIriB,KAAJ,CAAU,iBAAeG,KAAKiK,IAApB,GAAoBA,2BAA9B,CAAN;AAGF,QAAIxM,CAAAA,GAAQ,CAARA,IAAaA,CAAAA,IAASuC,KAAKmiB,OAALniB,CAAazC,MAAvC,EACE,MAAM,IAAIsC,KAAJ,CAAU,8BAA4BpC,CAA5B,GAA4BA,uBAA5B,GACZuC,KAAKmiB,OAALniB,CAAazC,MADX,CAAN;AAIF,QAAM8kB,CAAAA,GAAkBriB,KAAKmiB,OAALniB,CAAavC,CAAbuC,CAAxB;AACA,QAAIqiB,CAAAA,CAAgBC,OAApB,EACE,MAAM,IAAIziB,KAAJ,CACF,iBAAeG,KAAKiK,IAApB,GAAoBA,yBAApB,GACIxM,CADJ,GACIA,sGAFF,CAAN;AAWF,WALIuC,KAAK+hB,cAAL/hB,KACFqiB,CAAAA,CAAgBC,OAAhBD,GAAgBC,CAAU,CADxBtiB,GAIJqiB,CAAAA,CAAgB3d,IAAhB2d,GAAgB3d,CAAO,CAJnB1E,EAKGqiB,CAAAA,CAAgBxP,MAAvB;AAAuBA,GA5CzBxO,EAkDAqd,CAAAA,CAAAA,SAAAA,CAAAA,QAAAA,GAAAA,UAASa,CAATb,EAASa;AAATb,QAAAA,CAAAA,GAAAA,IAAAA;AACE,WAAOa,CAAAA,CAAQ9I,GAAR8I,CAAY,UAAA,CAAA,EAAA;AAAS,aAAA,CAAA,CAAK7d,IAAL,CAAUjH,CAAV,CAAA;AAAUA,KAA/B8kB,CAAP;AAAsC9kB,GAnDxC4G,EA2DAqd,CAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAAAA,UAAMjkB,CAANikB,EAAqB7O,CAArB6O,EAAqB7O;AACnB,QAAI7S,KAAKkiB,OAAT,EACE,MAAM,IAAIriB,KAAJ,CAAU,iBAAeG,KAAKiK,IAApB,GAAoBA,2BAA9B,CAAN;AAGF,QAAIxM,CAAAA,GAAQ,CAARA,IAAQ,CAAMuC,KAAK8hB,WAAX,IAA0BrkB,CAAAA,IAASuC,KAAK2hB,OAApD,EACE,MAAM,IAAI9hB,KAAJ,CAAU,6BACZpC,CADY,GACZA,6CADY,GACuCuC,KAAK2hB,OADtD,CAAN;AAIF,QAAMziB,CAAAA,GAAIc,KAAKmiB,OAALniB,CAAavC,CAAbuC,KAAavC,EAAvB;AAEA,QAAIoV,CAAAA,CAAOV,KAAPU,KAAiB7S,KAAKmS,KAA1B,EACE,MAAM,IAAItS,KAAJ,CAAU,iBACZG,KAAKiK,IADO,GACPA,yCADO,GACuCxM,CADvC,GACuCA,0CADvC,GAGZoV,CAAAA,CAAOV,KAHK,GAGLA,6BAHK,GAG8BnS,KAAKmS,KAHnC,GAGmCA,GAH7C,CAAN;AAgBF,QAToB,MAAhBnS,KAAKgF,IAALhF,EAAgB,IAAkC,MAA7BA,KAAK4hB,YAAL5hB,CAAkBzC,MAAvB,KAClByC,KAAK4hB,YAAL5hB,GAAoB6S,CAAAA,CAAOD,KADT,GAIpB5S,KAAKwiB,iBAALxiB,CACIA,KAAK4hB,YADT5hB,EACuB6S,CAAAA,CAAOD,KAD9B5S,EAEI,iBAAeA,KAAKiK,IAApB,GAAoBA,yCAApB,GACIxM,CADJ,GACIA,GAHRuC,CAJoB,EAShBd,CAAAA,IAAKA,CAAAA,CAAEwF,IAAX,EACE,MAAM,IAAI7E,KAAJ,CACF,iBAAeG,KAAKiK,IAApB,GAAoBA,yCAApB,GACIxM,CADJ,GACIA,qCAFF,CAAN;AAKF,QAAIyB,CAAAA,IAAKA,CAAAA,CAAEujB,OAAX,EACE,MAAM,IAAI5iB,KAAJ,CACF,iBAAeG,KAAKiK,IAApB,GAAoBA,yCAApB,GACIxM,CADJ,GACIA,wCAFF,CAAN;AAKFyB,IAAAA,CAAAA,CAAE2T,MAAF3T,GAAW2T,CAAX3T,EACAA,CAAAA,CAAEujB,OAAFvjB,GAAEujB,CAAU,CADZvjB,EAGAc,KAAKmiB,OAALniB,CAAavC,CAAbuC,IAAsBd,CAHtBA;AAGsBA,GAvGxBmF,EA6GAqd,CAAAA,CAAAA,SAAAA,CAAAA,SAAAA,GAAAA,UAAUa,CAAVb,EAA6BS,CAA7BT,EAA6BS;AAA7BT,QAAAA,CAAAA,GAAAA,IAAAA;AACE,QAAIa,CAAAA,CAAQhlB,MAARglB,KAAmBJ,CAAAA,CAAQ5kB,MAA/B,EACE,MAAM,IAAIsC,KAAJ,CACF,iBAAeG,KAAKiK,IAApB,GAAoBA,6DAApB,GAEIsY,CAAAA,CAAQhlB,MAFZ,GAEYA,oCAFZ,GAGI4kB,CAAAA,CAAQ5kB,MAHZ,GAGYA,GAJV,CAAN;AAOFglB,IAAAA,CAAAA,CAAQjF,OAARiF,CAAgB,UAAC7jB,CAAD,EAAIjB,CAAJ,EAAIA;AAAU,aAAA,CAAA,CAAKkH,KAAL,CAAWjG,CAAX,EAAcyjB,CAAAA,CAAQ1kB,CAAR0kB,CAAd,CAAA;AAAsB1kB,KAApD8kB;AAAoD9kB,GAtHtD4G,EAiIAqd,CAAAA,CAAAA,SAAAA,CAAAA,MAAAA,GAAAA,UAAOa,CAAPb,EAA2BvP,CAA3BuP,EAA2BvP;AACzB,QAAMA,CAAAA,IAASA,CAAAA,KAAUnS,KAAKmS,KAA9B,EACE,MAAM,IAAItS,KAAJ,CAAU,0BACZG,KAAKmS,KADO,GACPA,8BADO,GAC6BA,CADvC,CAAN;;AAIF,QAAA,CAAKoQ,CAAL,EAAc;AACZA,MAAAA,CAAAA,GAAAA,EAAAA;;AACA,WAAK,IAAI7jB,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAIsB,KAAKgF,IAALhF,EAApB,EAAiCtB,CAAAA,EAAjC;AACE6jB,QAAAA,CAAAA,CAAQnjB,IAARmjB,CAAa7jB,CAAb6jB;AADF;AAKF;;AAAA,QAAuB,MAAnBA,CAAAA,CAAQhlB,MAAZ,EACE,OAAOsV,MAAAA,CAAAA,EAAAA,EAAAA,CAAY,CAAZA,EAAe2J,MAAf3J,CAAsB7S,KAAK4hB,YAA3B/O,CAAAA,CAAP;AAKF,QAAMsP,CAAAA,GAAUniB,KAAK0iB,QAAL1iB,CAAcuiB,CAAdviB,CAAhB;AAKA,WAHAA,KAAKwiB,iBAALxiB,CACIA,KAAK4hB,YADT5hB,EACuBmiB,CAAAA,CAAQ,CAARA,CAAAA,CAAWvP,KADlC5S,EACyC,8BADzCA,GAGOwK,KAAAA,CAAM2X,CAAN3X,EAAe,CAAfA,CAAP;AAAsB,GAzJxBnG,EA+JAqd,CAAAA,CAAAA,SAAAA,CAAAA,MAAAA,GAAAA,UAAOvP,CAAPuP,EAAOvP;AACL,QAAMA,CAAAA,IAASA,CAAAA,KAAUnS,KAAKmS,KAA9B,EACE,MAAM,IAAItS,KAAJ,CAAU,0BACZG,KAAKmS,KADO,GACPA,8BADO,GAC6BA,CADvC,CAAN;AAIF,QAAoB,MAAhBnS,KAAKgF,IAALhF,EAAJ,EACE,OAAO6S,MAAAA,CAAAA,EAAAA,EAAAA,CAAY,CAAZA,EAAe2J,MAAf3J,CAAsB7S,KAAK4hB,YAA3B/O,CAAAA,CAAP;;AAIF,SADA,IAAM0P,CAAAA,GAAAA,EAAN,EACS7jB,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAIsB,KAAKgF,IAALhF,EAApB,EAAiCtB,CAAAA,EAAjC;AACE6jB,MAAAA,CAAAA,CAAQnjB,IAARmjB,CAAa7jB,CAAb6jB;AADF;;AAIA,QAAMJ,CAAAA,GAAUniB,KAAK0iB,QAAL1iB,CAAcuiB,CAAdviB,CAAhB;AAOA,WALAA,KAAKwiB,iBAALxiB,CACIA,KAAK4hB,YADT5hB,EACuBmiB,CAAAA,CAAQ,CAARA,CAAAA,CAAWvP,KADlC5S,EAEI,qDACIA,KAAK4hB,YADT,GACSA,2BADT,GACiDO,CAAAA,CAAQ,CAARA,CAAAA,CAAWvP,KAD5D,GAC4DA,GAHhE5S,GAKOwc,MAAAA,CAAO2F,CAAP3F,EAAgB,CAAhBA,CAAP;AAAuB,GArLzBnY,EA8LAqd,CAAAA,CAAAA,SAAAA,CAAAA,OAAAA,GAAAA,UAAQa,CAARb,EAA2B7O,CAA3B6O,EAA2B7O;AACzB,QAAIA,CAAAA,CAAOV,KAAPU,KAAiB7S,KAAKmS,KAA1B,EACE,MAAM,IAAItS,KAAJ,CAAU,0BACZG,KAAKmS,KADO,GACPA,wBADO,GACuBU,CAAAA,CAAOV,KADxC,CAAN;AAIF,QAAIoQ,CAAAA,CAAQhlB,MAARglB,KAAmB1P,CAAAA,CAAOD,KAAPC,CAAa,CAAbA,CAAvB,EACE,MAAM,IAAIhT,KAAJ,CAAU,wDACZ0iB,CAAAA,CAAQhlB,MADI,GACJA,OADI,GACUsV,CAAAA,CAAOD,KAAPC,CAAa,CAAbA,CADpB,CAAN;AAIF,QAAM8P,CAAAA,GAAWrkB,IAAAA,CAAKskB,GAALtkB,CAAKskB,KAALtkB,CAAAA,IAAAA,EAAYikB,CAAZjkB,CAAjB;AAEA,QAAA,CAAK0B,KAAK8hB,WAAV,IAAyBa,CAAAA,IAAY3iB,KAAK2hB,OAA1C,EACE,MAAM,IAAI9hB,KAAJ,CACF,qCAAmC8iB,CAAnC,GAAmCA,QAAnC,GAAoD3iB,KAAK2hB,OAAzD,GAAyDA,GADvD,CAAN;AAIF3hB,SAAK6iB,SAAL7iB,CAAeuiB,CAAfviB,EAAwB8iB,OAAAA,CAAQjQ,CAARiQ,EAAgB,CAAhBA,CAAxB9iB;AAAwC,GAhN1CqE,EAyNAqd,CAAAA,CAAAA,SAAAA,CAAAA,KAAAA,GAAAA,UAAMnkB,CAANmkB,EAAwB7O,CAAxB6O,EAAwB7O;AAAxB6O,QAAAA,CAAAA,GAAAA,IAAAA;AACE,QAAI7O,CAAAA,CAAOV,KAAPU,KAAiB7S,KAAKmS,KAA1B,EACE,MAAM,IAAItS,KAAJ,CAAU,0BACZG,KAAKmS,KADO,GACPA,wBADO,GACuBU,CAAAA,CAAOV,KADxC,CAAN;AAGF,QAAI4Q,CAAAA,GAAc,CAAlB;AAAA,QACMC,CAAAA,GAAoBzlB,CAAAA,CAAOkc,GAAPlc,CAAW,UAAA,CAAA,EAAA;AAEnC,aADAwlB,CAAAA,IAAete,CACf;AADeA,KADSlH,CAD1B;AAMA,QAAIwlB,CAAAA,KAAgBlQ,CAAAA,CAAOD,KAAPC,CAAa,CAAbA,CAApB,EACE,MAAM,IAAIhT,KAAJ,CAAU,uGAEZkjB,CAFY,GAEZA,2BAFY,GAE2BlQ,CAAAA,CAAOD,KAF5C,CAAN;AAKF,QAAA,CAAK5S,KAAK8hB,WAAV,IAAyBvkB,CAAAA,CAAOA,MAAPA,KAAkByC,KAAK2hB,OAAhD,EACE,MAAM,IAAI9hB,KAAJ,CACF,6DACIG,KAAK2hB,OADT,GACSA,OADT,GACwBpkB,CAAAA,CAAOA,MAD/B,GAC+BA,gEAF7B,CAAN;AAMF,QAAM0lB,CAAAA,GAAgC,MAAhBF,CAAgB,GAAI,CAAJ,GAAQlQ,CAAAA,CAAO7N,IAAP6N,GAAckQ,CAA5D;AAAA,QACMZ,CAAAA,GAAAA,EADN;AAEAe,IAAAA,IAAAA,CAAK,YAAA;AACHrQ,MAAAA,CAAAA,GAASA,CAAAA,CAAOsQ,OAAPtQ,CAAOsQ,CAAS,CAATA,EAAYJ,CAAZI,EAAyBF,CAAzBE,CAAPtQ,CAATA;;AACA,WAAK,IAAInU,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAInB,CAAAA,CAAOA,MAA3B,EAA2BA,EAAUmB,CAArC,EAAwC;AACtC,YACM0kB,CAAAA,GAAAA,CAAW,CAAXA,EADwB,MAAN1kB,CAAM,GAAK,CAAL,GAASskB,CAAAA,CAAkBtkB,CAAAA,GAAI,CAAtBskB,CACjCI,EAA8B,CAA9BA,CADN;AAAA,YAEMC,CAAAA,GAAAA,CAAS,CAATA,EAAY9lB,CAAAA,CAAOmB,CAAPnB,CAAZ8lB,EAAuBJ,CAAvBI,CAFN;AAGAlB,QAAAA,CAAAA,CAAQzjB,CAARyjB,CAAAA,GAAa5iB,KAAAA,CAAMsT,CAANtT,EAAc6jB,CAAd7jB,EAAuB8jB,CAAvB9jB,CAAAA,CAA8B4jB,OAA9B5jB,CAAsC2d,CAAAA,CAAK0E,YAA3CriB,CAAb4iB;AAEF;;AAAA,aAAOA,CAAP;AAAOA,KARTe,CAAAA;;AAWA,SADA,IAAMX,CAAAA,GAAAA,EAAN,EACS7jB,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAInB,CAAAA,CAAOA,MAA3B,EAAmCmB,CAAAA,EAAnC;AACE6jB,MAAAA,CAAAA,CAAQ7jB,CAAR6jB,CAAAA,GAAa7jB,CAAb6jB;AADF;;AAGAviB,SAAK6iB,SAAL7iB,CAAeuiB,CAAfviB,EAAwBmiB,CAAxBniB;AAAwBmiB,GAjQ1B9d,EAoQQqd,CAAAA,CAAAA,SAAAA,CAAAA,iBAAAA,GAAR,UACI4B,CADJ,EACsBC,CADtB,EACwCC,CADxC,EACwCA;AAAAA,SAAAA,CAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAAA,EAAAA,GACtC1d,IAAAA,CAAK2d,MAAL3d,CACI9F,KAAK0jB,WAAL1jB,CAAiBsjB,CAAjBtjB,EAAyBujB,CAAzBvjB,CADJ8F,EAEI0d,CAAAA,GAAqB,UAArBA,GAAgCF,CAAhCE,GAAgCF,OAAhCE,GAA8CD,CAA9CC,GAA8CD,aAFlDzd,CADsC0d;AAGYD,GAxQpDlf,EA2QQqd,CAAAA,CAAAA,SAAAA,CAAAA,WAAAA,GAAR,UAAoBiC,CAApB,EAAkCC,CAAlC,EAAkCA;AAChC,QAAID,CAAAA,CAAGpmB,MAAHomB,KAAcC,CAAAA,CAAGrmB,MAArB,EACE,OAAA,CAAO,CAAP;;AAEF,SAAK,IAAImB,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAIilB,CAAAA,CAAGpmB,MAAvB,EAA+BmB,CAAAA,EAA/B;AACE,UAAA,CAAe,CAAf,KAAIilB,CAAAA,CAAGjlB,CAAHilB,CAAJ,IAAOjlB,CAAwB,CAAxBA,KAAaklB,CAAAA,CAAGllB,CAAHklB,CAApB,IAAoCD,CAAAA,CAAGjlB,CAAHilB,CAAAA,KAAUC,CAAAA,CAAGllB,CAAHklB,CAA9C,EACE,OAAA,CAAO,CAAP;AAFJ;;AAKA,WAAA,CAAO,CAAP;AAAO,GApRTvf,EAbeqd,CAAAA,CAAAA,MAAAA,GAAS,CAaxBrd,EAbwB,CAmS1B;AAnS0B,CD6HckP,ElB1IjC;;AmBamB,SAAA,WAAA,CCFtBxL,CDEsB,ECFVmR,CDEU,ECDtBC,CDCsB,ECDtBA;AAAAA,SAAAA,SAAAA,CAAAA,IAAAA,EAAAA,KAAAA,CAAAA,EAAAA,KAAAA,CAAAA,EAAAA,YAAAA;AAAAA,QAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA;;AAAAA,WAAAA,WAAAA,CAAAA,IAAAA,EAAAA,UAAAA,CAAAA,EAAAA;AAAAA,cAAAA,CAAAA,CAAAA,KAAAA;AAAAA,aAAAA,CAAAA;AAAAA,kBACMpR,CAAAA,CAAKwL,EADX4F;AACW5F,iBACN,UADMA;AACN,qBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;AAAA,iBAIA,QAJA;AAIA,qBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;AAAA,iBASA,OATA;AASA,qBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;AAAA,iBAMA,OANA;AAMA,qBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;AAAA,iBAQA,MARA;AAQA,qBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;AAAA,iBAMA,eANA;AAMA,qBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;AAAA,iBAMA,aANA;AAMA,qBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;AAAA,iBAoBA,kBApBA;AAoBA,qBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;AAAA,iBAUA,iBAVA;AAUA,qBAAA,CAAA,CAAA,EAAA,EAAA,CAAA;;AAAA,iBAQA,mBARA;AAQA,qBAAA,CAAA,CAAA,EAAA,EAAA,CAAA;;AAAA,iBAUA,oBAVA;AAUA,qBAAA,CAAA,CAAA,EAAA,EAAA,CAAA;;AAAA,iBAWA,mBAXA;AAWA,qBAAA,CAAA,CAAA,EAAA,EAAA,CAAA;;AAAA,iBAQA,kBARA;AAQA,qBAAA,CAAA,CAAA,EAAA,EAAA,CAAA;;AAAA,iBAWA,iBAXA;AAWA,qBAAA,CAAA,CAAA,EAAA,EAAA,CAAA;;AAAA,iBAMA,kBANA;AAMA,qBAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AA7HL4F;;AA6HK,iBAAA,CAAA,CAAA,EAAA,EAAA,CAAA;;AAAA,aAAA,CAAA;AA1HH,iBAAA,CAAA,CAAA,EAAA,CACGwF,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAAAA,CAA+DkF,KAA/DlF,EADH,CAAA,CAAA;;AACkEkF,aAAAA,CAAAA;AAQ1D,iBALFC,CAAAA,GACFnF,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CADEmF,EAEAC,CAAAA,GACFpF,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAHEmF,EAGqC3K,CAAAA,CAAAA,EAE7B2K,CAAAA,CAAKpK,IAALoK,EAF6B3K,CAEnC;;AAAWO,aAAAA,CAAAA;AAAnB,iBAAA,CAAA,CAAA,EAAQ,CAAA,CAAA,IAAA,GAAmB,CAAnB,IAAmB,CAAA,KAAM9Z,CAAN,EAAiBmkB,CAAAA,CAAKF,KAALE,EAAjB,CAAnB,GAAyCF,CAChBE,CAAAA,CAAKF,KAALE,EADgBF,EACXA,KAASjkB,CADEikB,CAAjD,CAAA;;AAC+CjkB,aAAAA,CAAAA;AAK/C,iBAAA,CAAA,CAAA,EAAA,CAFMua,CAAAA,GAAYpS,CAAAA,CAAKwR,UAALxR,CAAgBiS,IAAhBjS,CACd,UAAA,CAAA,EAAA;AAAQ,mBAAA,KAAwCnI,CAAxC,KAAA,SAAA,CAAUqK,CAAV,EAAgBiP,CAAhB,EAA2BC,CAA3B,CAAA;AAA2BA,WADrBpR,CAElB,IADuCoR,CACnBG,SAAAA,CAAUa,CAAVb,EAAqBJ,CAArBI,EAAgCH,CAAhCG,CAAAA,CAAyCuK,KAAzCvK,EADmBH,CACvC,GAA6D0K,KAC1CjkB,CADnB,CAAA;;AACmBA,aAAAA,CAAAA;AAQnB,iBALMokB,CAAAA,GACFrF,aAAAA,CAAc,WAAdA,EAA2B5W,CAA3B4W,EAAiCzF,CAAjCyF,EAA4CxF,CAA5CwF,CADEqF,EAEAtK,CAAAA,GACFiF,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CAHEqF,EAIN7K,CAAAA,CAAQ8K,UAAR9K,CAAmB6K,CAAnB7K,CAJM6K,EAIaA,CAAAA,CAAAA,EAAAA,CACXtK,CAAAA,CAAKmK,KAALnK,EADWsK,CAAAA,CACnB;;AAAaH,aAAAA,CAAAA;AAMb,iBAHMhR,CAAAA,GACF8L,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CADE9L,EAENsG,CAAAA,CAAQ+K,SAAR/K,EAFMtG,EAEEqR,CAAAA,CAAAA,EAAAA,CACArR,CAAAA,CAAOgR,KAAPhR,EADAqR,CAAAA,CACR;;AAAeL,aAAAA,CAAAA;AAMf,iBAHMvQ,CAAAA,GACFqL,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CADErL,EAEN6F,CAAAA,CAAQgL,aAARhL,EAFM7F,EAEE6Q,CAAAA,CAAAA,EAAAA,CACA7Q,CAAAA,CAAMuQ,KAANvQ,EADA6Q,CAAAA,CACR;;AAAcN,aAAAA,CAAAA;AAoBd,iBAjBM7e,CAAAA,GAAO2Z,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAAP3Z,EACAmN,CAAAA,GACFwM,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CAFE3Z,EAGA4c,CAAAA,GACFjD,aAAAA,CAAc,cAAdA,EAA8B5W,CAA9B4W,EAAoCzF,CAApCyF,EAA+CxF,CAA/CwF,CAJE3Z,EAKA8c,CAAAA,GACFnD,aAAAA,CAAc,aAAdA,EAA6B5W,CAA7B4W,EAAmCzF,CAAnCyF,EAA8CxF,CAA9CwF,CANE3Z,EAOA+c,CAAAA,GACFpD,aAAAA,CAAc,gBAAdA,EAAgC5W,CAAhC4W,EAAsCzF,CAAtCyF,EAAiDxF,CAAjDwF,CARE3Z,EASA6c,CAAAA,GACFlD,aAAAA,CAAc,wBAAdA,EAAwC5W,CAAxC4W,EAA8CzF,CAA9CyF,EAAyDxF,CAAzDwF,CAVE3Z,EAYAof,CAAAA,GAAOzF,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAZP3Z,EAaAqf,CAAAA,GAAc,IAAI3C,WAAJ,CAChB0C,CADgB,EACVjS,CADU,EACHnN,CADG,EACG4c,CADH,EACiBC,CADjB,EACyCC,CADzC,EAEhBC,CAFgB,CAbd/c,EAgBNmU,CAAAA,CAAQmL,cAARnL,CAAuBkL,CAAvBlL,CAhBMnU,EAgBiBqf,CAAAA,CAAAA,EAAAA,CACfE,MAAAA,CAAOF,CAAAA,CAAYrC,EAAnBuC,CADeF,EACSE,MAAAA,CAAO,CAAPA,CADTF,CAAAA,CACvB;;AAAuC,aAAA,CAAA;AAUvC,iBAPMrC,CAAAA,GACFrD,aAAAA,CAAc,eAAdA,EAA+B5W,CAA/B4W,EAAqCzF,CAArCyF,EAAgDxF,CAAhDwF,CADEqD,EAEAvkB,CAAAA,GAAQkhB,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CAFRqD,EAGAwC,CAAAA,GACF7F,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CAJEqD,EAKmB7I,CAAAA,CAAQsL,cAARtL,CAAuB6I,CAAvB7I,EACRxU,KADQwU,CACF1b,CADE0b,EACKqL,CADLrL,CALnB6I,EAMwBwC,CAAAA,CAAAA,EAAAA,CACtBD,MAAAA,CAAO,CAAPA,CADsBC,CAAAA,CAC9B;;AAAe,aAAA,EAAA;AAQf,iBALME,CAAAA,GACF/F,aAAAA,CAAc,eAAdA,EAA+B5W,CAA/B4W,EAAqCzF,CAArCyF,EAAgDxF,CAAhDwF,CADE+F,EAEAC,CAAAA,GACFhG,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CAHE+F,EAGsCvL,CAAAA,CAAAA,EAAAA,CACpBA,CAAAA,CAAQsL,cAARtL,CAAuBuL,CAAvBvL,EACAzU,IADAyU,CACKwL,CADLxL,CADoBA,CAAAA,CAE5C;;AAA6BwL,aAAAA,EAAAA;AAU7B,iBAPMC,CAAAA,GACFjG,aAAAA,CAAc,eAAdA,EAA+B5W,CAA/B4W,EAAqCzF,CAArCyF,EAAgDxF,CAAhDwF,CADEiG,EAEAC,CAAAA,GACFlG,aAAAA,CAAc,SAAdA,EAAyB5W,CAAzB4W,EAA+BzF,CAA/ByF,EAA0CxF,CAA1CwF,CAHEiG,EAIAE,CAAAA,GACFnG,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CALEiG,EAKsCzL,CAAAA,CAAAA,EAAAA,CAClBA,CAAAA,CAAQsL,cAARtL,CAAuByL,CAAvBzL,EACA4L,MADA5L,CACO0L,CADP1L,EACsB2L,CADtB3L,CADkBA,CAAAA,CAE5C;;AAAgD2L,aAAAA,EAAAA;AAWhD,iBARME,CAAAA,GACFrG,aAAAA,CAAc,eAAdA,EAA+B5W,CAA/B4W,EAAqCzF,CAArCyF,EAAgDxF,CAAhDwF,CADEqG,EAEAC,CAAAA,GACFtG,aAAAA,CAAc,SAAdA,EAAyB5W,CAAzB4W,EAA+BzF,CAA/ByF,EAA0CxF,CAA1CwF,CAHEqG,EAIAE,CAAAA,GACFvG,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CALEqG,EAMqB7L,CAAAA,CAAQsL,cAARtL,CAAuB6L,CAAvB7L,EACRgM,OADQhM,CACA8L,CADA9L,EACgB+L,CADhB/L,CANrB6L,EAOqCE,CAAAA,CAAAA,EAAAA,CACnCX,MAAAA,CAAO,CAAPA,CADmCW,CAAAA,CAC3C;;AAAe,aAAA,EAAA;AAQf,iBALME,CAAAA,GACFzG,aAAAA,CAAc,eAAdA,EAA+B5W,CAA/B4W,EAAqCzF,CAArCyF,EAAgDxF,CAAhDwF,CADEyG,EAEAC,CAAAA,GAAoBlM,CAAAA,CAAQsL,cAARtL,CAAuBiM,CAAvBjM,CAFpBiM,EAGAE,CAAAA,GACF3G,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CAJEyG,EAIsCjM,CAAAA,CAAAA,EAAAA,CACpCkM,CAAAA,CAAkB7I,MAAlB6I,CAAyBC,CAAzBD,CADoClM,CAAAA,CAC5C;;AAAiCmM,aAAAA,EAAAA;AAWjC,iBARMC,CAAAA,GACF5G,aAAAA,CAAc,eAAdA,EAA+B5W,CAA/B4W,EAAqCzF,CAArCyF,EAAgDxF,CAAhDwF,CADE4G,EAEAC,CAAAA,GACF7G,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CAHE4G,EAIAE,CAAAA,GACF9G,aAAAA,CAAc,SAAdA,EAAyB5W,CAAzB4W,EAA+BzF,CAA/ByF,EAA0CxF,CAA1CwF,CALE4G,EAMmBpM,CAAAA,CAAQsL,cAARtL,CAAuBoM,CAAvBpM,EACRuM,KADQvM,CACFsM,CADEtM,EACOqM,CADPrM,CANnBoM,EAO0BC,CAAAA,CAAAA,EAAAA,CACxBjB,MAAAA,CAAO,CAAPA,CADwBiB,CAAAA,CAChC;;AAAe,aAAA,EAAA;AAMf,iBAHMG,CAAAA,GACFhH,aAAAA,CAAc,eAAdA,EAA+B5W,CAA/B4W,EAAqCzF,CAArCyF,EAAgDxF,CAAhDwF,CADEgH,EAEAC,CAAAA,GAAkBzM,CAAAA,CAAQsL,cAARtL,CAAuBwM,CAAvBxM,CAFlBwM,EAEyCA,CAAAA,CAAAA,EAAAA,CACvCpB,MAAAA,CAAOqB,CAAAA,CAAgB5gB,IAAhB4gB,EAAPrB,EAA+B,OAA/BA,CADuCoB,CAAAA,CAC/C;;AAAuC,aAAA,EAAA;AAOvC,iBAJME,CAAAA,GACFlH,aAAAA,CAAc,eAAdA,EAA+B5W,CAA/B4W,EAAqCzF,CAArCyF,EAAgDxF,CAAhDwF,CADEkH,EAEmB1M,CAAAA,CAAQsL,cAARtL,CAAuB0M,CAAvB1M,EACR2M,aADQ3M,EAFnB0M,EAGWC,CAAAA,CAAAA,EAAAA,EAAAA,CACjB;;AADiBA,aAAAA,EAAAA;AAGjB,gBAAMvW,SAAAA,CAAU,eAAaxH,CAAAA,CAAKwL,EAAlB,GAAkBA,qBAA5BhE,CAAN;AApIF4J;AAoIoC5F,KApIpC4F,CAAAA;AAoIoC5F,GApIpC4F,CAAAA;ACHG;;AAAA,IAAIsF,WAAAA,GACP,SADOA,WACP,CAAC1W,CAAD,EAAamR,CAAb,EACCC,CADD,EACCA;AACC,UAAQpR,CAAAA,CAAKwL,EAAb;AACE,SAAK,QAAL;AACE,UAAMwS,CAAAA,GACFpH,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CADJ;AAAA,UAEMqH,CAAAA,GAAMrH,aAAAA,CAAc,KAAdA,EAAqB5W,CAArB4W,EAA2BzF,CAA3ByF,EAAsCxF,CAAtCwF,CAFZ;AAAA,UAGMsH,CAAAA,GACDtH,aAAAA,CAAc,YAAdA,EAA4B5W,CAA5B4W,EAAkCzF,CAAlCyF,EAA6CxF,CAA7CwF,CAAAA,CACIuH,WADJvH,EAJL;AAAA,UAMMwH,CAAAA,GACFxH,aAAAA,CAAc,UAAdA,EAA0B5W,CAA1B4W,EAAgCzF,CAAhCyF,EAA2CxF,CAA3CwF,CAPJ;AAQA,aAAA,CAAQyH,MAAAA,CACJzH,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIyH,EAEJzH,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CAFIyH,EAGJL,CAHIK,EAGIJ,CAHJI,EAG6BH,CAH7BG,EAIJD,CAJIC,CAAR,CAAA;;AAMF,SAAK,QAAL;AACQL,MAAAA,CAAAA,GACFpH,aAAAA,CAAc,SAAdA,EAAyB5W,CAAzB4W,EAA+BzF,CAA/ByF,EAA0CxF,CAA1CwF,CADEoH,EAEAC,CAAAA,GAAMrH,aAAAA,CAAc,KAAdA,EAAqB5W,CAArB4W,EAA2BzF,CAA3ByF,EAAsCxF,CAAtCwF,CAFNoH,EAGAE,CAAAA,GACDtH,aAAAA,CAAc,YAAdA,EAA4B5W,CAA5B4W,EAAkCzF,CAAlCyF,EAA6CxF,CAA7CwF,CAAAA,CACIuH,WADJvH,EAJCoH;AAAN,UAMMM,CAAAA,GACF1H,aAAAA,CAAc,WAAdA,EAA2B5W,CAA3B4W,EAAiCzF,CAAjCyF,EAA4CxF,CAA5CwF,CAPJ;AAQA,aAAA,CAAQ2H,MAAAA,CACJ3H,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI2H,EAGJ3H,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CAHI2H,EAGqCnN,CACxC4M,CAAAA,CAAO,CAAPA,CADwC5M,EAC7B4M,CAAAA,CAAO,CAAPA,CAD6B5M,CAHrCmN,EAIoBN,CAJpBM,EAKJL,CALIK,EAKJL,CAAgCI,CAAAA,CAAU,CAAVA,CAAhCJ,EAA8CI,CAAAA,CAAU,CAAVA,CAA9CJ,CALIK,CAAR,CAAA;;AAOF,SAAK,iBAAL;AACE,UAAM1T,CAAAA,GAAQ+L,aAAAA,CACI,aADJA,EACmB5W,CADnB4W,EACyBzF,CADzByF,EAEIxF,CAFJwF,CAAd;AAIMoH,MAAAA,CAAAA,GACFpH,aAAAA,CAAc,SAAdA,EAAyB5W,CAAzB4W,EAA+BzF,CAA/ByF,EAA0CxF,CAA1CwF,CADEoH,EAEAC,CAAAA,GAAMrH,aAAAA,CAAc,KAAdA,EAAqB5W,CAArB4W,EAA2BzF,CAA3ByF,EAAsCxF,CAAtCwF,CAFNoH;AAGN,aAAA,CAAQQ,eAAAA,CACJ5H,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI4H,EAGJ5H,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CAHI4H,EAIJ3T,CAJI2T,EAIJ3T,CAAQmT,CAAAA,CAAO,CAAPA,CAARnT,EAAmBmT,CAAAA,CAAO,CAAPA,CAAnBnT,CAJI2T,EAI2BP,CAJ3BO,CAAR,CAAA;;AAMF,SAAK,iBAAL;AACQR,MAAAA,CAAAA,GACFpH,aAAAA,CAAc,SAAdA,EAAyB5W,CAAzB4W,EAA+BzF,CAA/ByF,EAA0CxF,CAA1CwF,CADEoH,EAEAC,CAAAA,GAAMrH,aAAAA,CAAc,KAAdA,EAAqB5W,CAArB4W,EAA2BzF,CAA3ByF,EAAsCxF,CAAtCwF,CAFNoH,EAGAM,CAAAA,GACF1H,aAAAA,CAAc,WAAdA,EAA2B5W,CAA3B4W,EAAiCzF,CAAjCyF,EAA4CxF,CAA5CwF,CAJEoH,EAKAE,CAAAA,GACDtH,aAAAA,CAAc,YAAdA,EAA4B5W,CAA5B4W,EAAkCzF,CAAlCyF,EAA6CxF,CAA7CwF,CAAAA,CACIuH,WADJvH,EANCoH;AASN,aAAA,CAAQS,eAAAA,CACJ7H,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CADI6H,EAGJ7H,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CAHI6H,EAGqCrN,CACxC4M,CAAAA,CAAO,CAAPA,CADwC5M,EAC7B4M,CAAAA,CAAO,CAAPA,CAD6B5M,CAHrCqN,EAIoBR,CAJpBQ,EAKJP,CALIO,EAKJP,CAAgCI,CAAAA,CAAU,CAAVA,CAAhCJ,EAA8CI,CAAAA,CAAU,CAAVA,CAA9CJ,CALIO,CAAR,CAAA;;AAQF,SAAK,SAAL;AACQT,MAAAA,CAAAA,GACFpH,aAAAA,CAAc,SAAdA,EAAyB5W,CAAzB4W,EAA+BzF,CAA/ByF,EAA0CxF,CAA1CwF,CADEoH,EAEAC,CAAAA,GAAMrH,aAAAA,CAAc,KAAdA,EAAqB5W,CAArB4W,EAA2BzF,CAA3ByF,EAAsCxF,CAAtCwF,CAFNoH;AAAN,UAGMU,CAAAA,GACF9H,aAAAA,CAAc,YAAdA,EAA4B5W,CAA5B4W,EAAkCzF,CAAlCyF,EAA6CxF,CAA7CwF,CAJJ;AAMA,aAAA,CAAQ+H,OAAAA,CACJ/H,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI+H,EACgCvN,CAEnCsN,CAAAA,CAAW,CAAXA,CAFmCtN,EAEpBsN,CAAAA,CAAW,CAAXA,CAFoBtN,CADhCuN,EAGuB,CAAMX,CAAAA,CAAO,CAAPA,CAAN,EAAiBA,CAAAA,CAAO,CAAPA,CAAjB,CAHvBW,EAIJV,CAJIU,CAAR,CAAA;;AAOF,SAAK,SAAL;AACQX,MAAAA,CAAAA,GACFpH,aAAAA,CAAc,SAAdA,EAAyB5W,CAAzB4W,EAA+BzF,CAA/ByF,EAA0CxF,CAA1CwF,CADEoH,EAEAC,CAAAA,GAAMrH,aAAAA,CAAc,KAAdA,EAAqB5W,CAArB4W,EAA2BzF,CAA3ByF,EAAsCxF,CAAtCwF,CAFNoH,EAGAU,CAAAA,GACF9H,aAAAA,CAAc,YAAdA,EAA4B5W,CAA5B4W,EAAkCzF,CAAlCyF,EAA6CxF,CAA7CwF,CAJEoH;AAMN,aAAA,CAAQY,OAAAA,CACJhI,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIgI,EACgCxN,CAEnCsN,CAAAA,CAAW,CAAXA,CAFmCtN,EAEpBsN,CAAAA,CAAW,CAAXA,CAFoBtN,CADhCwN,EAGuB,CAAMZ,CAAAA,CAAO,CAAPA,CAAN,EAAiBA,CAAAA,CAAO,CAAPA,CAAjB,CAHvBY,EAIJX,CAJIW,CAAR,CAAA;;AAMF;AACE,YAAMpX,SAAAA,CAAU,eAAaxH,CAAAA,CAAKwL,EAAlB,GAAkBA,qBAA5BhE,CAAN;AA5FJ;AA4FsCgE,CA/FrC;AAAA,ICAIkL,WAAAA,GAAwB,SAAxBA,WAAwB,CAAC1W,CAAD,EAAamR,CAAb,EACCC,CADD,EACCA;AAElC,UAAQpR,CAAAA,CAAKwL,EAAb;AACE,SAAK,MAAL;AACE,UAAMX,CAAAA,GACF+L,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CADJ;AAAA,UAEMxM,CAAAA,GACFwM,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CAHJ;AAAA,UAIM/Y,CAAAA,GAAQ+Y,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CAJd;AAKA,aAAA,CAAQiI,IAAAA,CAAShU,CAATgU,EAAgBhhB,CAAhBghB,EAAuBzU,CAAvByU,CAAR,CAAA;;AAEF,SAAK,UAAL;AACE,UAAM/nB,CAAAA,GAAQ8f,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CAAd;AAAA,UACMkI,CAAAA,GAAOlI,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CADb;AAAA,UAEMmI,CAAAA,GAAMnI,aAAAA,CAAc,KAAdA,EAAqB5W,CAArB4W,EAA2BzF,CAA3ByF,EAAsCxF,CAAtCwF,CAFZ;AAGA,aAAA,CAAQoI,QAAAA,CAAaloB,CAAbkoB,EAAoBF,CAApBE,EAA0BD,CAA1BC,CAAR,CAAA;;AAEF,SAAK,QAAL;AACE,UAAMxE,CAAAA,GACF5D,aAAAA,CAAc,SAAdA,EAAyB5W,CAAzB4W,EAA+BzF,CAA/ByF,EAA0CxF,CAA1CwF,CADJ;AAAA,UAEMqI,CAAAA,GAAQrI,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CAFd;AAAA,UAGMsI,CAAAA,GACFtI,aAAAA,CAAc,SAAdA,EAAyB5W,CAAzB4W,EAA+BzF,CAA/ByF,EAA0CxF,CAA1CwF,CAJJ;AAAA,UAKMuI,CAAAA,GACFvI,aAAAA,CAAc,UAAdA,EAA0B5W,CAA1B4W,EAAgCzF,CAAhCyF,EAA2CxF,CAA3CwF,CANJ;AAOA,aAAA,CAAQwI,MAAAA,CAAW5E,CAAX4E,EAAoBH,CAApBG,EAA2BF,CAA3BE,EAAoCD,CAApCC,CAAR,CAAA;;AAEF,SAAK,MAAL;AACE,aAAA,CAAQC,IAAAA,CACJzI,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CADIyI,EAEJzI,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CAFIyI,CAAR,CAAA;;AAIF,SAAK,UAAL;AACE,aAAA,CAAQC,QAAAA,CACJ1I,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI0I,CAAR,CAAA;;AAGF,SAAK,eAAL;AACE,aAAA,CAAQC,aAAAA,CAEJ3I,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CAFI2I,EAGJ3I,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CAHI2I,EAIJ3I,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CAJI2I,EAKJ3I,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CALI2I,CAAR,CAAA;;AAOF,SAAK,OAAL;AACQzoB,MAAAA,CAAAA,GAAQ8f,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CAAR9f;AAAN,UACM0oB,CAAAA,GAAO5I,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CADb;AAAA,UAEM6I,CAAAA,GAAO7I,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAFb;AAGA,aAAA,CAAQ8I,KAAAA,CACJ5oB,CADI4oB,EACGF,CADHE,EACSD,CADTC,EAEJ9I,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CAFI8I,CAAR,CAAA;;AAKF,SAAK,iBAAL;AACQ7U,MAAAA,CAAAA,GACF+L,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CADE/L;AAAN,UAEM8U,CAAAA,GAAO/I,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAFb;AAAA,UAGMgJ,CAAAA,GACFhJ,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CAJJ;AAAA,UAKMiJ,CAAAA,GAAOjJ,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CALb;AAMA,aAAA,CAAQkJ,eAAAA,CACJjV,CADIiV,EACGH,CADHG,EACSF,CADTE,EAEJlJ,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CAFIkJ,EAIJD,CAJIC,CAAR,CAAA;;AAMF,SAAK,OAAL;AACE,aAAA,CAAQC,KAAAA,CACJnJ,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CADImJ,EAEJnJ,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CAFImJ,CAAR,CAAA;;AAIF,SAAK,WAAL;AACE,aAAA,CAAQC,SAAAA,CACJpJ,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIoJ,CAAR,CAAA;;AAGF;AACE,YAAMxY,SAAAA,CAAU,eAAaxH,CAAAA,CAAKwL,EAAlB,GAAkBA,qBAA5BhE,CAAN;AA1EJ;AA0EsCgE,CD7EjC;;AC6EiCA,SAAAA,WAAAA,CC9EpCxL,CD8EoCwL,EC9ExB2F,CD8EwB3F,EC7EpC4F,CD6EoC5F,EC7EpC4F;AAAAA,SAAAA,SAAAA,CAAAA,IAAAA,EAAAA,KAAAA,CAAAA,EAAAA,KAAAA,CAAAA,EAAAA,YAAAA;AAAAA,QAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA;AAAAA,WAAAA,WAAAA,CAAAA,IAAAA,EAAAA,UAAAA,CAAAA,EAAAA;AAAAA,cAAAA,CAAAA,CAAAA,KAAAA;AAAAA,aAAAA,CAAAA;AAAAA,kBACMpR,CAAAA,CAAKwL,EADX4F;AACW5F,iBACN,mBADMA;AACN,qBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;AAAA,iBAeA,YAfA;AAeA,qBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;AAAA,iBAIA,gBAJA;AAIA,qBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AArBL4F;;AAqBK,iBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;AAAA,aAAA,CAAA;AARK,iBAVF6O,CAAAA,GACFrJ,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CADEqJ,EAEAC,CAAAA,GACFtJ,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CAHEqJ,EAIAE,CAAAA,GACFvJ,aAAAA,CAAc,eAAdA,EAA+B5W,CAA/B4W,EAAqCzF,CAArCyF,EAAgDxF,CAAhDwF,CALEqJ,EAMAG,CAAAA,GACFxJ,aAAAA,CAAc,cAAdA,EAA8B5W,CAA9B4W,EAAoCzF,CAApCyF,EAA+CxF,CAA/CwF,CAPEqJ,EAQAI,CAAAA,GACFzJ,aAAAA,CAAc,gBAAdA,EAAgC5W,CAAhC4W,EAAsCzF,CAAtCyF,EAAiDxF,CAAjDwF,CATEqJ,EAS+C7O,CAAAA,CAAAA,EACvCkP,KAAAA,CAAUC,sBAAVD,CACVL,CADUK,EACaJ,CADbI,EACqCH,CADrCG,EAEVF,CAFUE,EAEID,CAFJC,CADuClP,CAC7C;;AAEUiP,aAAAA,CAAAA;AAFlB,iBAAA,CAAA,CAAA,EAAA,CAAQ,CAAA,CAAA,IAAA,EAAR,CAAA,CAAA;;AAAQ,aAAA,CAAA;AAKA,iBAAA,CAAA,CAAA,EAAMG,UAAAA,CACV5J,aAAAA,CAAc,WAAdA,EAA2B5W,CAA3B4W,EAAiCzF,CAAjCyF,EAA4CxF,CAA5CwF,CADU4J,CAAN,CAAA;;AACwCpP,aAAAA,CAAAA;AADhD,iBAAA,CAAA,CAAA,EAAA,CAAQ,CAAA,CAAA,IAAA,EAAR,CAAA,CAAA;;AAAQ,aAAA,CAAA;AAID,iBAAA,CAAA,CAAA,EAAMqP,cAAAA,CACT7J,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADS6J,EAET7J,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAFS6J,CAAN,CAAA;;AAEiCrP,aAAAA,CAAAA;AAFxC,iBAAA,CAAA,CAAA,EAAO,CAAA,CAAA,IAAA,EAAP,CAAA;;AAAO,aAAA,CAAA;AAKP,gBAAM5J,SAAAA,CAAU,eAAaxH,CAAAA,CAAKwL,EAAlB,GAAkBA,qBAA5BhE,CAAN;AA3BF4J;AA2BoC5F,KA3BpC4F,CAAAA;AA2BoC5F,GA3BpC4F,CAAAA;ACAG;;AAAA,IAAIsF,WAAAA,GACP,SADOA,WACP,CAAC1W,CAAD,EAAamR,CAAb,EACCC,CADD,EACCA;AACC,UAAQpR,CAAAA,CAAKwL,EAAb;AACE,SAAK,MAAL;AACE,UAAMkV,CAAAA,GAAI9J,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAAV;AAAA,UACMvL,CAAAA,GAAIuL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADV;AAAA,UAEM+J,CAAAA,GACF/J,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CAHJ;AAAA,UAIMgK,CAAAA,GAASC,IAAAA,CAASH,CAATG,EAAYxV,CAAZwV,EAAeF,CAAfE,CAJf;AAKA,aAAA,CAAQD,CAAAA,CAAOvX,MAAf,EAAuBuX,CAAAA,CAAOpG,OAA9B,CAAA;;AAEF;AACE,YAAMhT,SAAAA,CAAU,eAAaxH,CAAAA,CAAKwL,EAAlB,GAAkBA,qBAA5BhE,CAAN;AAVJ;AAUsCgE,CAbrC;AAAA,ICAIkL,WAAAA,GAAwB,SAAxBA,WAAwB,CAAC1W,CAAD,EAAamR,CAAb,EACCC,CADD,EACCA;AAElC,UAAQpR,CAAAA,CAAKwL,EAAb;AACE,SAAK,OAAL;AACE,aAAO2F,CAAAA,CAAUnR,CAAAA,CAAKkC,IAAfiP,CAAP;;AAEF,SAAK,aAAL;AACE,UAAMiF,CAAAA,GACFQ,aAAAA,CAAc,SAAdA,EAAyB5W,CAAzB4W,EAA+BzF,CAA/ByF,EAA0CxF,CAA1CwF,CADJ;AAEA,aAAA,CAAQrF,SAAAA,CAAUvR,CAAAA,CAAKkC,IAAfqP,EAAqBJ,CAArBI,EAAgCH,CAAhCG,CAAAA,IAA4C6E,CAApD,CAAA;;AACF,SAAK,UAAL;AACA,SAAK,cAAL;AACA,SAAK,yBAAL;AACE,aAAA,CACGQ,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAAAA,CAA4DkF,KAA5DlF,EADH,CAAA;;AAGF,SAAK,UAAL;AAGE,aAAA,CADKA,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAAAA,CACYkF,KADZlF,EACL,CAAA;;AACF,SAAK,OAAL;AACE,aAAA,CAAQkK,QAAAA,CACHlK,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAAAA,CAA4D/L,KADzDiW,EAEJ,OAFIA,CAAR,CAAA;;AAGF,SAAK,QAAL;AACE,aAAQlK,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAAAA,CACHlF,GADGkF,CACC,UAACzf,CAAD,EAACA;AAAkB,eAAA,QAAA,CAAaA,CAAAA,CAAE0T,KAAf,CAAA;AAAeA,OADnC+L,CAAR;;AAEF,SAAK,MAAL;AACE,aAAA,CAAQ4C,MAAAA,CACH5C,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAAAA,CAA4D3Z,IADzDuc,EAEJ,OAFIA,CAAR,CAAA;;AAGF,SAAK,MAAL;AACE,aAAA,CAAQA,MAAAA,CACH5C,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAAAA,CAA4DmK,IADzDvH,EAEJ,OAFIA,CAAR,CAAA;;AAGF,SAAK,MAAL;AACE,aAAA,EAAA;;AACF,SAAK,OAAL;AACE,UAAMjO,CAAAA,GAAQqL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAAd;AAAA,UACMjF,CAAAA,GACFiF,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAFJ;AAAA,UAGMxU,CAAAA,GACFwU,aAAAA,CAAc,SAAdA,EAAyB5W,CAAzB4W,EAA+BzF,CAA/ByF,EAA0CxF,CAA1CwF,CAJJ;AAAA,UAKMoK,CAAAA,GACFpK,aAAAA,CAAc,WAAdA,EAA2B5W,CAA3B4W,EAAiCzF,CAAjCyF,EAA4CxF,CAA5CwF,CANJ;AAOAqK,MAAAA,OAAAA,CAAQC,IAARD,CACI,gGADJA,GAGAA,OAAAA,CAAQ9mB,GAAR8mB,CAAY7e,CAAZ6e,CAHAA;;AAIA,WAAK,IAAItqB,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAIgb,CAAAA,CAAKnc,MAAzB,EAAiCmB,CAAAA,EAAjC;AACEsqB,QAAAA,OAAAA,CAAQ9mB,GAAR8mB,CACI3rB,KAAAA,CAAM6C,SAAN7C,CAAgBkC,KAAhBlC,CAAsB+H,IAAtB/H,CAA2Bqc,CAAAA,CAAK,CAALA,CAAAA,CAAQC,QAARD,EAA3Brc,EAA+CkC,KAA/ClC,CAAqD,CAArDA,EAAwD0rB,CAAxD1rB,CADJ2rB;AADF;;AAIA,aAAA,CAAQ1V,CAAR,CAAA;;AAEF;AACE,YAAM/D,SAAAA,CAAU,eAAaxH,CAAAA,CAAKwL,EAAlB,GAAkBA,qBAA5BhE,CAAN;AAtDJ;AAsDsCgE,CDzDjC;AAAA,IEAIkL,WAAAA,GAAwB,SAAxBA,WAAwB,CAAC1W,CAAD,EAAamR,CAAb,EACCC,CADD,EACCA;AAElC,UAAQpR,CAAAA,CAAKwL,EAAb;AACE,SAAK,gBAAL;AACE,UAAM2V,CAAAA,GACFvK,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CADJ;AAAA,UAEM3Z,CAAAA,GAAO2Z,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAFb;AAAA,UAGMwK,CAAAA,GACFxK,aAAAA,CAAc,cAAdA,EAA8B5W,CAA9B4W,EAAoCzF,CAApCyF,EAA+CxF,CAA/CwF,CAJJ;AAKA,aAAA,CAAQ0J,KAAAA,CAAUe,cAAVf,CACJa,CADIb,EACJa,CAAwClkB,CAAAA,CAAK,CAALA,CAAxCkkB,EAAiDlkB,CAAAA,CAAK,CAALA,CAAjDkkB,CADIb,EAEJc,CAFId,CAAR,CAAA;;AAIF,SAAK,uBAAL;AACQa,MAAAA,CAAAA,GACFvK,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CADEuK,EAEAlkB,CAAAA,GAAO2Z,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAFPuK,EAGAC,CAAAA,GACFxK,aAAAA,CAAc,cAAdA,EAA8B5W,CAA9B4W,EAAoCzF,CAApCyF,EAA+CxF,CAA/CwF,CAJEuK;AAKN,aAAA,CAAQb,KAAAA,CAAUgB,qBAAVhB,CACJa,CADIb,EACJa,CAAwClkB,CAAAA,CAAK,CAALA,CAAxCkkB,EAAiDlkB,CAAAA,CAAK,CAALA,CAAjDkkB,CADIb,EAEJc,CAFId,CAAR,CAAA;;AAIF,SAAK,eAAL;AACE,UAAMtM,CAAAA,GACF4C,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CADJ;AAAA,UAEMqJ,CAAAA,GACFrJ,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CAHJ;AAAA,UAIM2K,CAAAA,GACF3K,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CALJ;AAAA,UAMM4K,CAAAA,GACF5K,aAAAA,CAAc,UAAdA,EAA0B5W,CAA1B4W,EAAgCzF,CAAhCyF,EAA2CxF,CAA3CwF,CAPJ;AAAA,UAQMlP,CAAAA,GACFkP,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CATJ;AAAA,UAUM6K,CAAAA,GACF7K,aAAAA,CAAc,oBAAdA,EAAoC5W,CAApC4W,EAA0CzF,CAA1CyF,EAAqDxF,CAArDwF,CAXJ;AAaA,aAAA,CAAQ0J,KAAAA,CAAUoB,aAAVpB,CACJtM,CADIsM,EACmBL,CADnBK,EAC0CiB,CAD1CjB,EAEJkB,CAFIlB,EAE0B5Y,CAF1B4Y,EAGJmB,CAHInB,CAAR,CAAA;;AAKF;AACE,YAAM9Y,SAAAA,CAAU,eAAaxH,CAAAA,CAAKwL,EAAlB,GAAkBA,qBAA5BhE,CAAN;AAzCJ;AAyCsCgE,CF5CjC;AAAA,IGAIkL,WAAAA,GAAwB,SAAxBA,WAAwB,CAAC1W,CAAD,EAAamR,CAAb,EACCC,CADD,EACCA;AAElC,UAAQpR,CAAAA,CAAKwL,EAAb;AACE,SAAK,OAAL;AACE,aAAA,CAAQmW,KAAAA,CACJ/K,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI+K,EAEJ/K,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAFI+K,CAAR,CAAA;;AAIF,SAAK,UAAL;AACE,aAAA,CAAQC,QAAAA,CACJhL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIgL,EAEJhL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAFIgL,CAAR,CAAA;;AAIF,SAAK,SAAL;AACE,aAAA,CAAQC,OAAAA,CACJjL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIiL,EAEJjL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAFIiL,CAAR,CAAA;;AAIF,SAAK,cAAL;AACE,aAAA,CAAQC,YAAAA,CACJlL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIkL,EAEJlL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAFIkL,CAAR,CAAA;;AAIF,SAAK,MAAL;AACE,aAAA,CAAQC,IAAAA,CACJnL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADImL,EAEJnL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAFImL,CAAR,CAAA;;AAIF,SAAK,WAAL;AACE,aAAA,CAAQC,SAAAA,CACJpL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIoL,EAEJpL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAFIoL,CAAR,CAAA;;AAIF,SAAK,YAAL;AACE,aAAA,CAAQC,UAAAA,CACJrL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIqL,EAEJrL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAFIqL,CAAR,CAAA;;AAIF,SAAK,YAAL;AACE,aAAA,CAAQC,UAAAA,CACJtL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIsL,CAAR,CAAA;;AAGF,SAAK,WAAL;AACE,aAAA,CAAQC,SAAAA,CACJvL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIuL,EAEJvL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAFIuL,CAAR,CAAA;;AAIF,SAAK,OAAL;AACE,aAAA,CAAQC,KAAAA,CACJxL,aAAAA,CAAc,WAAdA,EAA2B5W,CAA3B4W,EAAiCzF,CAAjCyF,EAA4CxF,CAA5CwF,CADIwL,EAEJxL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAFIwL,EAGJxL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAHIwL,CAAR,CAAA;;AAKF;AACE,YAAM5a,SAAAA,CAAU,eAAaxH,CAAAA,CAAKwL,EAAlB,GAAkBA,qBAA5BhE,CAAN;AApDJ;AAoDsCgE,CHvDjC;AAAA,IIAIkL,YAAAA,GAAwB,SAAxBA,YAAwB,CAAC1W,CAAD,EAAamR,CAAb,EACCC,CADD,EACCA;AAElC,UAAQpR,CAAAA,CAAKwL,EAAb;AACE,SAAK,QAAL;AACE,aAAA,CAAQ6W,MAAAA,CACJzL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIyL,EAEJzL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAFIyL,EAGJzL,aAAAA,CAAc,YAAdA,EAA4B5W,CAA5B4W,EAAkCzF,CAAlCyF,EAA6CxF,CAA7CwF,CAHIyL,EAIJzL,aAAAA,CAAc,YAAdA,EAA4B5W,CAA5B4W,EAAkCzF,CAAlCyF,EAA6CxF,CAA7CwF,CAJIyL,CAAR,CAAA;;AAKF,SAAK,WAAL;AACE,aAAA,CAAQC,SAAAA,CACJ1L,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI0L,EAEJ1L,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAFI0L,CAAR,CAAA;;AAIF;AACE,YAAM9a,SAAAA,CAAU,eAAaxH,CAAAA,CAAKwL,EAAlB,GAAkBA,qBAA5BhE,CAAN;AAbJ;AAasCgE,CJhBjC;AAAA,IKAIkL,YAAAA,GAAwB,SAAxBA,YAAwB,CAAC1W,CAAD,EAAamR,CAAb,EACCC,CADD,EACCA;AAElC,UAAQpR,CAAAA,CAAKwL,EAAb;AACE,SAAK,oBAAL;AACE,aAAA,CAAQ+W,kBAAAA,CACJ3L,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI2L,EAEJ3L,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAFI2L,EAGJ3L,aAAAA,CAAc,UAAdA,EAA0B5W,CAA1B4W,EAAgCzF,CAAhCyF,EAA2CxF,CAA3CwF,CAHI2L,EAIJ3L,aAAAA,CAAc,SAAdA,EAAyB5W,CAAzB4W,EAA+BzF,CAA/ByF,EAA0CxF,CAA1CwF,CAJI2L,EAKJ3L,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CALI2L,EAMJ3L,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CANI2L,CAAR,CAAA;;AAQF,SAAK,4BAAL;AACE,aAAA,CAAQC,0BAAAA,CACJ5L,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI4L,EAGJ5L,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CAHI4L,EAIJ5L,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAJI4L,EAKJ5L,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CALI4L,EAMJ5L,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CANI4L,CAAR,CAAA;;AAQF,SAAK,SAAL;AACE,aAAA,CAAQC,OAAAA,CACJ7L,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI6L,CAAR,CAAA;;AAGF,SAAK,YAAL;AACE,aAAA,CAAQC,UAAAA,CACJ9L,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI8L,CAAR,CAAA;;AAGF,SAAK,eAAL;AACE,aAAA,CAAQC,aAAAA,CACJ/L,aAAAA,CAAc,eAAdA,EAA+B5W,CAA/B4W,EAAqCzF,CAArCyF,EAAgDxF,CAAhDwF,CADI+L,EAGJ/L,aAAAA,CAAc,aAAdA,EAA6B5W,CAA7B4W,EAAmCzF,CAAnCyF,EAA8CxF,CAA9CwF,CAHI+L,EAIJ/L,aAAAA,CAAc,cAAdA,EAA8B5W,CAA9B4W,EAAoCzF,CAApCyF,EAA+CxF,CAA/CwF,CAJI+L,EAKJ/L,aAAAA,CAAc,cAAdA,EAA8B5W,CAA9B4W,EAAoCzF,CAApCyF,EAA+CxF,CAA/CwF,CALI+L,CAAR,CAAA;;AAQF;AACE,YAAMnb,SAAAA,CAAU,eAAaxH,CAAAA,CAAKwL,EAAlB,GAAkBA,qBAA5BhE,CAAN;AArCJ;AAqCsCgE,CLxCjC;AAAA,IMAIkL,YAAAA,GAAwB,SAAxBA,YAAwB,CAAC1W,CAAD,EAAamR,CAAb,EACCC,CADD,EACCA;AAElC,UAAQpR,CAAAA,CAAKwL,EAAb;AACE,SAAK,KAAL;AACE,UAAMoX,CAAAA,GAAOhM,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAAb;AAAA,UACMiM,CAAAA,GACFjM,aAAAA,CAAc,UAAdA,EAA0B5W,CAA1B4W,EAAgCzF,CAAhCyF,EAA2CxF,CAA3CwF,CAFJ;AAGA,aAAA,CAAQkM,GAAAA,CACJlM,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIkM,EACwDF,CADxDE,EAEJD,CAFIC,CAAR,CAAA;;AAIF,SAAK,MAAL;AACQF,MAAAA,CAAAA,GAAOhM,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAAPgM,EACAC,CAAAA,GACFjM,aAAAA,CAAc,UAAdA,EAA0B5W,CAA1B4W,EAAgCzF,CAAhCyF,EAA2CxF,CAA3CwF,CAFEgM;AAGN,aAAA,CAAQG,IAAAA,CACJnM,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADImM,EACwDH,CADxDG,EAEJF,CAFIE,CAAR,CAAA;;AAIF,SAAK,KAAL;AACQH,MAAAA,CAAAA,GAAOhM,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAAPgM,EACAC,CAAAA,GACFjM,aAAAA,CAAc,UAAdA,EAA0B5W,CAA1B4W,EAAgCzF,CAAhCyF,EAA2CxF,CAA3CwF,CAFEgM;AAGN,aAAA,CAAQI,GAAAA,CACJpM,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIoM,EACwDJ,CADxDI,EAEJH,CAFIG,CAAR,CAAA;;AAIF,SAAK,KAAL;AACQJ,MAAAA,CAAAA,GAAOhM,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAAPgM,EACAC,CAAAA,GACFjM,aAAAA,CAAc,UAAdA,EAA0B5W,CAA1B4W,EAAgCzF,CAAhCyF,EAA2CxF,CAA3CwF,CAFEgM;AAGN,aAAA,CAAQK,GAAAA,CACJrM,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIqM,EACwDL,CADxDK,EAEJJ,CAFII,CAAR,CAAA;;AAIF,SAAK,KAAL;AACQL,MAAAA,CAAAA,GAAOhM,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAAPgM,EACAC,CAAAA,GACFjM,aAAAA,CAAc,UAAdA,EAA0B5W,CAA1B4W,EAAgCzF,CAAhCyF,EAA2CxF,CAA3CwF,CAFEgM;AAGN,aAAA,CAAQM,GAAAA,CACJtM,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIsM,EACwDN,CADxDM,EAEJL,CAFIK,CAAR,CAAA;;AAIF,SAAK,KAAL;AACQN,MAAAA,CAAAA,GAAOhM,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAAPgM,EACAC,CAAAA,GACFjM,aAAAA,CAAc,UAAdA,EAA0B5W,CAA1B4W,EAAgCzF,CAAhCyF,EAA2CxF,CAA3CwF,CAFEgM;AAGN,aAAA,CAAQO,GAAAA,CACJvM,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIuM,EACwDP,CADxDO,EAEJN,CAFIM,CAAR,CAAA;;AAIF,SAAK,QAAL;AACQP,MAAAA,CAAAA,GAAOhM,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAAPgM;AACN,aAAA,CAAQQ,MAAAA,CACJxM,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIwM,EACwDR,CADxDQ,CAAR,CAAA;;AAGF,SAAK,QAAL;AACQR,MAAAA,CAAAA,GAAOhM,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAAPgM;AACN,aAAA,CAAQS,MAAAA,CACJzM,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIyM,EACwDT,CADxDS,CAAR,CAAA;;AAGF,SAAK,MAAL;AACQT,MAAAA,CAAAA,GAAOhM,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAAPgM,EACAC,CAAAA,GACFjM,aAAAA,CAAc,UAAdA,EAA0B5W,CAA1B4W,EAAgCzF,CAAhCyF,EAA2CxF,CAA3CwF,CAFEgM;AAGN,aAAA,CAAQnJ,IAAAA,CACJ7C,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI6C,EACwDmJ,CADxDnJ,EAEJoJ,CAFIpJ,CAAR,CAAA;;AAIF;AACE,YAAMjS,SAAAA,CAAU,eAAaxH,CAAAA,CAAKwL,EAAlB,GAAkBA,qBAA5BhE,CAAN;AApEJ;AAoEsCgE,CNvEjC;AAAA,IOAIkL,YAAAA,GAAwB,SAAxBA,YAAwB,CAAC1W,CAAD,EAAamR,CAAb,EACCC,CADD,EACCA;AAElC,UAAQpR,CAAAA,CAAKwL,EAAb;AACE,SAAK,QAAL;AACE,UAAMoX,CAAAA,GAAOhM,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAAb;AAAA,UACMhJ,CAAAA,GACFgJ,aAAAA,CAAc,SAAdA,EAAyB5W,CAAzB4W,EAA+BzF,CAA/ByF,EAA0CxF,CAA1CwF,CAFJ;AAGA,aAAA,CAAQ0M,MAAAA,CAAW1V,CAAX0V,EAAmBV,CAAnBU,CAAR,CAAA;;AAEF,SAAK,QAAL;AACQV,MAAAA,CAAAA,GAAOhM,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAAPgM;AAAN,UACMrX,CAAAA,GAAQqL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADd;AAAA,UAEM4D,CAAAA,GACF5D,aAAAA,CAAc,SAAdA,EAAyB5W,CAAzB4W,EAA+BzF,CAA/ByF,EAA0CxF,CAA1CwF,CAHJ;AAIA,aAAA,CAAQ2M,MAAAA,CAAWhY,CAAXgY,EAAkB/I,CAAlB+I,EAA2BX,CAA3BW,CAAR,CAAA;;AAEF,SAAK,SAAL;AACQX,MAAAA,CAAAA,GAAOhM,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAAPgM,EACArX,CAAAA,GAAQqL,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADRgM;AAEN,aAAA,CAAQY,OAAAA,CAAYjY,CAAZiY,EAAmBZ,CAAnBY,CAAR,CAAA;;AAEF,SAAK,OAAL;AAEE,UAAMC,CAAAA,GAAQ7M,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CAAd;AAAA,UAEM3Z,CAAAA,GAAO2Z,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAFb;AAGA,aAAA,CAAQ8M,KAAAA,CACJ9M,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI8M,EACwDD,CADxDC,EAEJzmB,CAFIymB,CAAR,CAAA;;AAIF,SAAK,cAAL;AACQD,MAAAA,CAAAA,GACF7M,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CADE6M;AAAN,UAEM1sB,CAAAA,GAAM6f,aAAAA,CAAc,KAAdA,EAAqB5W,CAArB4W,EAA2BzF,CAA3ByF,EAAsCxF,CAAtCwF,CAFZ;AAAA,UAGM+M,CAAAA,GACF/M,aAAAA,CAAc,SAAdA,EAAyB5W,CAAzB4W,EAA+BzF,CAA/ByF,EAA0CxF,CAA1CwF,CAJJ;AAAA,UAKMgN,CAAAA,GACFhN,aAAAA,CAAc,WAAdA,EAA2B5W,CAA3B4W,EAAiCzF,CAAjCyF,EAA4CxF,CAA5CwF,CANJ;AAAA,UAOMiN,CAAAA,GACFjN,aAAAA,CAAc,SAAdA,EAAyB5W,CAAzB4W,EAA+BzF,CAA/ByF,EAA0CxF,CAA1CwF,CARJ;AAAA,UASMkN,CAAAA,GACFlN,aAAAA,CAAc,cAAdA,EAA8B5W,CAA9B4W,EAAoCzF,CAApCyF,EAA+CxF,CAA/CwF,CAVJ;AAAA,UAWMmN,CAAAA,GACFnN,aAAAA,CAAc,aAAdA,EAA6B5W,CAA7B4W,EAAmCzF,CAAnCyF,EAA8CxF,CAA9CwF,CAZJ;AAAA,UAaMoN,CAAAA,GACFpN,aAAAA,CAAc,gBAAdA,EAAgC5W,CAAhC4W,EAAsCzF,CAAtCyF,EAAiDxF,CAAjDwF,CAdJ;AAAA,UAeM9L,CAAAA,GAAS8L,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAff;AAgBA,UAAqB,MAAjB6M,CAAAA,CAAMjuB,MAAW,IAAKsV,CAAAA,CAAOD,KAAPC,CAAatV,MAAbsV,GAAsB,CAAhD,EACE,KAAK,IAAInU,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAImU,CAAAA,CAAOD,KAAPC,CAAatV,MAAjC,EAAyCmB,CAAAA,EAAzC;AACE8sB,QAAAA,CAAAA,CAAMpsB,IAANosB,CAAW,CAAXA,GACA1sB,CAAAA,CAAIM,IAAJN,CAAS+T,CAAAA,CAAOD,KAAPC,CAAanU,CAAbmU,CAAT/T,CADA0sB,EAEAE,CAAAA,CAAQtsB,IAARssB,CAAaA,CAAAA,CAAQ,CAARA,CAAbA,CAFAF;AADF;AAMF,aAAA,CAAQQ,YAAAA,CACJnZ,CADImZ,EACIR,CADJQ,EACWltB,CADXktB,EACgBN,CADhBM,EACyBL,CADzBK,EACoCJ,CADpCI,EAC6CH,CAD7CG,EAEJF,CAFIE,EAESD,CAFTC,CAAR,CAAA;;AAIF,SAAK,OAAL;AACE,aAAOC,IAAAA,CAAS,YAAA;AACd,YAAMtB,CAAAA,GAAOhM,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAAb;AAAA,YACMwD,CAAAA,GACFxD,aAAAA,CAAc,SAAdA,EAAyB5W,CAAzB4W,EAA+BzF,CAA/ByF,EAA0CxF,CAA1CwF,CAFJ;AAAA,YAIM/L,CAAAA,GAAQuP,CAAAA,CAAQ,CAARA,CAAAA,CAAWvP,KAJzB;AAAA,YAKMsZ,CAAAA,GAAgB/J,CAAAA,CAAQ,CAARA,CAAAA,CAAWgK,OAAXhK,GAAqBvP,KAL3C;AAAA,YAMMwZ,CAAAA,GAASjK,CAAAA,CAAQ1I,GAAR0I,CAAY,UAAA,CAAA,EAAA;AACzB,cAAMkK,CAAAA,GAAYC,IAAAA,CAAS5I,WAAT4I,CAAqBzZ,CAAAA,CAAOD,KAA5B0Z,EAAmC1Z,CAAnC0Z,CAAlB;AACA,cAAA,CAAKD,CAAL,IAAKA,CACAC,IAAAA,CAAS5I,WAAT4I,CAAqBzZ,CAAAA,CAAOsZ,OAAPtZ,GAAiBD,KAAtC0Z,EAA6CJ,CAA7CI,CADL,EAEE,MAAM,IAAIzsB,KAAJ,CAAU,wCAAV,CAAN;AAEF,iBAAOwsB,CAAAA,GAAYxZ,CAAZwZ,GAAqBxZ,CAAAA,CAAOsQ,OAAPtQ,CAAeD,CAAfC,CAA5B;AAA2CD,SAN9BuP,CANf;AAcA,eAAA,CAAQoK,KAAAA,CAAUH,CAAVG,EAAkB5B,CAAlB4B,CAAR,CAAA;AAA0B5B,OAfrBsB,CAAP;;AAkBF,SAAK,SAAL;AACE,aAAOA,IAAAA,CAAS,YAAA;AACd,YAAMtB,CAAAA,GAAOhM,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAAb;AAAA,YACM9L,CAAAA,GACF8L,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CAFJ;AAGA,eAAO6N,OAAAA,CAAY3Z,CAAZ2Z,EAAoB7B,CAApB6B,CAAP;AAA2B7B,OAJtBsB,CAAP;;AAOF,SAAK,MAAL;AACE,UAAMQ,CAAAA,GAAO9N,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAAb;AACA,aAAA,CAAQ+N,IAAAA,CACJ/N,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI+N,EACwDD,CADxDC,CAAR,CAAA;;AAGF,SAAK,OAAL;AACQ/B,MAAAA,CAAAA,GAAOhM,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAAPgM;AAAN,UACMgC,CAAAA,GACFhO,aAAAA,CAAc,iBAAdA,EAAiC5W,CAAjC4W,EAAuCzF,CAAvCyF,EAAkDxF,CAAlDwF,CAFJ;AAIA,aAAOiO,KAAAA,CACHjO,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADGiO,EAEHD,CAFGC,EAEcjC,CAFdiC,CAAP;;AAIF,SAAK,WAAL;AACQrK,MAAAA,CAAAA,GACF5D,aAAAA,CAAc,SAAdA,EAAyB5W,CAAzB4W,EAA+BzF,CAA/ByF,EAA0CxF,CAA1CwF,CADE4D;AAAN,UAEMnR,CAAAA,GACFuN,aAAAA,CAAc,QAAdA,EAAwB5W,CAAxB4W,EAA8BzF,CAA9ByF,EAAyCxF,CAAzCwF,CAHJ;AAAA,UAIM/L,CAAAA,GACF+L,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CALJ;AAMA,aAAA,CAAQkO,SAAAA,CAActK,CAAdsK,EAAuBzb,CAAvByb,EAA+Bja,CAA/Bia,CAAR,CAAA;;AAEF,SAAK,UAAL;AACE,UAAMpE,CAAAA,GAAI9J,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CAAV;AACM4D,MAAAA,CAAAA,GACF5D,aAAAA,CAAc,SAAdA,EAAyB5W,CAAzB4W,EAA+BzF,CAA/ByF,EAA0CxF,CAA1CwF,CADE4D;AAEN,aAAA,CAAQuK,QAAAA,CAAarE,CAAbqE,EAAgBvK,CAAhBuK,CAAR,CAAA;;AAEF,SAAK,eAAL;AACQvK,MAAAA,CAAAA,GACF5D,aAAAA,CAAc,eAAdA,EAA+B5W,CAA/B4W,EAAqCzF,CAArCyF,EAAgDxF,CAAhDwF,CADE4D,EAGA3P,CAAAA,GACF+L,aAAAA,CAAc,aAAdA,EAA6B5W,CAA7B4W,EAAmCzF,CAAnCyF,EAA8CxF,CAA9CwF,CAJE4D;AAAN,UAKMwK,CAAAA,GACFpO,aAAAA,CAAc,cAAdA,EAA8B5W,CAA9B4W,EAAoCzF,CAApCyF,EAA+CxF,CAA/CwF,CANJ;AAAA,UAOMzH,CAAAA,GACFyH,aAAAA,CAAc,cAAdA,EAA8B5W,CAA9B4W,EAAoCzF,CAApCyF,EAA+CxF,CAA/CwF,CARJ;AASA,aAAA,CAAQ+L,aAAAA,CAAkBnI,CAAlBmI,EAA2BqC,CAA3BrC,EAAyC9X,CAAzC8X,EAAgDxT,CAAhDwT,CAAR,CAAA;;AAEF;AACE,YAAMnb,SAAAA,CAAU,eAAaxH,CAAAA,CAAKwL,EAAlB,GAAkBA,qBAA5BhE,CAAN;AA7HJ;AA6HsCgE,CPhIjC;AAAA,IQAIkL,YAAAA,GACP,SADOA,YACP,CAAC1W,CAAD,EAAamR,CAAb,EACCC,CADD,EACCA;AACC,UAAQpR,CAAAA,CAAKwL,EAAb;AACE,SAAK,KAAL;AACE,aAAA,CAAQyZ,GAAAA,CACJrO,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIqO,CAAR,CAAA;;AAGF,SAAK,MAAL;AACE,aAAA,CAAQC,IAAAA,CACJtO,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIsO,CAAR,CAAA;;AAGF,SAAK,MAAL;AACE,aAAA,CAAQC,IAAAA,CACJvO,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIuO,CAAR,CAAA;;AAGF,SAAK,OAAL;AACE,aAAA,CAAQC,KAAAA,CACJxO,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIwO,CAAR,CAAA;;AAGF;AACE,YAAM5d,SAAAA,CAAU,eAAaxH,CAAAA,CAAKwL,EAAlB,GAAkBA,qBAA5BhE,CAAN;AAlBJ;AAkBsCgE,CRrBrC;AAAA,ISAIkL,YAAAA,GAAwB,SAAxBA,YAAwB,CAAC1W,CAAD,EAAamR,CAAb,EACCC,CADD,EACCA;AAElC,UAAQpR,CAAAA,CAAKwL,EAAb;AACE,SAAK,MAAL;AACE,aAAA,CAAQ6Z,IAAAA,CACJzO,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIyO,EAEJzO,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CAFIyO,CAAR,CAAA;;AAKF,SAAK,YAAL;AACE,UAAMzC,CAAAA,GAAOhM,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAAb;AACA,aAAA,CAAQ0O,UAAAA,CACJ1O,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI0O,EACwD1C,CADxD0C,CAAR,CAAA;;AAGF,SAAK,SAAL;AACQ1C,MAAAA,CAAAA,GAAOhM,aAAAA,CAAc,MAAdA,EAAsB5W,CAAtB4W,EAA4BzF,CAA5ByF,EAAuCxF,CAAvCwF,CAAPgM;AACN,aAAA,CAAQ2C,OAAAA,CACJ3O,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI2O,EACwD3C,CADxD2C,CAAR,CAAA;;AAIF,SAAK,SAAL;AACE,aAAA,CAAQC,OAAAA,CACJ5O,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI4O,EAEJ5O,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CAFI4O,CAAR,CAAA;;AAIF,SAAK,KAAL;AACE,aAAA,CAAQC,GAAAA,CACJ7O,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADI6O,EAEJ9H,OAAAA,CACI/G,aAAAA,CAAc,SAAdA,EAAyB5W,CAAzB4W,EAA+BzF,CAA/ByF,EAA0CxF,CAA1CwF,CADJ+G,EAEI,CAFJA,CAFI8H,EAKJ7O,aAAAA,CAAc,eAAdA,EAA+B5W,CAA/B4W,EAAqCzF,CAArCyF,EAAgDxF,CAAhDwF,CALI6O,CAAR,CAAA;;AAOF,SAAK,gBAAL;AACE,UAAMC,CAAAA,GACF9O,aAAAA,CAAc,YAAdA,EAA4B5W,CAA5B4W,EAAkCzF,CAAlCyF,EAA6CxF,CAA7CwF,CADJ;AAAA,UAEM+O,CAAAA,GAAWhI,OAAAA,CACb/G,aAAAA,CAAc,UAAdA,EAA0B5W,CAA1B4W,EAAgCzF,CAAhCyF,EAA2CxF,CAA3CwF,CADa+G,EACoD,CADpDA,CAFjB;AAIA,aAAA,CAAQiI,cAAAA,CACJhP,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIgP,EAEJF,CAFIE,EAEQD,CAFRC,CAAR,CAAA;;AAIF,SAAK,gBAAL;AACQF,MAAAA,CAAAA,GACF9O,aAAAA,CAAc,YAAdA,EAA4B5W,CAA5B4W,EAAkCzF,CAAlCyF,EAA6CxF,CAA7CwF,CADE8O;AAAN,UAEMG,CAAAA,GAAQlI,OAAAA,CACV/G,aAAAA,CAAc,OAAdA,EAAuB5W,CAAvB4W,EAA6BzF,CAA7ByF,EAAwCxF,CAAxCwF,CADU+G,EACoD,CADpDA,CAFd;AAIA,aAAA,CAAQmI,cAAAA,CACJlP,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIkP,EAEJJ,CAFII,EAEQD,CAFRC,CAAR,CAAA;;AAIF,SAAK,cAAL;AACE,UAAMC,CAAAA,GACFnP,aAAAA,CAAc,WAAdA,EAA2B5W,CAA3B4W,EAAiCzF,CAAjCyF,EAA4CxF,CAA5CwF,CADJ;AAAA,UAEMsH,CAAAA,GACFtH,aAAAA,CAAc,YAAdA,EAA4B5W,CAA5B4W,EAAkCzF,CAAlCyF,EAA6CxF,CAA7CwF,CAHJ;AAKA,aAAA,CAAQoP,YAAAA,CACJpP,aAAAA,CAAc,GAAdA,EAAmB5W,CAAnB4W,EAAyBzF,CAAzByF,EAAoCxF,CAApCwF,CADIoP,EAEJD,CAFIC,EAEO9H,CAFP8H,CAAR,CAAA;;AAIF;AACE,YAAMxe,SAAAA,CAAU,eAAaxH,CAAAA,CAAKwL,EAAlB,GAAkBA,qBAA5BhE,CAAN;AA5DJ;AA4DsCgE,CT/DjC;;AS+DiCA,SAAAA,YAAAA,CC3CpCxL,CD2CoCwL,EC3CxB2F,CD2CwB3F,EC1CpC4F,CD0CoC5F,EC1CpC4F;AACF,UAAQpR,CAAAA,CAAK0S,QAAb;AACE,SAAK,YAAL;AACE,aAAOuT,SAAAA,CAAqBjmB,CAArBimB,EAA2B9U,CAA3B8U,EAAsC7U,CAAtC6U,CAAP;;AACF,SAAK,YAAL;AACE,aAAOC,WAAAA,CAAoBlmB,CAApBkmB,EAA0B/U,CAA1B+U,EAAqC9U,CAArC8U,CAAP;;AACF,SAAK,SAAL;AACE,aAAOC,WAAAA,CAAkBnmB,CAAlBmmB,EAAwBhV,CAAxBgV,EAAmC/U,CAAnC+U,CAAP;;AACF,SAAK,aAAL;AACE,aAAOC,WAAAA,CAAsBpmB,CAAtBomB,EAA4BjV,CAA5BiV,EAAuChV,CAAvCgV,CAAP;;AACF,SAAK,UAAL;AACE,aAAOC,WAAAA,CAAmBrmB,CAAnBqmB,EAAyBlV,CAAzBkV,EAAoCjV,CAApCiV,CAAP;;AACF,SAAK,SAAL;AACE,aAAOC,WAAAA,CAAkBtmB,CAAlBsmB,EAAwBnV,CAAxBmV,EAAmClV,CAAnCkV,CAAP;;AACF,SAAK,YAAL;AACE,aAAOC,WAAAA,CAAqBvmB,CAArBumB,EAA2BpV,CAA3BoV,EAAsCnV,CAAtCmV,CAAP;;AACF,SAAK,OAAL;AACE,aAAOC,WAAAA,CAAgBxmB,CAAhBwmB,EAAsBrV,CAAtBqV,EAAiCpV,CAAjCoV,CAAP;;AACF,SAAK,OAAL;AACE,aAAOC,WAAAA,CAAgBzmB,CAAhBymB,EAAsBtV,CAAtBsV,EAAiCrV,CAAjCqV,CAAP;;AACF,SAAK,SAAL;AACE,aAAOC,WAAAA,CAAkB1mB,CAAlB0mB,EAAwBvV,CAAxBuV,EAAmCtV,CAAnCsV,CAAP;;AACF,SAAK,UAAL;AACE,aAAOC,YAAAA,CAAmB3mB,CAAnB2mB,EAAyBxV,CAAzBwV,EAAoCvV,CAApCuV,CAAP;;AACF,SAAK,eAAL;AACE,aAAOC,YAAAA,CAAwB5mB,CAAxB4mB,EAA8BzV,CAA9ByV,EAAyCxV,CAAzCwV,CAAP;;AACF,SAAK,WAAL;AACE,aAAOC,YAAAA,CAAoB7mB,CAApB6mB,EAA0B1V,CAA1B0V,EAAqCzV,CAArCyV,CAAP;;AACF,SAAK,YAAL;AACE,aAAOC,YAAAA,CAAoB9mB,CAApB8mB,EAA0B3V,CAA1B2V,EAAqC1V,CAArC0V,CAAP;;AACF,SAAK,UAAL;AACE,aAAOC,YAAAA,CAAmB/mB,CAAnB+mB,EAAyB5V,CAAzB4V,EAAoC3V,CAApC2V,CAAP;;AACF,SAAK,gBAAL;AACE,aAAOC,YAAAA,CAAyBhnB,CAAzBgnB,EAA+B7V,CAA/B6V,EAA0C5V,CAA1C4V,CAAP;;AACF;AACE,YAAMxf,SAAAA,CAAU,eAAaxH,CAAAA,CAAKwL,EAAlB,GAAkBA,qBAA5BhE,CAAN;AAlCJ;ACVF;;AAAA,IAAA,gBAAA,GAAA,YAAA;AAME,WAAA,CAAA,CACoB4f,CADpB,EAEoBC,CAFpB,EAEoBA;AADAD,SAAAA,SAAAA,GAAAA,CAAAA,EACAC,KAAAA,cAAAA,GAAAA,CADAD,EANZnvB,KAAAA,WAAAA,GAAAA;AAAegiB,MAAAA,EAAAA,EAAI,CAAnBhiB;AAAsBgvB,MAAAA,SAAAA,EAAW,EAAjChvB;AAAqCivB,MAAAA,WAAAA,EAAa;AAAlDjvB,KAMYmvB,EALZnvB,KAAAA,QAAAA,GAAAA,CAAoCA,KAAKkvB,WAAzClvB,CAKYmvB,EAJZnvB,KAAAA,MAAAA,GAAS,CAIGmvB,EAElBnvB,KAAKqvB,yBAALrvB,EAFkBmvB;AAwHtB;;AAAA,SAnHUG,CAAAA,CAAAA,SAAAA,CAAAA,QAAAA,GAAR,UAAiBtN,CAAjB,EAA6BgN,CAA7B,EAA6BA;AAC3B,WAAA;AAAQhN,MAAAA,EAAAA,EAAAA,CAAR;AAAYgN,MAAAA,SAAAA,EAAAA,CAAZ;AAAuBC,MAAAA,WAAAA,EAAa;AAApC,KAAA;AAAoC,GAD9BK,EASRjrB,MAAAA,CAAAA,cAAAA,CAAIirB,CAAAA,CAAAA,SAAJjrB,EAAIirB,gBAAJjrB,EAAIirB;AAAAA,IAAAA,GAAAA,EAOJ,eAAA;AACE,aAAOtvB,KAAKuvB,QAAZ;AAAYA,KARVD;AAQUC,IAAAA,GAAAA,EARdlrB,aAAmBkrB,CAAnBlrB,EAAmBkrB;AACbvvB,WAAKuvB,QAALvvB,KAAkBuvB,CAAlBvvB,KACFA,KAAKuvB,QAALvvB,GAAgBuvB,CAAhBvvB,EACAA,KAAKqvB,yBAALrvB,EAFEA;AAEGqvB,KAHLC;AAGKD,IAAAA,UAAAA,EAAAA,CAAAA,CAHLC;AAGKD,IAAAA,YAAAA,EAAAA,CAAAA;AAHLC,GAAJjrB,CATQirB,EAuBRjrB,MAAAA,CAAAA,cAAAA,CAAIirB,CAAAA,CAAAA,SAAJjrB,EAAIirB,kBAAJjrB,EAAIirB;AAAAA,IAAAA,GAAAA,EAAJjrB,eAAAA;AACE,aAAOrE,KAAKwvB,kBAALxvB,CAAwB,CAAxBA,CAAP;AAA+B,KAD7BsvB;AAC6B,IAAA,UAAA,EAAA,CAAA,CAD7BA;AAC6B,IAAA,YAAA,EAAA,CAAA;AAD7BA,GAAJjrB,CAvBQirB,EA+BRjrB,MAAAA,CAAAA,cAAAA,CAAIirB,CAAAA,CAAAA,SAAJjrB,EAAIirB,mBAAJjrB,EAAIirB;AAAAA,IAAAA,GAAAA,EAAJjrB,eAAAA;AACE,aAAOrE,KAAKwvB,kBAAZ;AAAYA,KADVF;AACUE,IAAAA,UAAAA,EAAAA,CAAAA,CADVF;AACUE,IAAAA,YAAAA,EAAAA,CAAAA;AADVF,GAAJjrB,CA/BQirB,EAmCAA,CAAAA,CAAAA,SAAAA,CAAAA,yBAAAA,GAAR,YAAA;AAEE,SADA,IAAMG,CAAAA,GAAAA,EAAN,EACS/wB,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAIsB,KAAKuvB,QAALvvB,CAAczC,MAAdyC,GAAuB,CAA3C,EAA8CtB,CAAAA,EAA9C,EAAmD;AACjD,UAAM6wB,CAAAA,GAAWvvB,KAAKuvB,QAALvvB,CAAcT,KAAdS,CAAoB,CAApBA,EAAuBA,KAAKuvB,QAALvvB,CAAczC,MAAdyC,GAAuBtB,CAA9CsB,CAAjB;AACAyvB,MAAAA,CAAAA,CAAMrwB,IAANqwB,CAAWzvB,KAAK0vB,oBAAL1vB,CAA0BuvB,CAA1BvvB,CAAXyvB;AAEFA;;AAAAA,IAAAA,CAAAA,CAAMrwB,IAANqwB,CAAW,EAAXA,GACAzvB,KAAKwvB,kBAALxvB,GAA0ByvB,CAD1BA;AAC0BA,GA1CpBH,EA6CAA,CAAAA,CAAAA,SAAAA,CAAAA,oBAAAA,GAAR,UAA6BC,CAA7B,EAA6BA;AAC3B,WAAOA,CAAAA,GACHA,CAAAA,CACK9V,GADL8V,CAEQ,UAAA,CAAA,EAAA;AAAW,aAAgB,MAAfpW,CAAAA,CAAQ6I,EAAO,IAA6B,MAAxB7I,CAAAA,CAAQ8V,WAAb,GACvB,EADuB,GAEpB9V,CAAAA,CAAQ6V,SAAR7V,GAAQ6V,GAAR7V,GAAqBA,CAAAA,CAAQ8V,WAFzB;AAEyBA,KAJ5CM,EAKK/vB,IALL+vB,CAKU,GALVA,CADGA,GAOH,EAPJ;AAOI,GArDED,EA4DRA,CAAAA,CAAAA,SAAAA,CAAAA,UAAAA,GAAAA,UAAWtL,CAAXsL,EAAWtL;AACLhkB,SAAKuvB,QAALvvB,KACFA,KAAK2vB,MAAL3vB,IACAA,KAAKuvB,QAALvvB,GAAgBA,KAAKuvB,QAALvvB,CAAcT,KAAdS,EADhBA,EAEAA,KAAKuvB,QAALvvB,CAAcZ,IAAdY,CAAmBA,KAAK4vB,QAAL5vB,CAAcA,KAAK2vB,MAAnB3vB,EAA2BgkB,CAA3BhkB,CAAnBA,CAFAA,EAGAA,KAAKwvB,kBAALxvB,CAAwB6vB,OAAxB7vB,CAAgCA,KAAK0vB,oBAAL1vB,CAA0BA,KAAKuvB,QAA/BvvB,CAAhCA,CAJEA;AAI6DuvB,GAjE3DD,EAyERA,CAAAA,CAAAA,SAAAA,CAAAA,SAAAA,GAAAA,YAAAA;AACE,QAAA,EAAItvB,KAAKuvB,QAALvvB,IAAiBA,KAAKuvB,QAALvvB,CAAczC,MAAdyC,GAAuB,CAA5C,CAAA,EAKE,MAAM,IAAIH,KAAJ,CAAU,yCAAV,CAAN;AAJAG,SAAKuvB,QAALvvB,GAAgBA,KAAKuvB,QAALvvB,CAAcT,KAAdS,EAAhBA,EACAA,KAAKuvB,QAALvvB,CAAcO,MAAdP,CAAcO,CAAQ,CAAtBP,CADAA,EAEAA,KAAK+Z,iBAAL/Z,CAAuB8vB,KAAvB9vB,EAFAA;AAEuB8vB,GA7EnBR,EAuFRA,CAAAA,CAAAA,SAAAA,CAAAA,aAAAA,GAAAA,YAAAA;AACE,QAAA,EAAItvB,KAAKuvB,QAALvvB,IAAiBA,KAAKuvB,QAALvvB,CAAczC,MAAdyC,GAAuB,CAA5C,CAAA,EAYE,MAAM,IAAIH,KAAJ,CAAU,uDAAV,CAAN;AAXAG,SAAKuvB,QAALvvB,GAAgBA,KAAKuvB,QAALvvB,CAAcT,KAAdS,EAAhBA,EACAA,KAAK2vB,MAAL3vB,EADAA;AAEA,QAAMmZ,CAAAA,GACF9U,MAAAA,CAAO0rB,MAAP1rB,CAAO0rB,EAAP1rB,EAAkBrE,KAAKuvB,QAALvvB,CAAcA,KAAKuvB,QAALvvB,CAAczC,MAAdyC,GAAuB,CAArCA,CAAlBqE,CADJ;AAGA8U,IAAAA,CAAAA,CAAQ8V,WAAR9V,IAAuB,CAAvBA,EACAA,CAAAA,CAAQ6I,EAAR7I,GAAanZ,KAAK2vB,MADlBxW,EAEAnZ,KAAKuvB,QAALvvB,CAAcO,MAAdP,CAAcO,CAAQ,CAAtBP,EAAyB,CAAzBA,EAA4BmZ,CAA5BnZ,CAFAmZ,EAGAnZ,KAAKwvB,kBAALxvB,CAAwBO,MAAxBP,CACI,CADJA,EACO,CADPA,EACUA,KAAK0vB,oBAAL1vB,CAA0BA,KAAKuvB,QAA/BvvB,CADVA,CAHAmZ;AAIyCoW,GAlGrCD,EAwGRA,CAAAA,CAAAA,SAAAA,CAAAA,SAAAA,GAAAA,UAAUrlB,CAAVqlB,EAAUrlB;AACR,WAAOjK,KAAKmvB,SAALnvB,CAAeiK,CAAfjK,CAAP;AAAsBiK,GAzGhBqlB,EA4GRA,CAAAA,CAAAA,SAAAA,CAAAA,cAAAA,GAAAA,UAAejL,CAAfiL,EAAejL;AACbrkB,SAAKovB,cAALpvB,CAAoBqkB,CAAAA,CAAYrC,EAAhChiB,IAAsCqkB,CAAtCrkB;AAAsCqkB,GA7GhCiL,EAgHRA,CAAAA,CAAAA,SAAAA,CAAAA,cAAAA,GAAAA,UAAetN,CAAfsN,EAAetN;AACb,WAAOhiB,KAAKovB,cAALpvB,CAAoBgiB,CAApBhiB,CAAP;AAA2BgiB,GAjHrBsN,EAiHqBtN,CAE/B;AAF+BA,CA7H/B,EAAA;AAAA,IA6H+BA,aAAAA,GAAAA,YAAAA;ACjF7B,WAAA,CAAA,CAAoBhG,CAApB,EAAoBA;AAAAA,SAAAA,KAAAA,GAAAA,CAAAA,EAhDZhc,KAAAA,WAAAA,GAAmC,IAAIgwB,GAAJ,EAgDvBhU,EA/CZhc,KAAAA,UAAAA,GAAAA,EA+CYgc,EA3CZhc,KAAAA,SAAAA,GAAY,GA2CAgc,EAClBhc,KAAK+c,YAAL/c,GAAoBgc,CAAAA,CAAMe,YADRf,EAElBhc,KAAKowB,QAALpwB,GAAgBgc,CAAAA,CAAMpG,OAFJoG,EAGlBhc,KAAKqwB,OAALrwB,EAHkBgc;AAgZtB;;AAAA,SA1bE3X,MAAAA,CAAAA,cAAAA,CAAI4rB,CAAAA,CAAAA,SAAJ5rB,EAAI4rB,WAAJ5rB,EAAI4rB;AAAAA,IAAAA,GAAAA,EAAJ5rB,eAAAA;AACE,aAAOrE,KAAKkwB,UAAZ;AAAYA,KADVD;AACUC,IAAAA,GAAAA,EAEd,aAAcf,CAAd,EAAcA;AACZ,UAAMgB,CAAAA,GAAY9rB,MAAAA,CAAOC,IAAPD,CAAY8qB,CAAZ9qB,EAAuBoV,GAAvBpV,CACd,UAAA,CAAA,EAAA;AAAO,eAAA,CAAA,CAAUkZ,CAAV,CAAA,CAAe9D,GAAf,CAAmB,UAAA,CAAA,EAAA;AAAU,iBAAA,CAAA,CAAOuI,EAAP;AAAOA,SAApC,CAAA;AAAoCA,OAD7B3d,CAAlB;AAEArE,WAAKmwB,SAALnwB,GAAKmwB,GAAe3T,MAAf2T,CAAsBpyB,KAAtBoyB,CAAsBpyB,EAAtBoyB,EAAgCA,CAAhCA,CAALnwB,EACAA,KAAKkwB,UAALlwB,GAAkBmvB,CADlBnvB;AACkBmvB,KAPhBc;AAOgBd,IAAAA,UAAAA,EAAAA,CAAAA,CAPhBc;AAOgBd,IAAAA,YAAAA,EAAAA,CAAAA;AAPhBc,GAAJ5rB,GAUAA,MAAAA,CAAAA,cAAAA,CAAI4rB,CAAAA,CAAAA,SAAJ5rB,EAAI4rB,QAAJ5rB,EAAI4rB;AAAAA,IAAAA,GAAAA,EAAJ5rB,eAAAA;AACE,aAAOrE,KAAK+c,YAAL/c,CAAkByZ,GAAlBzZ,CAAsB,UAAA,CAAA,EAAA;AAC3B,eAAA;AACEiK,UAAAA,IAAAA,EAAMlC,CAAAA,CAAKkC,IADb;AAEE2I,UAAAA,KAAAA,EAAO7K,CAAAA,CAAK3K,MAAL2K,CAAmB,KAAnBA,GAAuBA,CAAAA,CAAK3K,MAAL2K,CAAmB,KAAnBA,CAAqBnC,KAA5CmC,GAA4CnC,KACrBhG,CAHhC;AAIEuS,UAAAA,KAAAA,EAAOpK,CAAAA,CAAK3K,MAAL2K,CAAmB,KAAnBA,GAAuBA,CAAAA,CAAK3K,MAAL2K,CAAmB,KAAnBA,CAAqBnC,KAA5CmC,GAA4CnC,KACrBhG;AALhC,SAAA;AAKgCA,OAN3BI,CAAP;AAMkCJ,KAPhCqwB;AAOgCrwB,IAAAA,UAAAA,EAAAA,CAAAA,CAPhCqwB;AAOgCrwB,IAAAA,YAAAA,EAAAA,CAAAA;AAPhCqwB,GAAJ5rB,CAVAA,EAsBAA,MAAAA,CAAAA,cAAAA,CAAI4rB,CAAAA,CAAAA,SAAJ5rB,EAAI4rB,SAAJ5rB,EAAI4rB;AAAAA,IAAAA,GAAAA,EAAJ5rB,eAAAA;AACE,aAAOrE,KAAKowB,QAALpwB,CAAcyZ,GAAdzZ,CAAkB,UAAA,CAAA,EAAA;AACvB,eAAA;AACEiK,UAAAA,IAAAA,EAAMlC,CAAAA,CAAKkC,IADb;AAEE2I,UAAAA,KAAAA,EAAO7K,CAAAA,CAAK3K,MAAL2K,CAAmB,KAAnBA,GAAuBA,CAAAA,CAAK3K,MAAL2K,CAAmB,KAAnBA,CAAqBnC,KAA5CmC,GAA4CnC,KACrBhG,CAHhC;AAIEuS,UAAAA,KAAAA,EAAOpK,CAAAA,CAAK3K,MAAL2K,CAAmB,KAAnBA,GAAuBA,CAAAA,CAAK3K,MAAL2K,CAAmB,KAAnBA,CAAqBnC,KAA5CmC,GAA4CnC,KACrBhG;AALhC,SAAA;AAKgCA,OAN3BI,CAAP;AAMkCJ,KAPhCqwB;AAOgCrwB,IAAAA,UAAAA,EAAAA,CAAAA,CAPhCqwB;AAOgCrwB,IAAAA,YAAAA,EAAAA,CAAAA;AAPhCqwB,GAAJ5rB,CAtBAA,EAkCAA,MAAAA,CAAAA,cAAAA,CAAI4rB,CAAAA,CAAAA,SAAJ5rB,EAAI4rB,YAAJ5rB,EAAI4rB;AAAAA,IAAAA,GAAAA,EAAJ5rB,eAAAA;AACE,aAAOrE,KAAK+c,YAAL/c,CAAkByZ,GAAlBzZ,CAAsB,UAAA,CAAA,EAAA;AAAQ,eAAA,CAAA,CAAKiK,IAAL;AAAKA,OAAnCjK,CAAP;AAA0CiK,KADxCgmB;AACwChmB,IAAAA,UAAAA,EAAAA,CAAAA,CADxCgmB;AACwChmB,IAAAA,YAAAA,EAAAA,CAAAA;AADxCgmB,GAAJ5rB,CAlCAA,EAsCAA,MAAAA,CAAAA,cAAAA,CAAI4rB,CAAAA,CAAAA,SAAJ5rB,EAAI4rB,aAAJ5rB,EAAI4rB;AAAAA,IAAAA,GAAAA,EAAJ5rB,eAAAA;AACE,aAAOrE,KAAK4V,OAAL5V,CAAayZ,GAAbzZ,CAAiB,UAAA,CAAA,EAAA;AAAQ,eAAA,CAAA,CAAKiK,IAAL;AAAKA,OAA9BjK,CAAP;AAAqCiK,KADnCgmB;AACmChmB,IAAAA,UAAAA,EAAAA,CAAAA,CADnCgmB;AACmChmB,IAAAA,YAAAA,EAAAA,CAAAA;AADnCgmB,GAAJ5rB,CAtCAA,EAgDAA,MAAAA,CAAAA,cAAAA,CAAI4rB,CAAAA,CAAAA,SAAJ5rB,EAAI4rB,oBAAJ5rB,EAAI4rB;AAAAA,IAAAA,GAAAA,EAAJ5rB,eAAAA;AACE,aAAOrE,KAAKgc,KAALhc,CAAW6c,eAAlB;AAAkBA,KADhBoT;AACgBpT,IAAAA,UAAAA,EAAAA,CAAAA,CADhBoT;AACgBpT,IAAAA,YAAAA,EAAAA,CAAAA;AADhBoT,GAAJ5rB,CAhDAA,EAoDAA,MAAAA,CAAAA,cAAAA,CAAI4rB,CAAAA,CAAAA,SAAJ5rB,EAAI4rB,qBAAJ5rB,EAAI4rB;AAAAA,IAAAA,GAAAA,EAAJ5rB,eAAAA;AACE,aAAOrE,KAAKgc,KAALhc,CAAW8c,gBAAlB;AAAkBA,KADhBmT;AACgBnT,IAAAA,UAAAA,EAAAA,CAAAA,CADhBmT;AACgBnT,IAAAA,YAAAA,EAAAA,CAAAA;AADhBmT,GAAJ5rB,CApDAA,EA4DQ4rB,CAAAA,CAAAA,SAAAA,CAAAA,OAAAA,GAAR,UAAgBK,CAAhB,EAAgBA;AAGd,QAAA,CAAItwB,KAAKgc,KAALhc,CAAW6c,eAAf,IAAeA,CAAmB7c,KAAKgc,KAALhc,CAAW8c,gBAA7C,EAAA;AAGA,UAAMyT,CAAAA,GAAAA,EAAN;AAAA,UACM5a,CAAAA,GAAS2a,CAAAA,IAActwB,KAAKgc,KAALhc,CAAW+c,YADxC;AAAA,UAGM0T,CAAAA,GADkB9a,CAAAA,CAAO8D,GAAP9D,CAAW,UAAA,CAAA,EAAA;AAAQ,eAAA,CAAA,CAAK1L,IAAL;AAAKA,OAAxB0L,EAA8B6a,IAA9B7a,GACQnW,IADRmW,CACa3V,KAAK0wB,SADlB/a,CAFxB;;AAMA,UAAA,CAAI3V,KAAK2wB,WAAL3wB,CAAiBsK,GAAjBtK,CAAqBywB,CAArBzwB,CAAJ,EAAA;AAMA,aAFA,IAAMwK,CAAAA,GAAYmL,CAAAA,CAAAA,MAAAA,CAAW3V,KAAKgc,KAALhc,CAAWgd,OAAtBrH,CAAlB,EACMib,CAAAA,GAAAA,EACN,EAAOpmB,CAAAA,CAAMjN,MAANiN,GAAe,CAAtB,GAAyB;AACvB,cAAMzC,CAAAA,GAAOyC,CAAAA,CAAMqmB,GAANrmB,EAAb;AACAomB,UAAAA,CAAAA,CAAQ7oB,CAAAA,CAAKkC,IAAb2mB,CAAAA,GAAa3mB,CAAQ,CAArB2mB,EACAL,CAAAA,CAAcnxB,IAAdmxB,CAAmBxoB,CAAnBwoB,CADAK,EAEA7oB,CAAAA,CAAKyV,QAALzV,CAAcuV,OAAdvV,CAAsB,UAAC+oB,CAAD,EAACA;AAAAA,aAChBF,CAAAA,CAAQE,CAAAA,CAAU7mB,IAAlB2mB,CADgBE,IACWA,CAAAA,CAAUvX,UAAVuX,CAAqBC,KAArBD,CAA2B,UAAA,CAAA,EAAA;AAC9C,kBAAA,CAAA,GAAA,mBAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACP,qBAAOF,CAAAA,CAAQ/W,CAAR+W,CAAP;AAAe/W,aAFWiX,CADXA,IAKnBtmB,CAAAA,CAAMpL,IAANoL,CAAWsmB,CAAXtmB,CALmBsmB;AAKRA,WALf/oB,CAFA6oB;AAWF5wB;;AAAAA,aAAK2wB,WAAL3wB,CAAiBuN,GAAjBvN,CAAqBywB,CAArBzwB,EAA8BuwB,CAA9BvwB;AAA8BuwB;AAAAA;AAAAA,GA3FhClsB,EAuGA4rB,CAAAA,CAAAA,SAAAA,CAAAA,OAAAA,GAAAA,UACIta,CADJsa,EAC6Be,CAD7Bf,EAEIra,CAFJqa,EAEIra;AAFJqa,QAAAA,CAAAA,GAAAA,IAAAA;AAAAA,SAAAA,CAAAA,KAAAA,CAAAA,KAC6Be,CAAAA,GAAAA,CAAAA,CAD7Bf;AAGE,QAAMR,CAAAA,GAAQprB,MAAAA,CAAOC,IAAPD,CAAYsR,CAAZtR,EAAoBmsB,IAApBnsB,EAAd;AACArE,SAAKixB,UAALjxB,CAAgB2V,CAAhB3V,EAAwBgxB,CAAxBhxB,GACAA,KAAKkxB,sBAALlxB,CAA4B2V,CAA5B3V,EAAoCgxB,CAApChxB,CADAA,EAGAA,KAAKqwB,OAALrwB,CAAayvB,CAAAA,CAAMhW,GAANgW,CAAU,UAAA,CAAA,EAAA;AAAQ,aAAA,CAAA,CAAKzT,KAAL,CAAWiB,KAAX,CAAiBhT,CAAjB,CAAA;AAAiBA,KAAnCwlB,CAAbzvB,CAHAA;AAIA,QAAMmxB,CAAAA,GAAcnxB,KAAKoxB,gBAALpxB,CAAsB4V,CAAtB5V,CAApB;AACAA,SAAKqxB,WAALrxB,CACIA,KAAK2wB,WAAL3wB,CAAiBsK,GAAjBtK,CAAqByvB,CAAAA,CAAMjwB,IAANiwB,CAAWzvB,KAAK0wB,SAAhBjB,CAArBzvB,CADJA,EACsDmxB,CADtDnxB;AAGA,QAAMovB,CAAAA,GAAAA,EAAN;AAwBA,WAvBelM,IAAAA,CAAK,YAAA;AAOlB,WANA,IAAM/J,CAAAA,GAAU,IAAImW,gBAAJ,CAAqBpS,CAAAA,CAAKgT,UAA1B,EAAsCd,CAAtC,CAAhB,EACMlW,CAAAA,GAAAA,QAAAA,CAAAA,EAAAA,EAAgBgE,CAAAA,CAAKiS,SAArBjW,EAAmCvD,CAAnCuD,CADN,EAEMoY,CAAAA,GAAgBpU,CAAAA,CAAKqU,kBAALrU,CAAwBhE,CAAxBgE,CAFtB,EAGMsU,CAAAA,GAAAA,EAHN,EAKMC,CAAAA,GAAgBvU,CAAAA,CAAKyT,WAALzT,CAAiB5S,GAAjB4S,CAAqBuS,CAAAA,CAAMjwB,IAANiwB,CAAWvS,CAAAA,CAAKwT,SAAhBjB,CAArBvS,CALtB,EAMSxe,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAI+yB,CAAAA,CAAcl0B,MAAlC,EAA0CmB,CAAAA,EAA1C,EAA+C;AAC7C,YAAMqJ,CAAAA,GAAO0pB,CAAAA,CAAc/yB,CAAd+yB,CAAb;AASA,YARKvY,CAAAA,CAAUnR,CAAAA,CAAKkC,IAAfiP,CAAAA,KACHA,CAAAA,CAAUnR,CAAAA,CAAKkC,IAAfiP,CAAAA,GACIuF,YAAAA,CAAU1W,CAAV0W,EAAgBvF,CAAhBuF,EAA2BtF,CAA3BsF,CADJvF,EAEAgE,CAAAA,CAAKwU,sBAALxU,CACInV,CAAAA,CAAKkC,IADTiT,EACenV,CADfmV,EACqBhE,CADrBgE,EACgC/D,CADhC+D,EACyCoU,CADzCpU,EACwDiU,CADxDjU,EAEIsU,CAFJtU,CAHGhE,GAQDiY,CAAAA,CAAYJ,KAAZI,CAAkB,UAAA,CAAA,EAAA;AAAQ,iBAAA,CAAA,CAAEjY,CAAAA,CAAUjP,CAAViP,CAAF;AAAYjP,SAAtCknB,CAAJ,EACE;AAGJ;;AAAA,aAAOjU,CAAAA,CAAKyU,WAALzU,CAAiBhE,CAAjBgE,EAA4B/D,CAA5B+D,EAAqCiU,CAArCjU,CAAP;AAA4CiU,KArB/BjO,CAuBf;AAF8CiO,GAzIhD9sB,EA8IQ4rB,CAAAA,CAAAA,SAAAA,CAAAA,kBAAAA,GAAR,UAA2B/W,CAA3B,EAA2BA;AACzB,QAAM0Y,CAAAA,GAAAA,GAASpV,MAAToV,CAAgB7zB,KAAhB6zB,CAAgB7zB,EAAhB6zB,EAEFvtB,MAAAA,CAAOC,IAAPD,CAAY6U,CAAZ7U,EACKoV,GADLpV,CACS,UAAA,CAAA,EAAA;AAAO,aAAA,CAAA,CAAUkZ,CAAV,CAAA;AAAUA,KAD1BlZ,EAEKoV,GAFLpV,CAES,UAAA,CAAA,EAAA;AAAW,aAAA,CAAA,CAAQoV,GAAR,CAAY,UAAA,CAAA,EAAA;AAAU,eAAA,CAAA,CAAOuI,EAAP;AAAOA,OAA7B,CAAA;AAA6BA,KAFjD3d,CAFEutB,CAAN;AAKA,WAAO,IAAIC,GAAJ,CAAQD,CAAR,CAAP;AAAeA,GApJjBvtB,EAsJQ4rB,CAAAA,CAAAA,SAAAA,CAAAA,sBAAAA,GAAR,UACIpW,CADJ,EACsB9R,CADtB,EACkCmR,CADlC,EAEIC,CAFJ,EAE+BmY,CAF/B,EAGIH,CAHJ,EAIIK,CAJJ,EAIIA;AAGoB,kBAAlBzpB,CAAAA,CAAK0S,QAAa,IAAbA,CAA6D,CAA7DA,KAA0B0W,CAAAA,CAAYW,OAAZX,CAAoBtX,CAApBsX,CAAb,KAItBjY,CAAAA,CAAUW,CAAVX,CAAAA,CAAoBoE,OAApBpE,CAA4B,UAAA,CAAA,EAAA;AACZ,cAAVrG,CAAU,KACZ2e,CAAAA,CAAgC3e,CAAAA,CAAOmP,EAAvCwP,CAAAA,GAAuCxP,CAClCwP,CAAAA,CAAgC3e,CAAAA,CAAOmP,EAAvCwP,CAAAA,IAA8C,CADZxP,IAEnCja,CAAAA,CAAKyV,QAALzV,CAAcxK,MAHN;AAGMA,KAJtB2b,GAOAnR,CAAAA,CAAK4N,MAAL5N,CAAYuV,OAAZvV,CAAoB,UAAA,CAAA,EAAA;AAGlB,UAAuB,cAAnBuL,CAAAA,CAAMmH,QAAV,EAAkC;AAChC,YAAM0H,CAAAA,GACF4P,4BAAAA,CAA6Bze,CAAAA,CAAMrJ,IAAnC8nB,EAAyC7Y,CAAzC6Y,EAAoD5Y,CAApD4Y,CADJ;AAEe,gBAAX5P,CAAW,IACbA,CAAAA,CAAQ7E,OAAR6E,CAAgB,UAAA,CAAA,EAAA;AACd,cAAItP,CAAAA,IAAAA,CAAWye,CAAAA,CAAcU,GAAdV,CAAkBze,CAAAA,CAAOmP,EAAzBsP,CAAf,EAA6C;AAC3C,gBAAMW,CAAAA,GAAQT,CAAAA,CAAgC3e,CAAAA,CAAOmP,EAAvCwP,CAAd;AACc,kBAAVS,CAAU,IACZpf,CAAAA,CAAOuP,OAAPvP,IAAOuP,OACAoP,CAAAA,CAAgC3e,CAAAA,CAAOmP,EAAvCwP,CAFK,IAGM,QAATS,CAAS,IAGlBT,CAAAA,CAAgC3e,CAAAA,CAAOmP,EAAvCwP,CAAAA,EANY;AAM2BxP;AAAAA,SAT7CG,CADa;AAUgCH;AAAAA,KAhBnDja,CAXsB;AA2B6Bia,GAxLrD3d,EAyMM4rB,CAAAA,CAAAA,SAAAA,CAAAA,YAAAA,GAAN,UAAmBta,CAAnB,EAA4CC,CAA5C,EAA4CA;AAAAA,WAAAA,SAAAA,CAAAA,IAAAA,EAAAA,KAAAA,CAAAA,EAAAA,KAAAA,CAAAA,EAAAA,YAAAA;AAAAA,UAAAA,CAAAA;AAAAA,UAAAA,CAAAA;AAAAA,UAAAA,CAAAA;AAAAA,UAAAA,CAAAA;AAAAA,UAAAA,CAAAA;AAAAA,UAAAA,CAAAA;AAAAA,UAAAA,CAAAA;AAAAA,UAAAA,CAAAA;AAAAA,UAAAA,CAAAA,GAAAA,IAAAA;AAAAA,aAAAA,WAAAA,CAAAA,IAAAA,EAAAA,UAAAA,CAAAA,EAAAA;AAAAA,gBAAAA,CAAAA,CAAAA,KAAAA;AAAAA,eAAAA,CAAAA;AAWtC,mBATJ5V,KAAKixB,UAALjxB,CAAgB2V,CAAhB3V,EAAgB2V,CAAQ,CAAxB3V,GACAA,KAAKkxB,sBAALlxB,CAA4B2V,CAA5B3V,EAA4B2V,CAAQ,CAApC3V,CADAA,EAEMovB,CAAAA,GAAAA,EAFNpvB,EAGMmZ,CAAAA,GAAU,IAAImW,gBAAJ,CAAqBtvB,KAAKkwB,UAA1B,EAAsCd,CAAtC,CAHhBpvB,EAIMmxB,CAAAA,GAAcnxB,KAAKoxB,gBAALpxB,CAAsB4V,CAAtB5V,CAJpBA,EAI0C4V,CAAAA,CAAAA,EAKhC5V,KAAKkyB,sBAALlyB,CAA4B2V,CAA5B3V,EAAoCmZ,CAApCnZ,EAA6CmxB,CAA7CnxB,CALgC4V,CAKtC;;AAAmDub,eAAAA,CAAAA;AAkBvD,mBAnBMhP,CAAAA,GACF,CAAA,CAAA,IAAA,EADEA,EAEAgQ,CAAAA,GAAUnyB,KAAK2xB,WAAL3xB,CAAiBmiB,CAAjBniB,EAA0BmZ,CAA1BnZ,EAAmC4V,CAAnC5V,CAFVmiB,EAKAiQ,CAAAA,GAAY/tB,MAAAA,CAAOC,IAAPD,CAAY8tB,CAAZ9tB,EAAqBoV,GAArBpV,CAAyB,UAAA,CAAA,EAAA;AAAO,qBAAA,CAAA,CAAQkZ,CAAR,CAAA,CAAayE,EAAb;AAAaA,aAA7C3d,CALZ8d,EAMAkQ,CAAAA,GACFhuB,MAAAA,CAAOC,IAAPD,CAAYsR,CAAZtR,EAAoBoV,GAApBpV,CAAwB,UAAA,CAAA,EAAA;AAAO,qBAAA,CAAA,CAAOkZ,CAAP,CAAA,CAAY9D,GAAZ,CAAgB,UAAA,CAAA,EAAA;AAAS,uBAAA,CAAA,CAAMuI,EAAN;AAAMA,eAA/B,CAAA;AAA+BA,aAA9D3d,CAPE8d,EAQAmQ,CAAAA,GAAAA,GAAc9V,MAAd8V,CAAqBv0B,KAArBu0B,CAAqBv0B,EAArBu0B,EAA+BD,CAA/BC,CARAnQ,EASN9d,MAAAA,CAAOC,IAAPD,CAAY8d,CAAZ9d,EAAqBiZ,OAArBjZ,CAA6B,UAAA,CAAA,EAAA;AACP8d,cAAAA,CAAAA,CAAQ5E,CAAR4E,CAAAA,CACR7E,OADQ6E,CACA,UAAA,CAAA,EAAA;AACdtP,gBAAAA,CAAAA,IAAAA,CAA4C,CAA5CA,KAAUuf,CAAAA,CAAUN,OAAVM,CAAkBvf,CAAAA,CAAOmP,EAAzBoQ,CAAVvf,IAAmCmP,CACF,CADEA,KACnCsQ,CAAAA,CAASR,OAATQ,CAAiBzf,CAAAA,CAAOmP,EAAxBsQ,CADAzf,IACwBmP,CACe,CADfA,KACxB9E,CAAAA,CAAKiT,SAALjT,CAAe4U,OAAf5U,CAAuBrK,CAAAA,CAAOmP,EAA9B9E,CAFArK,IAGFA,CAAAA,CAAOuP,OAAPvP,EAHEA;AAGKuP,eALSD;AAKTC,aANb/d,CATM8d,EAeOC,CAAAA,CAAAA,EAIN+P,CAJM/P,CAIb;AA7B0CxM;AA6BnCuc,OA7BmCvc,CAAAA;AA6BnCuc,KA7BmCvc,CAAAA;AA6BnCuc,GAtOT9tB,EA+Oc4rB,CAAAA,CAAAA,SAAAA,CAAAA,sBAAAA,GAAd,UACIta,CADJ,EAC6BwD,CAD7B,EAEIgY,CAFJ,EAEIA;AAAAA,WAAAA,SAAAA,CAAAA,IAAAA,EAAAA,KAAAA,CAAAA,EAAAA,KAAAA,CAAAA,EAAAA,YAAAA;AAAAA,UAAAA,CAAAA;AAAAA,UAAAA,CAAAA;AAAAA,UAAAA,CAAAA;AAAAA,UAAAA,CAAAA;AAAAA,UAAAA,CAAAA;AAAAA,UAAAA,CAAAA;AAAAA,UAAAA,CAAAA;AAAAA,UAAAA,CAAAA;AAAAA,UAAAA,CAAAA,GAAAA,IAAAA;AAAAA,aAAAA,WAAAA,CAAAA,IAAAA,EAAAA,UAAAA,CAAAA,EAAAA;AAAAA,gBAAAA,CAAAA,CAAAA,KAAAA;AAAAA,eAAAA,CAAAA;AACI1B,YAAAA,CAAAA,GAAQprB,MAAAA,CAAOC,IAAPD,CAAYsR,CAAZtR,CAARorB,EACA8C,CAAAA,GAAa9C,CAAAA,CAAMhW,GAANgW,CAAU,UAAA,CAAA,EAAA;AAAQ,qBAAA,CAAA,CAAKzT,KAAL,CAAWiB,KAAX,CAAiBhT,CAAjB,CAAA;AAAiBA,aAAnCwlB,CADbA,EAEAjlB,CAAAA,GACE+nB,CAAAA,CAAAA,MAAAA,CAAevyB,KAAKgc,KAALhc,CAAWgd,OAA1BuV,EAAmC9Y,GAAnC8Y,CAAuC,UAAA,CAAA,EAAA;AACzC,qBAAA;AAAQxqB,gBAAAA,IAAAA,EAAAA,CAAR;AAAcwnB,gBAAAA,QAAAA,EAAUpW,CAAAA,CAAQqZ;AAAhC,eAAA;AAAgCA,aAD9BD,CAHF9C,EAMAvW,CAAAA,GAAAA,QAAAA,CAAAA,EAAAA,EAAgBlZ,KAAKmvB,SAArBjW,EAAmCvD,CAAnCuD,CANAuW,EAOA+B,CAAAA,GAAAA,EAPA/B,EAQA6B,CAAAA,GAAgBtxB,KAAKuxB,kBAALvxB,CAAwBkZ,CAAxBlZ,CARhByvB,EASAgD,CAAAA,GAAAA,EATAhD,EASAgD,CAAAA,CAAAA,KAAAA,GAAAA,CATAhD;;AASAgD,eAAAA,CAAAA;AAAAA,mBACCjoB,CAAAA,CAAMjN,MAANiN,GAAe,CAAfA,IACCkoB,CAAAA,GAAW1yB,KAAK2yB,YAAL3yB,CACbuyB,CADavyB,EACDwK,CADCxK,EACMmZ,CADNnZ,EACekZ,CADflZ,EAC0ByyB,CAD1BzyB,EACiCsxB,CADjCtxB,EAEbmxB,CAFanxB,EAEAwxB,CAFAxxB,CAAX0yB,EAEWlB,CAAAA,CAAAA,EACX7zB,OAAAA,CAAQk1B,GAARl1B,CAAY+0B,CAAZ/0B,CADW6zB,CAHZhnB,IAIakoB,CAAAA,CAAAA,EAAAA,CAAAA,CALdD;;AAKcC,eAAAA,CAAAA;AAAAA,mBAAlBE,CAAAA,CAAAA,IAAAA,IAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAkBF;;AAAlBE,eAAAA,CAAAA;AAGF,mBAAA,CAAA,CAAA,EAAO1Z,CAAP,CAAA;AAlBEiY;AAkBKjY,OAlBLiY,CAAAA;AAkBKjY,KAlBLiY,CAAAA;AAkBKjY,GAnQT7U,EAsQQ4rB,CAAAA,CAAAA,SAAAA,CAAAA,YAAAA,GAAR,UACIsC,CADJ,EACwB/nB,CADxB,EACmD2O,CADnD,EAEID,CAFJ,EAEgCuZ,CAFhC,EAGInB,CAHJ,EAGgCH,CAHhC,EAIIK,CAJJ,EAIIA;AAEF,SANF,IAAA,CAAA,GAAA,IAAA,EAKQkB,CAAAA,GAAAA,EALR,EAKQA,CAAAA,GAAAA,aAAAA;AAEJ,UAAMI,CAAAA,GAAOtoB,CAAAA,CAAMqmB,GAANrmB,EAAb;AACA2O,MAAAA,CAAAA,CAAQqZ,cAARrZ,GAAyB2Z,CAAAA,CAAKvD,QAA9BpW;AACA,UAAIU,CAAAA,GAAW,EAAf;;AAUA,UANqB,YAAjBiZ,CAAAA,CAAK/qB,IAAL+qB,CAAUvf,EAAO,IACjBoL,aAAAA,CAAc,YAAdA,EAA4BmU,CAAAA,CAAK/qB,IAAjC4W,EAAuCzF,CAAvCyF,EAAkDxF,CAAlDwF,CADiB,KAElB9E,CAAAA,GAAAA,mBAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAFkB,GAElBA,CAIoC,CAJpCA,KAIC0Y,CAAAA,CAAWT,OAAXS,CAAmBO,CAAAA,CAAK/qB,IAAxBwqB,CAAJ,EAA0C;AACxC,YAAMpQ,CAAAA,GAAU1D,YAAAA,CAAUqU,CAAAA,CAAK/qB,IAAf0W,EAAqBvF,CAArBuF,EAAgCtF,CAAhCsF,CAAhB;AACK5E,QAAAA,CAAAA,KACFA,CAAAA,GAAAA,mBAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CADEA,CAAAA;AAIL,YAAMkZ,CAAAA,GAAiB5Z,CAAAA,CAAQqZ,cAA/B;AACIrQ,QAAAA,CAAAA,YAAmBxkB,OAAnBwkB,GACFuQ,CAAAA,CAAStzB,IAATszB,CAAcvQ,CAAAA,CAAQ6Q,IAAR7Q,CAAa,UAAA,CAAA,EAAA;AAOzB,iBANAjJ,CAAAA,CAAUW,CAAVX,CAAAA,GAAsBha,CAAtBga,EACAC,CAAAA,CAAQqZ,cAARrZ,GAAyB4Z,CADzB7Z,EAEAgE,CAAAA,CAAKwU,sBAALxU,CACIrD,CADJqD,EACc4V,CAAAA,CAAK/qB,IADnBmV,EACyBhE,CADzBgE,EACoC/D,CADpC+D,EAC6CoU,CAD7CpU,EAEIiU,CAFJjU,EAEiBsU,CAFjBtU,CAFAhE,EAKAgE,CAAAA,CAAK+V,iBAAL/V,CAAuB4V,CAAAA,CAAK/qB,IAA5BmV,EAAkC1S,CAAlC0S,EAAyC/D,CAAzC+D,EAAkDhE,CAAlDgE,EAA6DuV,CAA7DvV,CALAhE,EAMOha,CAAP;AAAOA,SAPKijB,CAAduQ,CADEvQ,IAWFjJ,CAAAA,CAAUW,CAAVX,CAAAA,GAAsBiJ,CAAtBjJ,EACAga,CAAAA,CAAKxB,sBAALwB,CACIrZ,CADJqZ,EACcJ,CAAAA,CAAK/qB,IADnBmrB,EACyBha,CADzBga,EACoC/Z,CADpC+Z,EAC6C5B,CAD7C4B,EAEI/B,CAFJ+B,EAEiB1B,CAFjB0B,CADAha,EAIAga,CAAAA,CAAKD,iBAALC,CAAuBJ,CAAAA,CAAK/qB,IAA5BmrB,EAAkC1oB,CAAlC0oB,EAAyC/Z,CAAzC+Z,EAAkDha,CAAlDga,EAA6DT,CAA7DS,CAfE/Q;AAe2DsQ,OAtBjE,MAyBES,CAAAA,CAAKD,iBAALC,CAAuBJ,CAAAA,CAAK/qB,IAA5BmrB,EAAkC1oB,CAAlC0oB,EAAyC/Z,CAAzC+Z,EAAkDha,CAAlDga,EAA6DT,CAA7DS;AAA6DT,KA5CnE,EA4CmEA,CAAAA,GAAAA,IAtCjE,EAAOjoB,CAAAA,CAAMjN,MAANiN,GAAe,CAAtB;AAAsB,MAAA,CAAA;AAAtB;;AAyCA,WAAOkoB,CAAP;AAAOA,GArTTruB,EAwTQ4rB,CAAAA,CAAAA,SAAAA,CAAAA,iBAAAA,GAAR,UACIloB,CADJ,EACgByC,CADhB,EAC2C2O,CAD3C,EAEID,CAFJ,EAEgCuZ,CAFhC,EAEgCA;AAC9B1qB,IAAAA,CAAAA,CAAKyV,QAALzV,CAAcuV,OAAdvV,CAAsB,UAAC+oB,CAAD,EAACA;AACd,UAAA,CAAA,GAAA,mBAAA,CAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACF2B,MAAAA,CAAAA,CAAM5Y,CAAN4Y,CAAAA,KAEkB,YAAjB3B,CAAAA,CAAUvd,EAAO,GACfud,CAAAA,CAAUvX,UAAVuX,CAAqBlU,IAArBkU,CAA0B,UAAA,CAAA,EAAA;AACxB,eAAA,CAAA,CAASxX,SAAAA,CAAUrP,CAAVqP,EAAgBJ,CAAhBI,EAA2BH,CAA3BG,CAAT;AAAoCH,OADtC2X,MAGF2B,CAAAA,CAAM5Y,CAAN4Y,CAAAA,GAAM5Y,CAAY,CAAlB4Y,EACAjoB,CAAAA,CAAMpL,IAANoL,CAAMpL;AAAMmwB,QAAAA,QAAAA,EAAUpW,CAAAA,CAAQqZ,cAAxBpzB;AAAwC2I,QAAAA,IAAAA,EAAM+oB;AAA9C1xB,OAANoL,CAJEsmB,CADe,GAQbA,CAAAA,CAAUvX,UAAVuX,CAAqBC,KAArBD,CAA2B,UAAA,CAAA,EAAA;AACzB,eAAA,CAAA,CAASxX,SAAAA,CAAUrP,CAAVqP,EAAgBJ,CAAhBI,EAA2BH,CAA3BG,CAAT;AAAoCH,OADtC2X,MAGN2B,CAAAA,CAAM5Y,CAAN4Y,CAAAA,GAAM5Y,CAAY,CAAlB4Y,EACAjoB,CAAAA,CAAMpL,IAANoL,CAAMpL;AAAMmwB,QAAAA,QAAAA,EAAUpW,CAAAA,CAAQqZ,cAAxBpzB;AAAwC2I,QAAAA,IAAAA,EAAM+oB;AAA9C1xB,OAANoL,CAJMsmB,CAVL2B;AAcmD3B,KAhB1D/oB;AAgB0D+oB,GA3U5DzsB,EAiVQ4rB,CAAAA,CAAAA,SAAAA,CAAAA,gBAAAA,GAAR,UAAyBra,CAAzB,EAAyBA;AAIvB,WAAA,CAHIA,CAGJ,IAHiBA,CAAAA,YAAmBvY,KAGpC,KAFEuY,CAAAA,GAAAA,CAAWA,CAAXA,CAEF,GAAQA,CAAAA,IAAW5V,KAAKgc,KAALhc,CAAW4V,OAAX5V,CAAmByZ,GAAnBzZ,CAAuB,UAAA,CAAA,EAAA;AAAQ,aAAA,CAAA,CAAKiK,IAAL;AAAKA,KAApCjK,CAAnB;AAAuDiK,GArVzD5F,EAwVQ4rB,CAAAA,CAAAA,SAAAA,CAAAA,WAAAA,GAAR,UACI/W,CADJ,EACgCC,CADhC,EAEIvD,CAFJ,EAEIA;AAEF,WADyB5V,KAAKoxB,gBAALpxB,CAAsB4V,CAAtB5V,EACD0c,MADC1c,CACsB,UAACyZ,CAAD,EAAMxP,CAAN,EAAMA;AAEnD,aADAwP,CAAAA,CAAIxP,CAAJwP,CAAAA,GAAYH,SAAAA,CAAUrP,CAAVqP,EAAgBJ,CAAhBI,EAA2BH,CAA3BG,CAAZG,EACOA,CAAP;AAAOA,KAHgBzZ,EAGhByZ,EAHgBzZ,CACzB;AAESyZ,GA9VXpV,EAoWA4rB,CAAAA,CAAAA,SAAAA,CAAAA,OAAAA,GAAAA,YAAAA;AAAAA,QAAAA,CAAAA,GAAAA,IAAAA;AACE5rB,IAAAA,MAAAA,CAAOC,IAAPD,CAAYrE,KAAKmvB,SAAjB9qB,EACKiZ,OADLjZ,CAEQ,UAAA,CAAA,EAAA;AAAO,aAAA,CAAA,CAAK8qB,SAAL,CAAe5R,CAAf,EAAoBD,OAApB,CAA4B,UAAA,CAAA,EAAA;AAAU,eAAA,CAAA,CAAO8E,OAAP,EAAA;AAAOA,OAA7C,CAAA;AAA6CA,KAF5D/d;AAE4D+d,GAvW9D/d,EA0WQ4rB,CAAAA,CAAAA,SAAAA,CAAAA,sBAAAA,GAAR,UACIta,CADJ,EAC6Bqb,CAD7B,EAC6BA;AAAAA,SAAAA,CAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CAAAA,CAAAA,GAC3BhxB,KAAK+c,YAAL/c,CAAkBsd,OAAlBtd,CAA0B,UAAA,CAAA,EAAA;AACxB,UAAMmzB,CAAAA,GAAexd,CAAAA,CAAO5N,CAAAA,CAAKkC,IAAZ0L,CAArB;;AAGA,UAAKqb,CAAAA,IAAqBmC,CAA1B,EAAA;AAIA,YAAM7f,CAAAA,GAAQ6f,CAAAA,CAAa,CAAbA,CAAd;;AACA,YAAIprB,CAAAA,CAAK3K,MAAL2K,CAAmB,KAAnBA,IAAwBA,CAAAA,CAAK3K,MAAL2K,CAAmB,KAAnBA,CAAqBnC,KAAjD,EAAwD;AACtD,cAAMwtB,CAAAA,GAAQrrB,CAAAA,CAAK3K,MAAL2K,CAAmB,KAAnBA,CAAqBnC,KAAnC;AAAA,cACMytB,CAAAA,GAAQD,CAAAA,CAAM71B,MAAN61B,KAAiB9f,CAAAA,CAAMV,KAANU,CAAY/V,MAA7B61B,IACV9f,CAAAA,CAAMV,KAANU,CAAYyd,KAAZzd,CACI,UAAChC,CAAD,EAAM7T,CAAN,EAAMA;AAAU,mBAAA,CAAkB,CAAlB,KAAA,CAAA,CAAMA,CAAN,CAAA,IAAuB21B,CAAAA,CAAM31B,CAAN21B,CAAAA,KAAiB9hB,CAAxC;AAAwCA,WAD5DgC,CAFJ;AAIAxN,UAAAA,IAAAA,CAAK2d,MAAL3d,CACIutB,CADJvtB,EAEI,wBACIiC,CAAAA,CAAKkC,IADT,GACSA,8CADT,GAEImpB,CAFJ,GAEIA,cAFJ,GAEwB9f,CAAAA,CAAMV,KAF9B,GAE8BA,GAJlC9M;AAMEiC;;AAAAA,QAAAA,CAAAA,CAAK3K,MAAL2K,CAAmB,KAAnBA,IAAwBA,CAAAA,CAAK3K,MAAL2K,CAAmB,KAAnBA,CAAqBnC,KAA7CmC,IACFjC,IAAAA,CAAK2d,MAAL3d,CACIwN,CAAAA,CAAMnB,KAANmB,KAAgBvL,CAAAA,CAAK3K,MAAL2K,CAAmB,KAAnBA,CAAqBnC,KADzCE,EAEI,wBACIiC,CAAAA,CAAKkC,IADT,GACSA,6CADT,GAEIlC,CAAAA,CAAK3K,MAAL2K,CAAmB,KAAnBA,CAAqBnC,KAFzB,GAEyBA,YAFzB,GAE2C0N,CAAAA,CAAMnB,KAJrDrM,CADEiC;AAKmDoK;AAAAA,KAzBzDnS,CAD2BgxB;AA0B8B7e,GArY3D9N,EA0YQ4rB,CAAAA,CAAAA,SAAAA,CAAAA,UAAAA,GAAR,UAAmBta,CAAnB,EAA4Cqb,CAA5C,EAA4CA;AAA5C,QAAA,CAAA,GAAA,IAAA;AAAA,SAAA,CAAA,KAAA,CAAA,KAA4CA,CAAAA,GAAAA,CAAAA,CAA5C;AACE,QAAMsC,CAAAA,GAAYjvB,MAAAA,CAAOC,IAAPD,CAAYsR,CAAZtR,CAAlB;AAAA,QACMkvB,CAAAA,GAAAA,EADN;AAAA,QAEMC,CAAAA,GAAAA,EAFN;AAIAxzB,SAAKuyB,UAALvyB,CAAgBsd,OAAhBtd,CAAwB,UAAA,CAAA,EAAA;AAAA,OACW,CADX,KAClBszB,CAAAA,CAAUxB,OAAVwB,CAAkBrpB,CAAlBqpB,CADkB,IACcC,CAAAA,CAAQn0B,IAARm0B,CAAatpB,CAAbspB,CADd;AAC2BtpB,KADnDjK,GAIAszB,CAAAA,CAAUhW,OAAVgW,CAAkB,UAAA,CAAA,EAAA;AAAA,OACuB,CADvB,KACZpW,CAAAA,CAAKqV,UAALrV,CAAgB4U,OAAhB5U,CAAwBjT,CAAxBiT,CADY,IAC0BsW,CAAAA,CAAMp0B,IAANo0B,CAAWvpB,CAAXupB,CAD1B;AACqCvpB,KADvDqpB,CAJAtzB;AAQA,QAAMyzB,CAAAA,GAAaD,CAAAA,CAAME,MAANF,CAAa,UAAA,CAAA,EAAA;AAAQ,aAAA,CAACtW,CAAAA,CAAKlB,KAALkB,CAAWD,KAAXC,CAAiBjT,CAAjBiT,CAAD;AAAkBjT,KAAvCupB,CAAnB;AAEA,QAAID,CAAAA,CAAQh2B,MAARg2B,GAAiB,CAAjBA,IAAsBvC,CAA1B,EACE,MAAM,IAAInxB,KAAJ,CACF,4DACIyzB,CADJ,GACIA,wCADJ,GACsDC,CADtD,GACsDA,IAFpD,CAAN;AAKF,QAAIC,CAAAA,CAAMj2B,MAANi2B,GAAe,CAAfA,IAAoBxC,CAAxB,EACE,MAAM,IAAInxB,KAAJ,CACF,gEACiB2zB,CADjB,GACiBA,8CADjB,GAEIxzB,KAAKuyB,UAFT,GAESA,IAHP,CAAN;AAMF,QAAIkB,CAAAA,CAAWl2B,MAAXk2B,GAAoB,CAAxB,EACE,MAAM,IAAI5zB,KAAJ,CACF,yDACU4zB,CADV,GACUA,4BAFR,CAAN;AAEcA,GAzalBpvB,EA6aQ4rB,CAAAA,CAAAA,SAAAA,CAAAA,WAAAA,GAAR,UAAoBwB,CAApB,EAA2C7b,CAA3C,EAA2CA;AACzC,QAAM+d,CAAAA,GAAoBlC,CAAAA,CAAchY,GAAdgY,CAAkB,UAAA,CAAA,EAAA;AAAQ,aAAA,CAAA,CAAKxnB,IAAL;AAAKA,KAA/BwnB,CAA1B;AAAA,QACM+B,CAAAA,GAAAA,EADN;AAMA,QAJA5d,CAAAA,CAAQ0H,OAAR1H,CAAgB,UAAA,CAAA,EAAA;AAAA,OAC2B,CAD3B,KACV+d,CAAAA,CAAkB7B,OAAlB6B,CAA0B1pB,CAA1B0pB,CADU,IAC8BH,CAAAA,CAAMp0B,IAANo0B,CAAWvpB,CAAXupB,CAD9B;AACyCvpB,KADzD2L,GAII4d,CAAAA,CAAMj2B,MAANi2B,GAAe,CAAnB,EACE,MAAM,IAAI3zB,KAAJ,CACF,gEACI2zB,CADJ,GACIA,IAFF,CAAN;AAEQA,GAvbZnvB,EAubYmvB,CAGd;AAHcA,CD5TiBxR,EA7H/B;AAAA,IEba4R,kBAAAA,GAAqB,mBFalC;AAAA,IEZaC,kBAAAA,GAAqB,uBFYlC;AAAA,IEXaC,qBAAAA,GAAwB,uBFWrC;AAAA,IEXqC,WAAA,GAAA,YAAA;AA4CnC,WAAA,CAAA,CACYI,CADZ,EACsCC,CADtC,EAEYC,CAFZ,EAEiDC,CAFjD,EAEiDA;AADrCH,SAAAA,QAAAA,GAAAA,CAAAA,EAA0BC,KAAAA,iBAAAA,GAAAA,CAA1BD,EACAE,KAAAA,aAAAA,GAAAA,CADAF,EACqCG,KAAAA,YAAAA,GAAAA,CADrCH,EApCJl0B,KAAAA,OAAAA,GAAU,KAoCNk0B;AAgMd;;AAAA,SAjOE7vB,MAAAA,CAAAA,cAAAA,CAAI0vB,CAAAA,CAAAA,SAAJ1vB,EAAI0vB,cAAJ1vB,EAAI0vB;AAAAA,IAAAA,GAAAA,EAAJ1vB,eAAAA;AACE,aAAOrE,KAAKkV,OAAZ;AAAYA,KADV6e;AACU7e,IAAAA,UAAAA,EAAAA,CAAAA,CADV6e;AACU7e,IAAAA,YAAAA,EAAAA,CAAAA;AADV6e,GAAJ1vB,GAIAA,MAAAA,CAAAA,cAAAA,CAAI0vB,CAAAA,CAAAA,SAAJ1vB,EAAI0vB,YAAJ1vB,EAAI0vB;AAAAA,IAAAA,GAAAA,EAAJ1vB,eAAAA;AACE,aAAOrE,KAAKg0B,QAALh0B,CAAcuyB,UAArB;AAAqBA,KADnBwB;AACmBxB,IAAAA,UAAAA,EAAAA,CAAAA,CADnBwB;AACmBxB,IAAAA,YAAAA,EAAAA,CAAAA;AADnBwB,GAAJ1vB,CAJAA,EAQAA,MAAAA,CAAAA,cAAAA,CAAI0vB,CAAAA,CAAAA,SAAJ1vB,EAAI0vB,aAAJ1vB,EAAI0vB;AAAAA,IAAAA,GAAAA,EAAJ1vB,eAAAA;AACE,aAAOrE,KAAKg0B,QAALh0B,CAAci0B,WAArB;AAAqBA,KADnBF;AACmBE,IAAAA,UAAAA,EAAAA,CAAAA,CADnBF;AACmBE,IAAAA,YAAAA,EAAAA,CAAAA;AADnBF,GAAJ1vB,CARAA,EAYAA,MAAAA,CAAAA,cAAAA,CAAI0vB,CAAAA,CAAAA,SAAJ1vB,EAAI0vB,QAAJ1vB,EAAI0vB;AAAAA,IAAAA,GAAAA,EAAJ1vB,eAAAA;AACE,aAAOrE,KAAKg0B,QAALh0B,CAAc2V,MAArB;AAAqBA,KADnBoe;AACmBpe,IAAAA,UAAAA,EAAAA,CAAAA,CADnBoe;AACmBpe,IAAAA,YAAAA,EAAAA,CAAAA;AADnBoe,GAAJ1vB,CAZAA,EAgBAA,MAAAA,CAAAA,cAAAA,CAAI0vB,CAAAA,CAAAA,SAAJ1vB,EAAI0vB,SAAJ1vB,EAAI0vB;AAAAA,IAAAA,GAAAA,EAAJ1vB,eAAAA;AACE,aAAOrE,KAAKg0B,QAALh0B,CAAc4V,OAArB;AAAqBA,KADnBme;AACmBne,IAAAA,UAAAA,EAAAA,CAAAA,CADnBme;AACmBne,IAAAA,YAAAA,EAAAA,CAAAA;AADnBme,GAAJ1vB,CAhBAA,EAoBAA,MAAAA,CAAAA,cAAAA,CAAI0vB,CAAAA,CAAAA,SAAJ1vB,EAAI0vB,SAAJ1vB,EAAI0vB;AAAAA,IAAAA,GAAAA,EAAJ1vB,eAAAA;AACE,aAAOrE,KAAKg0B,QAALh0B,CAAcmvB,SAArB;AAAqBA,KADnB4E;AACmB5E,IAAAA,UAAAA,EAAAA,CAAAA,CADnB4E;AACmB5E,IAAAA,YAAAA,EAAAA,CAAAA;AADnB4E,GAAJ1vB,CApBAA,EAoCQ0vB,CAAAA,CAAAA,SAAAA,CAAAA,aAAAA,GAAR,YAAA;AACE,QAAMO,CAAAA,GAAAA,CAAQt0B,KAAKk0B,QAAbI,EAAuBt0B,KAAKm0B,iBAA5BG,CAAN;AACA,QAAIt0B,KAAKo0B,aAAT,EACEp0B,KAAKu0B,OAALv0B,GAAew0B,EAAAA,CAAOC,kBAAPD,CACXF,CADWE,EACLx0B,KAAKo0B,aADAI,EACex0B,KAAKq0B,YADpBG,CAAfx0B,CADF,KAGO;AACL,UAAM00B,CAAAA,GAAWF,EAAAA,CAAOG,eAAPH,CAAuBF,CAAvBE,CAAjB;AACA,UAAwB,MAApBE,CAAAA,CAASn3B,MAAb,EAGEm3B,CAAAA,CAASt1B,IAATs1B,CAAcF,EAAAA,CAAOC,kBAAPD,CAA0BF,CAA1BE,EAAgCx0B,KAAKo0B,aAArCI,CAAdE,EAHF,KAIO,IAAIA,CAAAA,CAASn3B,MAATm3B,GAAkB,CAAtB,EACL,MAAM,IAAI70B,KAAJ,CACF,0BAAwB60B,CAAAA,CAASn3B,MAAjC,GAAiCA,2BAAjC,GAAiCA,CACxB+2B,CADwB/2B,CAAjC,GACS+2B,GAFP,CAAN;AAIFt0B,WAAKu0B,OAALv0B,GAAe00B,CAAAA,CAAS,CAATA,CAAf10B;AAAwB;AAAA,GApD5BqE,EA4DM0vB,CAAAA,CAAAA,SAAAA,CAAAA,IAAAA,GAAN,YAAA;AAAA,WAAA,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;AAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA;AAAA,aAAA,WAAA,CAAA,IAAA,EAAA,UAAA,CAAA,EAAA;AAAA,gBAAA,CAAA,CAAA,KAAA;AAAA,eAAA,CAAA;AAEE,gBADA/zB,KAAK40B,aAAL50B,IACyB,QAArBA,KAAKu0B,OAALv0B,CAAa60B,IAAjB,EACE,MAAM,IAAIh1B,KAAJ,CACF,+GADE,CAAN;AAIgB,mBAAA,CAAA,CAAA,EAAMG,KAAKu0B,OAALv0B,CAAa60B,IAAb70B,EAAN,CAAA;;AAAmB60B,eAAAA,CAAAA;AAUrC,mBAVMC,CAAAA,GAAY,CAAA,CAAA,IAAA,EAAZA,EACA9Y,CAAAA,GAAQrL,cAAAA,CAAWkD,QAAXlD,CAAoBlR,MAApBkR,CACV,IAAI7P,UAAJ,CAAeg0B,CAAAA,CAAUC,aAAzB,CADUpkB,CADRmkB,EAIN90B,KAAKkV,OAALlV,GAAkBgc,CAAAA,CAAMlU,QAANkU,CAAerI,QAAfqI,GAAerI,GAAfqI,GAA2BA,CAAAA,CAAMlU,QAANkU,CAAepI,WAJtDkhB,EAKA3F,CAAAA,GACFqF,EAAAA,CAAOQ,aAAPR,CAAqBM,CAAAA,CAAUG,UAA/BT,EAA2CM,CAAAA,CAAUI,WAArDV,CANEM,EAON90B,KAAKg0B,QAALh0B,GACI,IAAIiwB,aAAJ,CAAkB7U,eAAAA,CAAgB+Z,QAAhB/Z,CAAyBga,cAAzBha,CAAwCY,CAAxCZ,CAAlB,CARE0Z,EASN90B,KAAKg0B,QAALh0B,CAAcmvB,SAAdnvB,GAA0BA,KAAKq1B,4BAALr1B,CAAkCmvB,CAAlCnvB,CATpB80B,EASsD3F,CAAAA,CAAAA,EAAAA,CACrD,CADqDA,CAC5D;AAjBF;AAiBS,OAjBT,CAAA;AAiBS,KAjBT,CAAA;AAiBS,GA7ET9qB,EAoHA0vB,CAAAA,CAAAA,SAAAA,CAAAA,OAAAA,GAAAA,UACIpe,CADJoe,EAEIuB,CAFJvB,EAEIuB;AAEF,WAAOt1B,KAAKu1B,QAALv1B,CAAc2V,CAAd3V,EAAc2V,CAAQ,CAAtB3V,EAA4BA,KAAKi0B,WAAjCj0B,CAAP;AAAwCi0B,GAxH1C5vB,EA2HQ0vB,CAAAA,CAAAA,SAAAA,CAAAA,kBAAAA,GAAR,UAA2Bpe,CAA3B,EAA2BA;AACzB,QAAM6f,CAAAA,GAAa7f,CAAAA,YAAkB8f,MAAlB9f,GAAkB8f,CAAc9f,CAAd8f,CAAlB9f,GAA0CA,CAA7D;AACA,QAAI6f,CAAAA,CAAWj4B,MAAXi4B,KAAsBx1B,KAAKuyB,UAALvyB,CAAgBzC,MAA1C,EACE,MAAM,IAAIsC,KAAJ,CACF,sDACwBG,KAAKuyB,UAALvyB,CAAgBzC,MADxC,GACwCA,iCADxC,GAEmBi4B,CAAAA,CAAWj4B,MAF9B,GAE8BA,iBAH5B,CAAN;AAKF,WAAOyC,KAAKuyB,UAALvyB,CAAgB0c,MAAhB1c,CAAuB,UAACyZ,CAAD,EAAMU,CAAN,EAAiBzb,CAAjB,EAAiBA;AAE7C,aADA+a,CAAAA,CAAIU,CAAJV,CAAAA,GAAiB+b,CAAAA,CAAW92B,CAAX82B,CAAjB/b,EACOA,CAAP;AAAOA,KAFFzZ,EAEEyZ,EAFFzZ,CAAP;AAESyZ,GArIXpV,EAsJA0vB,CAAAA,CAAAA,SAAAA,CAAAA,OAAAA,GAAAA,UACIpe,CADJoe,EAEIne,CAFJme,EAEIne;AACF,WAAO5V,KAAKu1B,QAALv1B,CAAc2V,CAAd3V,EAAc2V,CAAQ,CAAtB3V,EAA6B4V,CAA7B5V,CAAP;AAAoC4V,GAzJtCvR,EA4JQ0vB,CAAAA,CAAAA,SAAAA,CAAAA,QAAAA,GAAR,UACIpe,CADJ,EAEIqb,CAFJ,EAE6Bpb,CAF7B,EAE6BA;AAM3B,QAAA,KAAA,CAAA,KAAA,CAAA,KANEob,CAAAA,GAAAA,CAAAA,CAMF,GAJApb,CAAAA,GAAUA,CAAAA,IAAW5V,KAAKi0B,WAI1B,EAJ0BA,CACtBte,CAAAA,YAAkB8f,MAAlB9f,IAAgCtY,KAAAA,CAAMoL,OAANpL,CAAcsY,CAAdtY,CADV42B,MAExBte,CAAAA,GAAS3V,KAAK01B,kBAAL11B,CAAwB2V,CAAxB3V,CAFei0B,CAI1B,EAAIj0B,KAAKg0B,QAALh0B,CAAc21B,kBAAd31B,IAAoCA,KAAKg0B,QAALh0B,CAAc41B,mBAAtD,EACE,MAAM,IAAI/1B,KAAJ,CACF,sFADE,CAAN;AAIF,QAAM8oB,CAAAA,GAAS3oB,KAAKg0B,QAALh0B,CAAc61B,OAAd71B,CACXA,KAAKq1B,4BAALr1B,CAAkC2V,CAAlC3V,CADWA,EACgCgxB,CADhChxB,EACkD4V,CADlD5V,CAAf;AAAA,QAEMsE,CAAAA,GAAOD,MAAAA,CAAOC,IAAPD,CAAYskB,CAAZtkB,CAFb;AAGA,WAAQhH,KAAAA,CAAMoL,OAANpL,CAAcuY,CAAdvY,KAA0BuY,CAAAA,CAAQrY,MAARqY,GAAiB,CAA3CvY,GACJuY,CAAAA,CAAQ6D,GAAR7D,CAAY,UAAA,CAAA,EAAA;AAAQ,aAAA,CAAA,CAAO7N,CAAP,CAAA;AAAOA,KAA3B6N,CADIvY,GAEJsrB,CAAAA,CAAOrkB,CAAAA,CAAK,CAALA,CAAPqkB,CAFJ;AAEgB,GA9KlBtkB,EA8LM0vB,CAAAA,CAAAA,SAAAA,CAAAA,YAAAA,GAAN,UACIpe,CADJ,EAEIC,CAFJ,EAEIA;AAAAA,WAAAA,SAAAA,CAAAA,IAAAA,EAAAA,KAAAA,CAAAA,EAAAA,KAAAA,CAAAA,EAAAA,YAAAA;AAAAA,UAAAA,CAAAA,EAAAA,CAAAA;AAAAA,aAAAA,WAAAA,CAAAA,IAAAA,EAAAA,UAAAA,CAAAA,EAAAA;AAAAA,gBAAAA,CAAAA,CAAAA,KAAAA;AAAAA,eAAAA,CAAAA;AACF,gBAAA,CAAM5V,KAAKg0B,QAALh0B,CAAc21B,kBAApB,IAAoBA,CACd31B,KAAKg0B,QAALh0B,CAAc41B,mBADpB,EAEE,MAAM,IAAI/1B,KAAJ,CACF,iHADE,CAAN;AASa,mBALf+V,CAAAA,GAAUA,CAAAA,IAAW5V,KAAKi0B,WAA1Bre,EAA0Bqe,CACtBte,CAAAA,YAAkB8f,MAAlB9f,IAAgCtY,KAAAA,CAAMoL,OAANpL,CAAcsY,CAAdtY,CADV42B,MAExBte,CAAAA,GAAS3V,KAAK01B,kBAAL11B,CAAwB2V,CAAxB3V,CAFei0B,CAA1Bre,EAEmCD,CAAAA,CAAAA,EAGd3V,KAAKg0B,QAALh0B,CAAc81B,YAAd91B,CACjBA,KAAKq1B,4BAALr1B,CAAkC2V,CAAlC3V,CADiBA,EAC0B4V,CAD1B5V,CAHc2V,CAGpB;;AACgCC,eAAAA,CAAAA;AAE/C,mBAHM+S,CAAAA,GAAS,CAAA,CAAA,IAAA,EAATA,EAEArkB,CAAAA,GAAOD,MAAAA,CAAOC,IAAPD,CAAYskB,CAAZtkB,CAFPskB,EAEmBA,CAAAA,CAAAA,EAClBtrB,KAAAA,CAAMoL,OAANpL,CAAcuY,CAAdvY,KAA0BuY,CAAAA,CAAQrY,MAARqY,GAAiB,CAA3CvY,GACHuY,CAAAA,CAAQ6D,GAAR7D,CAAY,UAAA,CAAA,EAAA;AAAQ,qBAAA,CAAA,CAAO7N,CAAP,CAAA;AAAOA,aAA3B6N,CADGvY,GAEHsrB,CAAAA,CAAOrkB,CAAAA,CAAK,CAALA,CAAPqkB,CAHqBA,CACzB;AAfE/S;AAiBc,OAjBdA,CAAAA;AAiBc,KAjBdA,CAAAA;AAiBc,GAjNlBvR,EAoNQ0vB,CAAAA,CAAAA,SAAAA,CAAAA,4BAAAA,GAAR,UAAqCta,CAArC,EAAqCA;AAEnC,WAAOpV,MAAAA,CAAOC,IAAPD,CAAYoV,CAAZpV,EAAiBqY,MAAjBrY,CAAwB,UAAC0xB,CAAD,EAA0BxY,CAA1B,EAA0BA;AAEvD,aADAwY,CAAAA,CAAOxY,CAAPwY,CAAAA,GAAOxY,CAAQ9D,CAAAA,CAAI8D,CAAJ9D,CAAR8D,CAAPwY,EACOA,CAAP;AAAOA,KAFF1xB,EAEE0xB,EAFF1xB,CAAP;AAES0xB,GAxNX1xB,EA8NA0vB,CAAAA,CAAAA,SAAAA,CAAAA,OAAAA,GAAAA,YAAAA;AACE/zB,SAAKg0B,QAALh0B,CAAcoiB,OAAdpiB;AAAcoiB,GA/NhB/d,EA+NgB+d,CAElB;AAFkBA,CA3OmB,EFWrC;;AEgOkBA,SAAAA,eAAAA,CA+Bd8R,CA/Bc9R,EA+BI4T,CA/BJ5T,EAgCdgS,CAhCchS,EAgCdgS;AAAAA,SAAAA,SAAAA,CAAAA,IAAAA,EAAAA,KAAAA,CAAAA,EAAAA,KAAAA,CAAAA,EAAAA,YAAAA;AAAAA,QAAAA,CAAAA;AAAAA,WAAAA,WAAAA,CAAAA,IAAAA,EAAAA,UAAAA,CAAAA,EAAAA;AAAAA,cAAAA,CAAAA,CAAAA,KAAAA;AAAAA,aAAAA,CAAAA;AAEF,iBAAA,CAAA,CAAA,EAAA,CADM6B,CAAAA,GAAQ,IAAIlC,WAAJ,CAAgBG,CAAhB,EAA0B8B,CAA1B,EAA8C5B,CAA9C,CACd,EAAYS,IAAZ,EAAA,CAAA;;AAAYA,aAAAA,CAAAA;AACZ,iBADA,CAAA,CAAA,IAAA,IAAA,CAAA,CAAA,EACOoB,CADP,CACA;AAHE7B;AAGK6B,KAHL7B,CAAAA;AAGK6B,GAHL7B,CAAAA;AA0BJ;;AAAA,SAAA,eAAA,CACI8B,CADJ,EAC4B9B,CAD5B,EAC4BA;AAAAA,SAAAA,SAAAA,CAAAA,IAAAA,EAAAA,KAAAA,CAAAA,EAAAA,KAAAA,CAAAA,EAAAA,YAAAA;AAAAA,WAAAA,WAAAA,CAAAA,IAAAA,EAAAA,UAAAA,CAAAA,EAAAA;AAI1B,aAHK8B,CAAAA,CAAeC,QAAfD,CAAwB,GAAxBA,MACHA,CAAAA,IAAkC,GAD/BA,GAC+B,CAAA,CAAA,EAE7BE,eAAAA,CACH,KAAGF,CAAH,GAAoBrC,kBAApB,GAAyCD,kBADtCwC,EAEH,KAAGF,CAAH,GAAoBpC,qBAApB,GAA4CF,kBAFzCwC,EAGHhC,CAHGgC,CAF6B,CAEpC;AAGIhC,KAPsBA,CAAAA;AAOtBA,GAPsBA,CAAAA;AAOtBA;;AAAAA,ICrUAlf,OAAAA,GAAU,ODqUVkf;ACrUU,SAAA,WAAA,EAAA,eAAA,EAAA,eAAA,EAAA,OAAA,IAAA,iBAAA","sourcesContent":["\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\nmodule.exports = LongBits;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n/**\r\n * Constructs new long bits.\r\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\r\n * @memberof util\r\n * @constructor\r\n * @param {number} lo Low 32 bits, unsigned\r\n * @param {number} hi High 32 bits, unsigned\r\n */\r\nfunction LongBits(lo, hi) {\r\n\r\n    // note that the casts below are theoretically unnecessary as of today, but older statically\r\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\r\n\r\n    /**\r\n     * Low bits.\r\n     * @type {number}\r\n     */\r\n    this.lo = lo >>> 0;\r\n\r\n    /**\r\n     * High bits.\r\n     * @type {number}\r\n     */\r\n    this.hi = hi >>> 0;\r\n}\r\n\r\n/**\r\n * Zero bits.\r\n * @memberof util.LongBits\r\n * @type {util.LongBits}\r\n */\r\nvar zero = LongBits.zero = new LongBits(0, 0);\r\n\r\nzero.toNumber = function() { return 0; };\r\nzero.zzEncode = zero.zzDecode = function() { return this; };\r\nzero.length = function() { return 1; };\r\n\r\n/**\r\n * Zero hash.\r\n * @memberof util.LongBits\r\n * @type {string}\r\n */\r\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\r\n\r\n/**\r\n * Constructs new long bits from the specified number.\r\n * @param {number} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.fromNumber = function fromNumber(value) {\r\n    if (value === 0)\r\n        return zero;\r\n    var sign = value < 0;\r\n    if (sign)\r\n        value = -value;\r\n    var lo = value >>> 0,\r\n        hi = (value - lo) / 4294967296 >>> 0;\r\n    if (sign) {\r\n        hi = ~hi >>> 0;\r\n        lo = ~lo >>> 0;\r\n        if (++lo > 4294967295) {\r\n            lo = 0;\r\n            if (++hi > 4294967295)\r\n                hi = 0;\r\n        }\r\n    }\r\n    return new LongBits(lo, hi);\r\n};\r\n\r\n/**\r\n * Constructs new long bits from a number, long or string.\r\n * @param {Long|number|string} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.from = function from(value) {\r\n    if (typeof value === \"number\")\r\n        return LongBits.fromNumber(value);\r\n    if (util.isString(value)) {\r\n        /* istanbul ignore else */\r\n        if (util.Long)\r\n            value = util.Long.fromString(value);\r\n        else\r\n            return LongBits.fromNumber(parseInt(value, 10));\r\n    }\r\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a possibly unsafe JavaScript number.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {number} Possibly unsafe number\r\n */\r\nLongBits.prototype.toNumber = function toNumber(unsigned) {\r\n    if (!unsigned && this.hi >>> 31) {\r\n        var lo = ~this.lo + 1 >>> 0,\r\n            hi = ~this.hi     >>> 0;\r\n        if (!lo)\r\n            hi = hi + 1 >>> 0;\r\n        return -(lo + hi * 4294967296);\r\n    }\r\n    return this.lo + this.hi * 4294967296;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a long.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long} Long\r\n */\r\nLongBits.prototype.toLong = function toLong(unsigned) {\r\n    return util.Long\r\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\r\n        /* istanbul ignore next */\r\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\r\n};\r\n\r\nvar charCodeAt = String.prototype.charCodeAt;\r\n\r\n/**\r\n * Constructs new long bits from the specified 8 characters long hash.\r\n * @param {string} hash Hash\r\n * @returns {util.LongBits} Bits\r\n */\r\nLongBits.fromHash = function fromHash(hash) {\r\n    if (hash === zeroHash)\r\n        return zero;\r\n    return new LongBits(\r\n        ( charCodeAt.call(hash, 0)\r\n        | charCodeAt.call(hash, 1) << 8\r\n        | charCodeAt.call(hash, 2) << 16\r\n        | charCodeAt.call(hash, 3) << 24) >>> 0\r\n    ,\r\n        ( charCodeAt.call(hash, 4)\r\n        | charCodeAt.call(hash, 5) << 8\r\n        | charCodeAt.call(hash, 6) << 16\r\n        | charCodeAt.call(hash, 7) << 24) >>> 0\r\n    );\r\n};\r\n\r\n/**\r\n * Converts this long bits to a 8 characters long hash.\r\n * @returns {string} Hash\r\n */\r\nLongBits.prototype.toHash = function toHash() {\r\n    return String.fromCharCode(\r\n        this.lo        & 255,\r\n        this.lo >>> 8  & 255,\r\n        this.lo >>> 16 & 255,\r\n        this.lo >>> 24      ,\r\n        this.hi        & 255,\r\n        this.hi >>> 8  & 255,\r\n        this.hi >>> 16 & 255,\r\n        this.hi >>> 24\r\n    );\r\n};\r\n\r\n/**\r\n * Zig-zag encodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzEncode = function zzEncode() {\r\n    var mask =   this.hi >> 31;\r\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\r\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Zig-zag decodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzDecode = function zzDecode() {\r\n    var mask = -(this.lo & 1);\r\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\r\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Calculates the length of this longbits when encoded as a varint.\r\n * @returns {number} Length\r\n */\r\nLongBits.prototype.length = function length() {\r\n    var part0 =  this.lo,\r\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\r\n        part2 =  this.hi >>> 24;\r\n    return part2 === 0\r\n         ? part1 === 0\r\n           ? part0 < 16384\r\n             ? part0 < 128 ? 1 : 2\r\n             : part0 < 2097152 ? 3 : 4\r\n           : part1 < 16384\r\n             ? part1 < 128 ? 5 : 6\r\n             : part1 < 2097152 ? 7 : 8\r\n         : part2 < 128 ? 9 : 10;\r\n};\r\n","\"use strict\";\r\nvar util = exports;\r\n\r\n// used to return a Promise where callback is omitted\r\nutil.asPromise = require(\"@protobufjs/aspromise\");\r\n\r\n// converts to / from base64 encoded strings\r\nutil.base64 = require(\"@protobufjs/base64\");\r\n\r\n// base class of rpc.Service\r\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\r\n\r\n// float handling accross browsers\r\nutil.float = require(\"@protobufjs/float\");\r\n\r\n// requires modules optionally and hides the call from bundlers\r\nutil.inquire = require(\"@protobufjs/inquire\");\r\n\r\n// converts to / from utf8 encoded strings\r\nutil.utf8 = require(\"@protobufjs/utf8\");\r\n\r\n// provides a node-like buffer pool in the browser\r\nutil.pool = require(\"@protobufjs/pool\");\r\n\r\n// utility to work with the low and high bits of a 64 bit value\r\nutil.LongBits = require(\"./longbits\");\r\n\r\n/**\r\n * An immuable empty array.\r\n * @memberof util\r\n * @type {Array.<*>}\r\n * @const\r\n */\r\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\r\n\r\n/**\r\n * An immutable empty object.\r\n * @type {Object}\r\n * @const\r\n */\r\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\r\n\r\n/**\r\n * Whether running within node or not.\r\n * @memberof util\r\n * @type {boolean}\r\n * @const\r\n */\r\nutil.isNode = Boolean(global.process && global.process.versions && global.process.versions.node);\r\n\r\n/**\r\n * Tests if the specified value is an integer.\r\n * @function\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is an integer\r\n */\r\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\r\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a string.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a string\r\n */\r\nutil.isString = function isString(value) {\r\n    return typeof value === \"string\" || value instanceof String;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a non-null object.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a non-null object\r\n */\r\nutil.isObject = function isObject(value) {\r\n    return value && typeof value === \"object\";\r\n};\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * This is an alias of {@link util.isSet}.\r\n * @function\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isset =\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isSet = function isSet(obj, prop) {\r\n    var value = obj[prop];\r\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\r\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Any compatible Buffer instance.\r\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\r\n * @interface Buffer\r\n * @extends Uint8Array\r\n */\r\n\r\n/**\r\n * Node's Buffer class if available.\r\n * @type {Constructor<Buffer>}\r\n */\r\nutil.Buffer = (function() {\r\n    try {\r\n        var Buffer = util.inquire(\"buffer\").Buffer;\r\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\r\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\r\n    } catch (e) {\r\n        /* istanbul ignore next */\r\n        return null;\r\n    }\r\n})();\r\n\r\n// Internal alias of or polyfull for Buffer.from.\r\nutil._Buffer_from = null;\r\n\r\n// Internal alias of or polyfill for Buffer.allocUnsafe.\r\nutil._Buffer_allocUnsafe = null;\r\n\r\n/**\r\n * Creates a new buffer of whatever type supported by the environment.\r\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\r\n * @returns {Uint8Array|Buffer} Buffer\r\n */\r\nutil.newBuffer = function newBuffer(sizeOrArray) {\r\n    /* istanbul ignore next */\r\n    return typeof sizeOrArray === \"number\"\r\n        ? util.Buffer\r\n            ? util._Buffer_allocUnsafe(sizeOrArray)\r\n            : new util.Array(sizeOrArray)\r\n        : util.Buffer\r\n            ? util._Buffer_from(sizeOrArray)\r\n            : typeof Uint8Array === \"undefined\"\r\n                ? sizeOrArray\r\n                : new Uint8Array(sizeOrArray);\r\n};\r\n\r\n/**\r\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\r\n * @type {Constructor<Uint8Array>}\r\n */\r\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\r\n\r\n/**\r\n * Any compatible Long instance.\r\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\r\n * @interface Long\r\n * @property {number} low Low bits\r\n * @property {number} high High bits\r\n * @property {boolean} unsigned Whether unsigned or not\r\n */\r\n\r\n/**\r\n * Long.js's Long class if available.\r\n * @type {Constructor<Long>}\r\n */\r\nutil.Long = /* istanbul ignore next */ global.dcodeIO && /* istanbul ignore next */ global.dcodeIO.Long || util.inquire(\"long\");\r\n\r\n/**\r\n * Regular expression used to verify 2 bit (`bool`) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key2Re = /^true|false|0|1$/;\r\n\r\n/**\r\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\r\n\r\n/**\r\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\r\n\r\n/**\r\n * Converts a number or long to an 8 characters long hash string.\r\n * @param {Long|number} value Value to convert\r\n * @returns {string} Hash\r\n */\r\nutil.longToHash = function longToHash(value) {\r\n    return value\r\n        ? util.LongBits.from(value).toHash()\r\n        : util.LongBits.zeroHash;\r\n};\r\n\r\n/**\r\n * Converts an 8 characters long hash string to a long or number.\r\n * @param {string} hash Hash\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long|number} Original value\r\n */\r\nutil.longFromHash = function longFromHash(hash, unsigned) {\r\n    var bits = util.LongBits.fromHash(hash);\r\n    if (util.Long)\r\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\r\n    return bits.toNumber(Boolean(unsigned));\r\n};\r\n\r\n/**\r\n * Merges the properties of the source object into the destination object.\r\n * @memberof util\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {Object.<string,*>} src Source object\r\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nfunction merge(dst, src, ifNotSet) { // used by converters\r\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\r\n        if (dst[keys[i]] === undefined || !ifNotSet)\r\n            dst[keys[i]] = src[keys[i]];\r\n    return dst;\r\n}\r\n\r\nutil.merge = merge;\r\n\r\n/**\r\n * Converts the first character of a string to lower case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.lcFirst = function lcFirst(str) {\r\n    return str.charAt(0).toLowerCase() + str.substring(1);\r\n};\r\n\r\n/**\r\n * Creates a custom error constructor.\r\n * @memberof util\r\n * @param {string} name Error name\r\n * @returns {Constructor<Error>} Custom error constructor\r\n */\r\nfunction newError(name) {\r\n\r\n    function CustomError(message, properties) {\r\n\r\n        if (!(this instanceof CustomError))\r\n            return new CustomError(message, properties);\r\n\r\n        // Error.call(this, message);\r\n        // ^ just returns a new error instance because the ctor can be called as a function\r\n\r\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\r\n\r\n        /* istanbul ignore next */\r\n        if (Error.captureStackTrace) // node\r\n            Error.captureStackTrace(this, CustomError);\r\n        else\r\n            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });\r\n\r\n        if (properties)\r\n            merge(this, properties);\r\n    }\r\n\r\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\r\n\r\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\r\n\r\n    CustomError.prototype.toString = function toString() {\r\n        return this.name + \": \" + this.message;\r\n    };\r\n\r\n    return CustomError;\r\n}\r\n\r\nutil.newError = newError;\r\n\r\n/**\r\n * Constructs a new protocol error.\r\n * @classdesc Error subclass indicating a protocol specifc error.\r\n * @memberof util\r\n * @extends Error\r\n * @template T extends Message<T>\r\n * @constructor\r\n * @param {string} message Error message\r\n * @param {Object.<string,*>} [properties] Additional properties\r\n * @example\r\n * try {\r\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\r\n * } catch (e) {\r\n *     if (e instanceof ProtocolError && e.instance)\r\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\r\n * }\r\n */\r\nutil.ProtocolError = newError(\"ProtocolError\");\r\n\r\n/**\r\n * So far decoded message instance.\r\n * @name util.ProtocolError#instance\r\n * @type {Message<T>}\r\n */\r\n\r\n/**\r\n * A OneOf getter as returned by {@link util.oneOfGetter}.\r\n * @typedef OneOfGetter\r\n * @type {function}\r\n * @returns {string|undefined} Set field name, if any\r\n */\r\n\r\n/**\r\n * Builds a getter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfGetter} Unbound getter\r\n */\r\nutil.oneOfGetter = function getOneOf(fieldNames) {\r\n    var fieldMap = {};\r\n    for (var i = 0; i < fieldNames.length; ++i)\r\n        fieldMap[fieldNames[i]] = 1;\r\n\r\n    /**\r\n     * @returns {string|undefined} Set field name, if any\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function() { // eslint-disable-line consistent-return\r\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\r\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\r\n                return keys[i];\r\n    };\r\n};\r\n\r\n/**\r\n * A OneOf setter as returned by {@link util.oneOfSetter}.\r\n * @typedef OneOfSetter\r\n * @type {function}\r\n * @param {string|undefined} value Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Builds a setter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfSetter} Unbound setter\r\n */\r\nutil.oneOfSetter = function setOneOf(fieldNames) {\r\n\r\n    /**\r\n     * @param {string} name Field name\r\n     * @returns {undefined}\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function(name) {\r\n        for (var i = 0; i < fieldNames.length; ++i)\r\n            if (fieldNames[i] !== name)\r\n                delete this[fieldNames[i]];\r\n    };\r\n};\r\n\r\n/**\r\n * Default conversion options used for {@link Message#toJSON} implementations.\r\n *\r\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\r\n *\r\n * - Longs become strings\r\n * - Enums become string keys\r\n * - Bytes become base64 encoded strings\r\n * - (Sub-)Messages become plain objects\r\n * - Maps become plain objects with all string keys\r\n * - Repeated fields become arrays\r\n * - NaN and Infinity for float and double fields become strings\r\n *\r\n * @type {IConversionOptions}\r\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\r\n */\r\nutil.toJSONOptions = {\r\n    longs: String,\r\n    enums: String,\r\n    bytes: String,\r\n    json: true\r\n};\r\n\r\nutil._configure = function() {\r\n    var Buffer = util.Buffer;\r\n    /* istanbul ignore if */\r\n    if (!Buffer) {\r\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\r\n        return;\r\n    }\r\n    // because node 4.x buffers are incompatible & immutable\r\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\r\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\r\n        /* istanbul ignore next */\r\n        function Buffer_from(value, encoding) {\r\n            return new Buffer(value, encoding);\r\n        };\r\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\r\n        /* istanbul ignore next */\r\n        function Buffer_allocUnsafe(size) {\r\n            return new Buffer(size);\r\n        };\r\n};\r\n","\"use strict\";\r\nmodule.exports = Writer;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferWriter; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    base64    = util.base64,\r\n    utf8      = util.utf8;\r\n\r\n/**\r\n * Constructs a new writer operation instance.\r\n * @classdesc Scheduled writer operation.\r\n * @constructor\r\n * @param {function(*, Uint8Array, number)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {*} val Value to write\r\n * @ignore\r\n */\r\nfunction Op(fn, len, val) {\r\n\r\n    /**\r\n     * Function to call.\r\n     * @type {function(Uint8Array, number, *)}\r\n     */\r\n    this.fn = fn;\r\n\r\n    /**\r\n     * Value byte length.\r\n     * @type {number}\r\n     */\r\n    this.len = len;\r\n\r\n    /**\r\n     * Next operation.\r\n     * @type {Writer.Op|undefined}\r\n     */\r\n    this.next = undefined;\r\n\r\n    /**\r\n     * Value to write.\r\n     * @type {*}\r\n     */\r\n    this.val = val; // type varies\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction noop() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Constructs a new writer state instance.\r\n * @classdesc Copied writer state.\r\n * @memberof Writer\r\n * @constructor\r\n * @param {Writer} writer Writer to copy state from\r\n * @ignore\r\n */\r\nfunction State(writer) {\r\n\r\n    /**\r\n     * Current head.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.head = writer.head;\r\n\r\n    /**\r\n     * Current tail.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.tail = writer.tail;\r\n\r\n    /**\r\n     * Current buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = writer.len;\r\n\r\n    /**\r\n     * Next state.\r\n     * @type {State|null}\r\n     */\r\n    this.next = writer.states;\r\n}\r\n\r\n/**\r\n * Constructs a new writer instance.\r\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n */\r\nfunction Writer() {\r\n\r\n    /**\r\n     * Current length.\r\n     * @type {number}\r\n     */\r\n    this.len = 0;\r\n\r\n    /**\r\n     * Operations head.\r\n     * @type {Object}\r\n     */\r\n    this.head = new Op(noop, 0, 0);\r\n\r\n    /**\r\n     * Operations tail\r\n     * @type {Object}\r\n     */\r\n    this.tail = this.head;\r\n\r\n    /**\r\n     * Linked forked states.\r\n     * @type {Object|null}\r\n     */\r\n    this.states = null;\r\n\r\n    // When a value is written, the writer calculates its byte length and puts it into a linked\r\n    // list of operations to perform when finish() is called. This both allows us to allocate\r\n    // buffers of the exact required size and reduces the amount of work we have to do compared\r\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\r\n    // part is just a linked list walk calling operations with already prepared values.\r\n}\r\n\r\n/**\r\n * Creates a new writer.\r\n * @function\r\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\r\n */\r\nWriter.create = util.Buffer\r\n    ? function create_buffer_setup() {\r\n        return (Writer.create = function create_buffer() {\r\n            return new BufferWriter();\r\n        })();\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array() {\r\n        return new Writer();\r\n    };\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\nWriter.alloc = function alloc(size) {\r\n    return new util.Array(size);\r\n};\r\n\r\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\r\n/* istanbul ignore else */\r\nif (util.Array !== Array)\r\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\r\n\r\n/**\r\n * Pushes a new operation to the queue.\r\n * @param {function(Uint8Array, number, *)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @returns {Writer} `this`\r\n * @private\r\n */\r\nWriter.prototype._push = function push(fn, len, val) {\r\n    this.tail = this.tail.next = new Op(fn, len, val);\r\n    this.len += len;\r\n    return this;\r\n};\r\n\r\nfunction writeByte(val, buf, pos) {\r\n    buf[pos] = val & 255;\r\n}\r\n\r\nfunction writeVarint32(val, buf, pos) {\r\n    while (val > 127) {\r\n        buf[pos++] = val & 127 | 128;\r\n        val >>>= 7;\r\n    }\r\n    buf[pos] = val;\r\n}\r\n\r\n/**\r\n * Constructs a new varint writer operation instance.\r\n * @classdesc Scheduled varint writer operation.\r\n * @extends Op\r\n * @constructor\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @ignore\r\n */\r\nfunction VarintOp(len, val) {\r\n    this.len = len;\r\n    this.next = undefined;\r\n    this.val = val;\r\n}\r\n\r\nVarintOp.prototype = Object.create(Op.prototype);\r\nVarintOp.prototype.fn = writeVarint32;\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as a varint.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.uint32 = function write_uint32(value) {\r\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\r\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\r\n    this.len += (this.tail = this.tail.next = new VarintOp(\r\n        (value = value >>> 0)\r\n                < 128       ? 1\r\n        : value < 16384     ? 2\r\n        : value < 2097152   ? 3\r\n        : value < 268435456 ? 4\r\n        :                     5,\r\n    value)).len;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as a varint.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.int32 = function write_int32(value) {\r\n    return value < 0\r\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\r\n        : this.uint32(value);\r\n};\r\n\r\n/**\r\n * Writes a 32 bit value as a varint, zig-zag encoded.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sint32 = function write_sint32(value) {\r\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\r\n};\r\n\r\nfunction writeVarint64(val, buf, pos) {\r\n    while (val.hi) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\r\n        val.hi >>>= 7;\r\n    }\r\n    while (val.lo > 127) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = val.lo >>> 7;\r\n    }\r\n    buf[pos++] = val.lo;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as a varint.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.uint64 = function write_uint64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.int64 = Writer.prototype.uint64;\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sint64 = function write_sint64(value) {\r\n    var bits = LongBits.from(value).zzEncode();\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a boolish value as a varint.\r\n * @param {boolean} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bool = function write_bool(value) {\r\n    return this._push(writeByte, 1, value ? 1 : 0);\r\n};\r\n\r\nfunction writeFixed32(val, buf, pos) {\r\n    buf[pos    ] =  val         & 255;\r\n    buf[pos + 1] =  val >>> 8   & 255;\r\n    buf[pos + 2] =  val >>> 16  & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as fixed 32 bits.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fixed32 = function write_fixed32(value) {\r\n    return this._push(writeFixed32, 4, value >>> 0);\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as fixed 32 bits.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as fixed 64 bits.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.fixed64 = function write_fixed64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as fixed 64 bits.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\r\n\r\n/**\r\n * Writes a float (32 bit).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.float = function write_float(value) {\r\n    return this._push(util.float.writeFloatLE, 4, value);\r\n};\r\n\r\n/**\r\n * Writes a double (64 bit float).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.double = function write_double(value) {\r\n    return this._push(util.float.writeDoubleLE, 8, value);\r\n};\r\n\r\nvar writeBytes = util.Array.prototype.set\r\n    ? function writeBytes_set(val, buf, pos) {\r\n        buf.set(val, pos); // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytes_for(val, buf, pos) {\r\n        for (var i = 0; i < val.length; ++i)\r\n            buf[pos + i] = val[i];\r\n    };\r\n\r\n/**\r\n * Writes a sequence of bytes.\r\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bytes = function write_bytes(value) {\r\n    var len = value.length >>> 0;\r\n    if (!len)\r\n        return this._push(writeByte, 1, 0);\r\n    if (util.isString(value)) {\r\n        var buf = Writer.alloc(len = base64.length(value));\r\n        base64.decode(value, buf, 0);\r\n        value = buf;\r\n    }\r\n    return this.uint32(len)._push(writeBytes, len, value);\r\n};\r\n\r\n/**\r\n * Writes a string.\r\n * @param {string} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.string = function write_string(value) {\r\n    var len = utf8.length(value);\r\n    return len\r\n        ? this.uint32(len)._push(utf8.write, len, value)\r\n        : this._push(writeByte, 1, 0);\r\n};\r\n\r\n/**\r\n * Forks this writer's state by pushing it to a stack.\r\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fork = function fork() {\r\n    this.states = new State(this);\r\n    this.head = this.tail = new Op(noop, 0, 0);\r\n    this.len = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets this instance to the last state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.reset = function reset() {\r\n    if (this.states) {\r\n        this.head   = this.states.head;\r\n        this.tail   = this.states.tail;\r\n        this.len    = this.states.len;\r\n        this.states = this.states.next;\r\n    } else {\r\n        this.head = this.tail = new Op(noop, 0, 0);\r\n        this.len  = 0;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.ldelim = function ldelim() {\r\n    var head = this.head,\r\n        tail = this.tail,\r\n        len  = this.len;\r\n    this.reset().uint32(len);\r\n    if (len) {\r\n        this.tail.next = head.next; // skip noop\r\n        this.tail = tail;\r\n        this.len += len;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @returns {Uint8Array} Finished buffer\r\n */\r\nWriter.prototype.finish = function finish() {\r\n    var head = this.head.next, // skip noop\r\n        buf  = this.constructor.alloc(this.len),\r\n        pos  = 0;\r\n    while (head) {\r\n        head.fn(head.val, buf, pos);\r\n        pos += head.len;\r\n        head = head.next;\r\n    }\r\n    // this.head = this.tail = null;\r\n    return buf;\r\n};\r\n\r\nWriter._configure = function(BufferWriter_) {\r\n    BufferWriter = BufferWriter_;\r\n};\r\n","\"use strict\";\r\nmodule.exports = BufferWriter;\r\n\r\n// extends Writer\r\nvar Writer = require(\"./writer\");\r\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\nvar Buffer = util.Buffer;\r\n\r\n/**\r\n * Constructs a new buffer writer instance.\r\n * @classdesc Wire format writer using node buffers.\r\n * @extends Writer\r\n * @constructor\r\n */\r\nfunction BufferWriter() {\r\n    Writer.call(this);\r\n}\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Buffer} Buffer\r\n */\r\nBufferWriter.alloc = function alloc_buffer(size) {\r\n    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);\r\n};\r\n\r\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\"\r\n    ? function writeBytesBuffer_set(val, buf, pos) {\r\n        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\r\n                           // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytesBuffer_copy(val, buf, pos) {\r\n        if (val.copy) // Buffer values\r\n            val.copy(buf, pos, 0, val.length);\r\n        else for (var i = 0; i < val.length;) // plain array values\r\n            buf[pos++] = val[i++];\r\n    };\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\r\n    if (util.isString(value))\r\n        value = util._Buffer_from(value, \"base64\");\r\n    var len = value.length >>> 0;\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeBytesBuffer, len, value);\r\n    return this;\r\n};\r\n\r\nfunction writeStringBuffer(val, buf, pos) {\r\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\r\n        util.utf8.write(val, buf, pos);\r\n    else\r\n        buf.utf8Write(val, pos);\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.string = function write_string_buffer(value) {\r\n    var len = Buffer.byteLength(value);\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeStringBuffer, len, value);\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @name BufferWriter#finish\r\n * @function\r\n * @returns {Buffer} Finished buffer\r\n */\r\n","\"use strict\";\r\nmodule.exports = Reader;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferReader; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    utf8      = util.utf8;\r\n\r\n/* istanbul ignore next */\r\nfunction indexOutOfRange(reader, writeLength) {\r\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\r\n}\r\n\r\n/**\r\n * Constructs a new reader instance using the specified buffer.\r\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n * @param {Uint8Array} buffer Buffer to read from\r\n */\r\nfunction Reader(buffer) {\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @type {Uint8Array}\r\n     */\r\n    this.buf = buffer;\r\n\r\n    /**\r\n     * Read buffer position.\r\n     * @type {number}\r\n     */\r\n    this.pos = 0;\r\n\r\n    /**\r\n     * Read buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = buffer.length;\r\n}\r\n\r\nvar create_array = typeof Uint8Array !== \"undefined\"\r\n    ? function create_typed_array(buffer) {\r\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array(buffer) {\r\n        if (Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    };\r\n\r\n/**\r\n * Creates a new reader using the specified buffer.\r\n * @function\r\n * @param {Uint8Array|Buffer} buffer Buffer to read from\r\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\r\n * @throws {Error} If `buffer` is not a valid buffer\r\n */\r\nReader.create = util.Buffer\r\n    ? function create_buffer_setup(buffer) {\r\n        return (Reader.create = function create_buffer(buffer) {\r\n            return util.Buffer.isBuffer(buffer)\r\n                ? new BufferReader(buffer)\r\n                /* istanbul ignore next */\r\n                : create_array(buffer);\r\n        })(buffer);\r\n    }\r\n    /* istanbul ignore next */\r\n    : create_array;\r\n\r\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\r\n\r\n/**\r\n * Reads a varint as an unsigned 32 bit value.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.uint32 = (function read_uint32_setup() {\r\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\r\n    return function read_uint32() {\r\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n\r\n        /* istanbul ignore if */\r\n        if ((this.pos += 5) > this.len) {\r\n            this.pos = this.len;\r\n            throw indexOutOfRange(this, 10);\r\n        }\r\n        return value;\r\n    };\r\n})();\r\n\r\n/**\r\n * Reads a varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.int32 = function read_int32() {\r\n    return this.uint32() | 0;\r\n};\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sint32 = function read_sint32() {\r\n    var value = this.uint32();\r\n    return value >>> 1 ^ -(value & 1) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readLongVarint() {\r\n    // tends to deopt with local vars for octet etc.\r\n    var bits = new LongBits(0, 0);\r\n    var i = 0;\r\n    if (this.len - this.pos > 4) { // fast route (lo)\r\n        for (; i < 4; ++i) {\r\n            // 1st..4th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 5th\r\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\r\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\r\n        if (this.buf[this.pos++] < 128)\r\n            return bits;\r\n        i = 0;\r\n    } else {\r\n        for (; i < 3; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 1st..3th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 4th\r\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\r\n        return bits;\r\n    }\r\n    if (this.len - this.pos > 4) { // fast route (hi)\r\n        for (; i < 5; ++i) {\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    } else {\r\n        for (; i < 5; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    }\r\n    /* istanbul ignore next */\r\n    throw Error(\"invalid varint encoding\");\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads a varint as a signed 64 bit value.\r\n * @name Reader#int64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as an unsigned 64 bit value.\r\n * @name Reader#uint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 64 bit value.\r\n * @name Reader#sint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as a boolean.\r\n * @returns {boolean} Value read\r\n */\r\nReader.prototype.bool = function read_bool() {\r\n    return this.uint32() !== 0;\r\n};\r\n\r\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\r\n    return (buf[end - 4]\r\n          | buf[end - 3] << 8\r\n          | buf[end - 2] << 16\r\n          | buf[end - 1] << 24) >>> 0;\r\n}\r\n\r\n/**\r\n * Reads fixed 32 bits as an unsigned 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.fixed32 = function read_fixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4);\r\n};\r\n\r\n/**\r\n * Reads fixed 32 bits as a signed 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sfixed32 = function read_sfixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readFixed64(/* this: Reader */) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 8);\r\n\r\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads fixed 64 bits.\r\n * @name Reader#fixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads zig-zag encoded fixed 64 bits.\r\n * @name Reader#sfixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a float (32 bit) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.float = function read_float() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readFloatLE(this.buf, this.pos);\r\n    this.pos += 4;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a double (64 bit float) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.double = function read_double() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readDoubleLE(this.buf, this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @returns {Uint8Array} Value read\r\n */\r\nReader.prototype.bytes = function read_bytes() {\r\n    var length = this.uint32(),\r\n        start  = this.pos,\r\n        end    = this.pos + length;\r\n\r\n    /* istanbul ignore if */\r\n    if (end > this.len)\r\n        throw indexOutOfRange(this, length);\r\n\r\n    this.pos += length;\r\n    if (Array.isArray(this.buf)) // plain array\r\n        return this.buf.slice(start, end);\r\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\r\n        ? new this.buf.constructor(0)\r\n        : this._slice.call(this.buf, start, end);\r\n};\r\n\r\n/**\r\n * Reads a string preceeded by its byte length as a varint.\r\n * @returns {string} Value read\r\n */\r\nReader.prototype.string = function read_string() {\r\n    var bytes = this.bytes();\r\n    return utf8.read(bytes, 0, bytes.length);\r\n};\r\n\r\n/**\r\n * Skips the specified number of bytes if specified, otherwise skips a varint.\r\n * @param {number} [length] Length if known, otherwise a varint is assumed\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skip = function skip(length) {\r\n    if (typeof length === \"number\") {\r\n        /* istanbul ignore if */\r\n        if (this.pos + length > this.len)\r\n            throw indexOutOfRange(this, length);\r\n        this.pos += length;\r\n    } else {\r\n        do {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n        } while (this.buf[this.pos++] & 128);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Skips the next element of the specified wire type.\r\n * @param {number} wireType Wire type received\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skipType = function(wireType) {\r\n    switch (wireType) {\r\n        case 0:\r\n            this.skip();\r\n            break;\r\n        case 1:\r\n            this.skip(8);\r\n            break;\r\n        case 2:\r\n            this.skip(this.uint32());\r\n            break;\r\n        case 3:\r\n            do { // eslint-disable-line no-constant-condition\r\n                if ((wireType = this.uint32() & 7) === 4)\r\n                    break;\r\n                this.skipType(wireType);\r\n            } while (true);\r\n            break;\r\n        case 5:\r\n            this.skip(4);\r\n            break;\r\n\r\n        /* istanbul ignore next */\r\n        default:\r\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\r\n    }\r\n    return this;\r\n};\r\n\r\nReader._configure = function(BufferReader_) {\r\n    BufferReader = BufferReader_;\r\n\r\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\r\n    util.merge(Reader.prototype, {\r\n\r\n        int64: function read_int64() {\r\n            return readLongVarint.call(this)[fn](false);\r\n        },\r\n\r\n        uint64: function read_uint64() {\r\n            return readLongVarint.call(this)[fn](true);\r\n        },\r\n\r\n        sint64: function read_sint64() {\r\n            return readLongVarint.call(this).zzDecode()[fn](false);\r\n        },\r\n\r\n        fixed64: function read_fixed64() {\r\n            return readFixed64.call(this)[fn](true);\r\n        },\r\n\r\n        sfixed64: function read_sfixed64() {\r\n            return readFixed64.call(this)[fn](false);\r\n        }\r\n\r\n    });\r\n};\r\n","\"use strict\";\r\nmodule.exports = BufferReader;\r\n\r\n// extends Reader\r\nvar Reader = require(\"./reader\");\r\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\n/**\r\n * Constructs a new buffer reader instance.\r\n * @classdesc Wire format reader using node buffers.\r\n * @extends Reader\r\n * @constructor\r\n * @param {Buffer} buffer Buffer to read from\r\n */\r\nfunction BufferReader(buffer) {\r\n    Reader.call(this, buffer);\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @name BufferReader#buf\r\n     * @type {Buffer}\r\n     */\r\n}\r\n\r\n/* istanbul ignore else */\r\nif (util.Buffer)\r\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\r\n\r\n/**\r\n * @override\r\n */\r\nBufferReader.prototype.string = function read_string_buffer() {\r\n    var len = this.uint32(); // modifies pos\r\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @name BufferReader#bytes\r\n * @function\r\n * @returns {Buffer} Value read\r\n */\r\n","\"use strict\";\r\nmodule.exports = Service;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n// Extends EventEmitter\r\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\r\n\r\n/**\r\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\r\n *\r\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\r\n * @typedef rpc.ServiceMethodCallback\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {TRes} [response] Response message\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\r\n * @typedef rpc.ServiceMethod\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\r\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\r\n */\r\n\r\n/**\r\n * Constructs a new RPC service instance.\r\n * @classdesc An RPC service as returned by {@link Service#create}.\r\n * @exports rpc.Service\r\n * @extends util.EventEmitter\r\n * @constructor\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n */\r\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\r\n\r\n    if (typeof rpcImpl !== \"function\")\r\n        throw TypeError(\"rpcImpl must be a function\");\r\n\r\n    util.EventEmitter.call(this);\r\n\r\n    /**\r\n     * RPC implementation. Becomes `null` once the service is ended.\r\n     * @type {RPCImpl|null}\r\n     */\r\n    this.rpcImpl = rpcImpl;\r\n\r\n    /**\r\n     * Whether requests are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.requestDelimited = Boolean(requestDelimited);\r\n\r\n    /**\r\n     * Whether responses are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.responseDelimited = Boolean(responseDelimited);\r\n}\r\n\r\n/**\r\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\r\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\r\n * @param {Constructor<TReq>} requestCtor Request constructor\r\n * @param {Constructor<TRes>} responseCtor Response constructor\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\r\n * @returns {undefined}\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n */\r\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\r\n\r\n    if (!request)\r\n        throw TypeError(\"request must be specified\");\r\n\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\r\n\r\n    if (!self.rpcImpl) {\r\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\r\n        return undefined;\r\n    }\r\n\r\n    try {\r\n        return self.rpcImpl(\r\n            method,\r\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\r\n            function rpcCallback(err, response) {\r\n\r\n                if (err) {\r\n                    self.emit(\"error\", err, method);\r\n                    return callback(err);\r\n                }\r\n\r\n                if (response === null) {\r\n                    self.end(/* endedByRPC */ true);\r\n                    return undefined;\r\n                }\r\n\r\n                if (!(response instanceof responseCtor)) {\r\n                    try {\r\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\r\n                    } catch (err) {\r\n                        self.emit(\"error\", err, method);\r\n                        return callback(err);\r\n                    }\r\n                }\r\n\r\n                self.emit(\"data\", response, method);\r\n                return callback(null, response);\r\n            }\r\n        );\r\n    } catch (err) {\r\n        self.emit(\"error\", err, method);\r\n        setTimeout(function() { callback(err); }, 0);\r\n        return undefined;\r\n    }\r\n};\r\n\r\n/**\r\n * Ends this service and emits the `end` event.\r\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\r\n * @returns {rpc.Service} `this`\r\n */\r\nService.prototype.end = function end(endedByRPC) {\r\n    if (this.rpcImpl) {\r\n        if (!endedByRPC) // signal end to rpcImpl\r\n            this.rpcImpl(null, null, null);\r\n        this.rpcImpl = null;\r\n        this.emit(\"end\").off();\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\n/**\r\n * Streaming RPC helpers.\r\n * @namespace\r\n */\r\nvar rpc = exports;\r\n\r\n/**\r\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\r\n * @typedef RPCImpl\r\n * @type {function}\r\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\r\n * @param {Uint8Array} requestData Request data\r\n * @param {RPCImplCallback} callback Callback function\r\n * @returns {undefined}\r\n * @example\r\n * function rpcImpl(method, requestData, callback) {\r\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\r\n *         throw Error(\"no such method\");\r\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\r\n *         callback(err, responseData);\r\n *     });\r\n * }\r\n */\r\n\r\n/**\r\n * Node-style callback as used by {@link RPCImpl}.\r\n * @typedef RPCImplCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\nrpc.Service = require(\"./rpc/service\");\r\n","\"use strict\";\r\nvar protobuf = exports;\r\n\r\n/**\r\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\r\n * @name build\r\n * @type {string}\r\n * @const\r\n */\r\nprotobuf.build = \"minimal\";\r\n\r\n// Serialization\r\nprotobuf.Writer       = require(\"./writer\");\r\nprotobuf.BufferWriter = require(\"./writer_buffer\");\r\nprotobuf.Reader       = require(\"./reader\");\r\nprotobuf.BufferReader = require(\"./reader_buffer\");\r\n\r\n// Utility\r\nprotobuf.util         = require(\"./util/minimal\");\r\nprotobuf.rpc          = require(\"./rpc\");\r\nprotobuf.roots        = require(\"./roots\");\r\nprotobuf.configure    = configure;\r\n\r\n/* istanbul ignore next */\r\n/**\r\n * Reconfigures the library according to the environment.\r\n * @returns {undefined}\r\n */\r\nfunction configure() {\r\n    protobuf.Reader._configure(protobuf.BufferReader);\r\n    protobuf.util._configure();\r\n}\r\n\r\n// Configure serialization\r\nprotobuf.Writer._configure(protobuf.BufferWriter);\r\nconfigure();\r\n","// minimal library entry point.\r\n\r\n\"use strict\";\r\nmodule.exports = require(\"./src/index-minimal\");\r\n","/*eslint-disable block-scoped-var, no-redeclare, no-control-regex, no-prototype-builtins*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\nvar $Reader = $protobuf.Reader, $util = $protobuf.util;\n\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.tensorflow = (function() {\n\n    var tensorflow = {};\n\n    tensorflow.Any = (function() {\n\n        function Any(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        Any.prototype.typeUrl = \"\";\n        Any.prototype.value = $util.newBuffer([]);\n\n        Any.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.Any();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.typeUrl = r.string();\n                    break;\n                case 2:\n                    m.value = r.bytes();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return Any;\n    })();\n\n    tensorflow.DataType = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"DT_INVALID\"] = 0;\n        values[valuesById[1] = \"DT_FLOAT\"] = 1;\n        values[valuesById[2] = \"DT_DOUBLE\"] = 2;\n        values[valuesById[3] = \"DT_INT32\"] = 3;\n        values[valuesById[4] = \"DT_UINT8\"] = 4;\n        values[valuesById[5] = \"DT_INT16\"] = 5;\n        values[valuesById[6] = \"DT_INT8\"] = 6;\n        values[valuesById[7] = \"DT_STRING\"] = 7;\n        values[valuesById[8] = \"DT_COMPLEX64\"] = 8;\n        values[valuesById[9] = \"DT_INT64\"] = 9;\n        values[valuesById[10] = \"DT_BOOL\"] = 10;\n        values[valuesById[11] = \"DT_QINT8\"] = 11;\n        values[valuesById[12] = \"DT_QUINT8\"] = 12;\n        values[valuesById[13] = \"DT_QINT32\"] = 13;\n        values[valuesById[14] = \"DT_BFLOAT16\"] = 14;\n        values[valuesById[101] = \"DT_FLOAT_REF\"] = 101;\n        values[valuesById[102] = \"DT_DOUBLE_REF\"] = 102;\n        values[valuesById[103] = \"DT_INT32_REF\"] = 103;\n        values[valuesById[104] = \"DT_UINT8_REF\"] = 104;\n        values[valuesById[105] = \"DT_INT16_REF\"] = 105;\n        values[valuesById[106] = \"DT_INT8_REF\"] = 106;\n        values[valuesById[107] = \"DT_STRING_REF\"] = 107;\n        values[valuesById[108] = \"DT_COMPLEX64_REF\"] = 108;\n        values[valuesById[109] = \"DT_INT64_REF\"] = 109;\n        values[valuesById[110] = \"DT_BOOL_REF\"] = 110;\n        values[valuesById[111] = \"DT_QINT8_REF\"] = 111;\n        values[valuesById[112] = \"DT_QUINT8_REF\"] = 112;\n        values[valuesById[113] = \"DT_QINT32_REF\"] = 113;\n        values[valuesById[114] = \"DT_BFLOAT16_REF\"] = 114;\n        return values;\n    })();\n\n    tensorflow.TensorShape = (function() {\n\n        function TensorShape(p) {\n            this.dim = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        TensorShape.prototype.dim = $util.emptyArray;\n        TensorShape.prototype.unknownRank = false;\n\n        TensorShape.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.TensorShape();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 2:\n                    if (!(m.dim && m.dim.length))\n                        m.dim = [];\n                    m.dim.push($root.tensorflow.TensorShape.Dim.decode(r, r.uint32()));\n                    break;\n                case 3:\n                    m.unknownRank = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        TensorShape.Dim = (function() {\n\n            function Dim(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            Dim.prototype.size = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n            Dim.prototype.name = \"\";\n\n            Dim.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.TensorShape.Dim();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.size = r.int64();\n                        break;\n                    case 2:\n                        m.name = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return Dim;\n        })();\n\n        return TensorShape;\n    })();\n\n    tensorflow.Tensor = (function() {\n\n        function Tensor(p) {\n            this.floatVal = [];\n            this.doubleVal = [];\n            this.intVal = [];\n            this.stringVal = [];\n            this.scomplexVal = [];\n            this.int64Val = [];\n            this.boolVal = [];\n            this.uint32Val = [];\n            this.uint64Val = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        Tensor.prototype.dtype = 0;\n        Tensor.prototype.tensorShape = null;\n        Tensor.prototype.versionNumber = 0;\n        Tensor.prototype.tensorContent = $util.newBuffer([]);\n        Tensor.prototype.floatVal = $util.emptyArray;\n        Tensor.prototype.doubleVal = $util.emptyArray;\n        Tensor.prototype.intVal = $util.emptyArray;\n        Tensor.prototype.stringVal = $util.emptyArray;\n        Tensor.prototype.scomplexVal = $util.emptyArray;\n        Tensor.prototype.int64Val = $util.emptyArray;\n        Tensor.prototype.boolVal = $util.emptyArray;\n        Tensor.prototype.uint32Val = $util.emptyArray;\n        Tensor.prototype.uint64Val = $util.emptyArray;\n\n        Tensor.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.Tensor();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.dtype = r.int32();\n                    break;\n                case 2:\n                    m.tensorShape = $root.tensorflow.TensorShape.decode(r, r.uint32());\n                    break;\n                case 3:\n                    m.versionNumber = r.int32();\n                    break;\n                case 4:\n                    m.tensorContent = r.bytes();\n                    break;\n                case 5:\n                    if (!(m.floatVal && m.floatVal.length))\n                        m.floatVal = [];\n                    if ((t & 7) === 2) {\n                        var c2 = r.uint32() + r.pos;\n                        while (r.pos < c2)\n                            m.floatVal.push(r.float());\n                    } else\n                        m.floatVal.push(r.float());\n                    break;\n                case 6:\n                    if (!(m.doubleVal && m.doubleVal.length))\n                        m.doubleVal = [];\n                    if ((t & 7) === 2) {\n                        var c2 = r.uint32() + r.pos;\n                        while (r.pos < c2)\n                            m.doubleVal.push(r.double());\n                    } else\n                        m.doubleVal.push(r.double());\n                    break;\n                case 7:\n                    if (!(m.intVal && m.intVal.length))\n                        m.intVal = [];\n                    if ((t & 7) === 2) {\n                        var c2 = r.uint32() + r.pos;\n                        while (r.pos < c2)\n                            m.intVal.push(r.int32());\n                    } else\n                        m.intVal.push(r.int32());\n                    break;\n                case 8:\n                    if (!(m.stringVal && m.stringVal.length))\n                        m.stringVal = [];\n                    m.stringVal.push(r.bytes());\n                    break;\n                case 9:\n                    if (!(m.scomplexVal && m.scomplexVal.length))\n                        m.scomplexVal = [];\n                    if ((t & 7) === 2) {\n                        var c2 = r.uint32() + r.pos;\n                        while (r.pos < c2)\n                            m.scomplexVal.push(r.float());\n                    } else\n                        m.scomplexVal.push(r.float());\n                    break;\n                case 10:\n                    if (!(m.int64Val && m.int64Val.length))\n                        m.int64Val = [];\n                    if ((t & 7) === 2) {\n                        var c2 = r.uint32() + r.pos;\n                        while (r.pos < c2)\n                            m.int64Val.push(r.int64());\n                    } else\n                        m.int64Val.push(r.int64());\n                    break;\n                case 11:\n                    if (!(m.boolVal && m.boolVal.length))\n                        m.boolVal = [];\n                    if ((t & 7) === 2) {\n                        var c2 = r.uint32() + r.pos;\n                        while (r.pos < c2)\n                            m.boolVal.push(r.bool());\n                    } else\n                        m.boolVal.push(r.bool());\n                    break;\n                case 16:\n                    if (!(m.uint32Val && m.uint32Val.length))\n                        m.uint32Val = [];\n                    if ((t & 7) === 2) {\n                        var c2 = r.uint32() + r.pos;\n                        while (r.pos < c2)\n                            m.uint32Val.push(r.uint32());\n                    } else\n                        m.uint32Val.push(r.uint32());\n                    break;\n                case 17:\n                    if (!(m.uint64Val && m.uint64Val.length))\n                        m.uint64Val = [];\n                    if ((t & 7) === 2) {\n                        var c2 = r.uint32() + r.pos;\n                        while (r.pos < c2)\n                            m.uint64Val.push(r.uint64());\n                    } else\n                        m.uint64Val.push(r.uint64());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return Tensor;\n    })();\n\n    tensorflow.AttrValue = (function() {\n\n        function AttrValue(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        AttrValue.prototype.list = null;\n        AttrValue.prototype.s = $util.newBuffer([]);\n        AttrValue.prototype.i = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n        AttrValue.prototype.f = 0;\n        AttrValue.prototype.b = false;\n        AttrValue.prototype.type = 0;\n        AttrValue.prototype.shape = null;\n        AttrValue.prototype.tensor = null;\n        AttrValue.prototype.placeholder = \"\";\n        AttrValue.prototype.func = null;\n\n        var $oneOfFields;\n\n        Object.defineProperty(AttrValue.prototype, \"value\", {\n            get: $util.oneOfGetter($oneOfFields = [\"list\", \"s\", \"i\", \"f\", \"b\", \"type\", \"shape\", \"tensor\", \"placeholder\", \"func\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        AttrValue.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.AttrValue();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.list = $root.tensorflow.AttrValue.ListValue.decode(r, r.uint32());\n                    break;\n                case 2:\n                    m.s = r.bytes();\n                    break;\n                case 3:\n                    m.i = r.int64();\n                    break;\n                case 4:\n                    m.f = r.float();\n                    break;\n                case 5:\n                    m.b = r.bool();\n                    break;\n                case 6:\n                    m.type = r.int32();\n                    break;\n                case 7:\n                    m.shape = $root.tensorflow.TensorShape.decode(r, r.uint32());\n                    break;\n                case 8:\n                    m.tensor = $root.tensorflow.Tensor.decode(r, r.uint32());\n                    break;\n                case 9:\n                    m.placeholder = r.string();\n                    break;\n                case 10:\n                    m.func = $root.tensorflow.NameAttrList.decode(r, r.uint32());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        AttrValue.ListValue = (function() {\n\n            function ListValue(p) {\n                this.s = [];\n                this.i = [];\n                this.f = [];\n                this.b = [];\n                this.type = [];\n                this.shape = [];\n                this.tensor = [];\n                this.func = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            ListValue.prototype.s = $util.emptyArray;\n            ListValue.prototype.i = $util.emptyArray;\n            ListValue.prototype.f = $util.emptyArray;\n            ListValue.prototype.b = $util.emptyArray;\n            ListValue.prototype.type = $util.emptyArray;\n            ListValue.prototype.shape = $util.emptyArray;\n            ListValue.prototype.tensor = $util.emptyArray;\n            ListValue.prototype.func = $util.emptyArray;\n\n            ListValue.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.AttrValue.ListValue();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 2:\n                        if (!(m.s && m.s.length))\n                            m.s = [];\n                        m.s.push(r.bytes());\n                        break;\n                    case 3:\n                        if (!(m.i && m.i.length))\n                            m.i = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2)\n                                m.i.push(r.int64());\n                        } else\n                            m.i.push(r.int64());\n                        break;\n                    case 4:\n                        if (!(m.f && m.f.length))\n                            m.f = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2)\n                                m.f.push(r.float());\n                        } else\n                            m.f.push(r.float());\n                        break;\n                    case 5:\n                        if (!(m.b && m.b.length))\n                            m.b = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2)\n                                m.b.push(r.bool());\n                        } else\n                            m.b.push(r.bool());\n                        break;\n                    case 6:\n                        if (!(m.type && m.type.length))\n                            m.type = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2)\n                                m.type.push(r.int32());\n                        } else\n                            m.type.push(r.int32());\n                        break;\n                    case 7:\n                        if (!(m.shape && m.shape.length))\n                            m.shape = [];\n                        m.shape.push($root.tensorflow.TensorShape.decode(r, r.uint32()));\n                        break;\n                    case 8:\n                        if (!(m.tensor && m.tensor.length))\n                            m.tensor = [];\n                        m.tensor.push($root.tensorflow.Tensor.decode(r, r.uint32()));\n                        break;\n                    case 9:\n                        if (!(m.func && m.func.length))\n                            m.func = [];\n                        m.func.push($root.tensorflow.NameAttrList.decode(r, r.uint32()));\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return ListValue;\n        })();\n\n        return AttrValue;\n    })();\n\n    tensorflow.NameAttrList = (function() {\n\n        function NameAttrList(p) {\n            this.attr = {};\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        NameAttrList.prototype.name = \"\";\n        NameAttrList.prototype.attr = $util.emptyObject;\n\n        NameAttrList.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.NameAttrList(), k;\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.name = r.string();\n                    break;\n                case 2:\n                    r.skip().pos++;\n                    if (m.attr === $util.emptyObject)\n                        m.attr = {};\n                    k = r.string();\n                    r.pos++;\n                    m.attr[k] = $root.tensorflow.AttrValue.decode(r, r.uint32());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return NameAttrList;\n    })();\n\n    tensorflow.NodeDef = (function() {\n\n        function NodeDef(p) {\n            this.input = [];\n            this.attr = {};\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        NodeDef.prototype.name = \"\";\n        NodeDef.prototype.op = \"\";\n        NodeDef.prototype.input = $util.emptyArray;\n        NodeDef.prototype.device = \"\";\n        NodeDef.prototype.attr = $util.emptyObject;\n\n        NodeDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.NodeDef(), k;\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.name = r.string();\n                    break;\n                case 2:\n                    m.op = r.string();\n                    break;\n                case 3:\n                    if (!(m.input && m.input.length))\n                        m.input = [];\n                    m.input.push(r.string());\n                    break;\n                case 4:\n                    m.device = r.string();\n                    break;\n                case 5:\n                    r.skip().pos++;\n                    if (m.attr === $util.emptyObject)\n                        m.attr = {};\n                    k = r.string();\n                    r.pos++;\n                    m.attr[k] = $root.tensorflow.AttrValue.decode(r, r.uint32());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return NodeDef;\n    })();\n\n    tensorflow.VersionDef = (function() {\n\n        function VersionDef(p) {\n            this.badConsumers = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        VersionDef.prototype.producer = 0;\n        VersionDef.prototype.minConsumer = 0;\n        VersionDef.prototype.badConsumers = $util.emptyArray;\n\n        VersionDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.VersionDef();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.producer = r.int32();\n                    break;\n                case 2:\n                    m.minConsumer = r.int32();\n                    break;\n                case 3:\n                    if (!(m.badConsumers && m.badConsumers.length))\n                        m.badConsumers = [];\n                    if ((t & 7) === 2) {\n                        var c2 = r.uint32() + r.pos;\n                        while (r.pos < c2)\n                            m.badConsumers.push(r.int32());\n                    } else\n                        m.badConsumers.push(r.int32());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return VersionDef;\n    })();\n\n    tensorflow.GraphDef = (function() {\n\n        function GraphDef(p) {\n            this.node = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        GraphDef.prototype.node = $util.emptyArray;\n        GraphDef.prototype.versions = null;\n        GraphDef.prototype.library = null;\n\n        GraphDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.GraphDef();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    if (!(m.node && m.node.length))\n                        m.node = [];\n                    m.node.push($root.tensorflow.NodeDef.decode(r, r.uint32()));\n                    break;\n                case 4:\n                    m.versions = $root.tensorflow.VersionDef.decode(r, r.uint32());\n                    break;\n                case 2:\n                    m.library = $root.tensorflow.FunctionDefLibrary.decode(r, r.uint32());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return GraphDef;\n    })();\n\n    tensorflow.CollectionDef = (function() {\n\n        function CollectionDef(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        CollectionDef.prototype.nodeList = null;\n        CollectionDef.prototype.bytesList = null;\n        CollectionDef.prototype.int64List = null;\n        CollectionDef.prototype.floatList = null;\n        CollectionDef.prototype.anyList = null;\n\n        var $oneOfFields;\n\n        Object.defineProperty(CollectionDef.prototype, \"kind\", {\n            get: $util.oneOfGetter($oneOfFields = [\"nodeList\", \"bytesList\", \"int64List\", \"floatList\", \"anyList\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        CollectionDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.CollectionDef();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.nodeList = $root.tensorflow.CollectionDef.NodeList.decode(r, r.uint32());\n                    break;\n                case 2:\n                    m.bytesList = $root.tensorflow.CollectionDef.BytesList.decode(r, r.uint32());\n                    break;\n                case 3:\n                    m.int64List = $root.tensorflow.CollectionDef.Int64List.decode(r, r.uint32());\n                    break;\n                case 4:\n                    m.floatList = $root.tensorflow.CollectionDef.FloatList.decode(r, r.uint32());\n                    break;\n                case 5:\n                    m.anyList = $root.tensorflow.CollectionDef.AnyList.decode(r, r.uint32());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        CollectionDef.NodeList = (function() {\n\n            function NodeList(p) {\n                this.value = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            NodeList.prototype.value = $util.emptyArray;\n\n            NodeList.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.CollectionDef.NodeList();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        if (!(m.value && m.value.length))\n                            m.value = [];\n                        m.value.push(r.string());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return NodeList;\n        })();\n\n        CollectionDef.BytesList = (function() {\n\n            function BytesList(p) {\n                this.value = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            BytesList.prototype.value = $util.emptyArray;\n\n            BytesList.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.CollectionDef.BytesList();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        if (!(m.value && m.value.length))\n                            m.value = [];\n                        m.value.push(r.bytes());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return BytesList;\n        })();\n\n        CollectionDef.Int64List = (function() {\n\n            function Int64List(p) {\n                this.value = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            Int64List.prototype.value = $util.emptyArray;\n\n            Int64List.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.CollectionDef.Int64List();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        if (!(m.value && m.value.length))\n                            m.value = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2)\n                                m.value.push(r.int64());\n                        } else\n                            m.value.push(r.int64());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return Int64List;\n        })();\n\n        CollectionDef.FloatList = (function() {\n\n            function FloatList(p) {\n                this.value = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            FloatList.prototype.value = $util.emptyArray;\n\n            FloatList.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.CollectionDef.FloatList();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        if (!(m.value && m.value.length))\n                            m.value = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2)\n                                m.value.push(r.float());\n                        } else\n                            m.value.push(r.float());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return FloatList;\n        })();\n\n        CollectionDef.AnyList = (function() {\n\n            function AnyList(p) {\n                this.value = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            AnyList.prototype.value = $util.emptyArray;\n\n            AnyList.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.CollectionDef.AnyList();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        if (!(m.value && m.value.length))\n                            m.value = [];\n                        m.value.push($root.tensorflow.Any.decode(r, r.uint32()));\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return AnyList;\n        })();\n\n        return CollectionDef;\n    })();\n\n    tensorflow.SaverDef = (function() {\n\n        function SaverDef(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        SaverDef.prototype.filenameTensorName = \"\";\n        SaverDef.prototype.saveTensorName = \"\";\n        SaverDef.prototype.restoreOpName = \"\";\n        SaverDef.prototype.maxToKeep = 0;\n        SaverDef.prototype.sharded = false;\n        SaverDef.prototype.keepCheckpointEveryNHours = 0;\n        SaverDef.prototype.version = 0;\n\n        SaverDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.SaverDef();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.filenameTensorName = r.string();\n                    break;\n                case 2:\n                    m.saveTensorName = r.string();\n                    break;\n                case 3:\n                    m.restoreOpName = r.string();\n                    break;\n                case 4:\n                    m.maxToKeep = r.int32();\n                    break;\n                case 5:\n                    m.sharded = r.bool();\n                    break;\n                case 6:\n                    m.keepCheckpointEveryNHours = r.float();\n                    break;\n                case 7:\n                    m.version = r.int32();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        SaverDef.CheckpointFormatVersion = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"LEGACY\"] = 0;\n            values[valuesById[1] = \"V1\"] = 1;\n            values[valuesById[2] = \"V2\"] = 2;\n            return values;\n        })();\n\n        return SaverDef;\n    })();\n\n    tensorflow.TensorInfo = (function() {\n\n        function TensorInfo(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        TensorInfo.prototype.name = \"\";\n        TensorInfo.prototype.cooSparse = null;\n        TensorInfo.prototype.dtype = 0;\n        TensorInfo.prototype.tensorShape = null;\n\n        var $oneOfFields;\n\n        Object.defineProperty(TensorInfo.prototype, \"encoding\", {\n            get: $util.oneOfGetter($oneOfFields = [\"name\", \"cooSparse\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        TensorInfo.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.TensorInfo();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.name = r.string();\n                    break;\n                case 4:\n                    m.cooSparse = $root.tensorflow.TensorInfo.CooSparse.decode(r, r.uint32());\n                    break;\n                case 2:\n                    m.dtype = r.int32();\n                    break;\n                case 3:\n                    m.tensorShape = $root.tensorflow.TensorShape.decode(r, r.uint32());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        TensorInfo.CooSparse = (function() {\n\n            function CooSparse(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            CooSparse.prototype.valuesTensorName = \"\";\n            CooSparse.prototype.indicesTensorName = \"\";\n            CooSparse.prototype.denseShapeTensorName = \"\";\n\n            CooSparse.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.TensorInfo.CooSparse();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.valuesTensorName = r.string();\n                        break;\n                    case 2:\n                        m.indicesTensorName = r.string();\n                        break;\n                    case 3:\n                        m.denseShapeTensorName = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return CooSparse;\n        })();\n\n        return TensorInfo;\n    })();\n\n    tensorflow.SignatureDef = (function() {\n\n        function SignatureDef(p) {\n            this.inputs = {};\n            this.outputs = {};\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        SignatureDef.prototype.inputs = $util.emptyObject;\n        SignatureDef.prototype.outputs = $util.emptyObject;\n        SignatureDef.prototype.methodName = \"\";\n\n        SignatureDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.SignatureDef(), k;\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    r.skip().pos++;\n                    if (m.inputs === $util.emptyObject)\n                        m.inputs = {};\n                    k = r.string();\n                    r.pos++;\n                    m.inputs[k] = $root.tensorflow.TensorInfo.decode(r, r.uint32());\n                    break;\n                case 2:\n                    r.skip().pos++;\n                    if (m.outputs === $util.emptyObject)\n                        m.outputs = {};\n                    k = r.string();\n                    r.pos++;\n                    m.outputs[k] = $root.tensorflow.TensorInfo.decode(r, r.uint32());\n                    break;\n                case 3:\n                    m.methodName = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return SignatureDef;\n    })();\n\n    tensorflow.AssetFileDef = (function() {\n\n        function AssetFileDef(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        AssetFileDef.prototype.tensorInfo = null;\n        AssetFileDef.prototype.filename = \"\";\n\n        AssetFileDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.AssetFileDef();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.tensorInfo = $root.tensorflow.TensorInfo.decode(r, r.uint32());\n                    break;\n                case 2:\n                    m.filename = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return AssetFileDef;\n    })();\n\n    tensorflow.OpDef = (function() {\n\n        function OpDef(p) {\n            this.inputArg = [];\n            this.outputArg = [];\n            this.attr = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        OpDef.prototype.name = \"\";\n        OpDef.prototype.inputArg = $util.emptyArray;\n        OpDef.prototype.outputArg = $util.emptyArray;\n        OpDef.prototype.attr = $util.emptyArray;\n        OpDef.prototype.deprecation = null;\n        OpDef.prototype.summary = \"\";\n        OpDef.prototype.description = \"\";\n        OpDef.prototype.isCommutative = false;\n        OpDef.prototype.isAggregate = false;\n        OpDef.prototype.isStateful = false;\n        OpDef.prototype.allowsUninitializedInput = false;\n\n        OpDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.OpDef();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.name = r.string();\n                    break;\n                case 2:\n                    if (!(m.inputArg && m.inputArg.length))\n                        m.inputArg = [];\n                    m.inputArg.push($root.tensorflow.OpDef.ArgDef.decode(r, r.uint32()));\n                    break;\n                case 3:\n                    if (!(m.outputArg && m.outputArg.length))\n                        m.outputArg = [];\n                    m.outputArg.push($root.tensorflow.OpDef.ArgDef.decode(r, r.uint32()));\n                    break;\n                case 4:\n                    if (!(m.attr && m.attr.length))\n                        m.attr = [];\n                    m.attr.push($root.tensorflow.OpDef.AttrDef.decode(r, r.uint32()));\n                    break;\n                case 8:\n                    m.deprecation = $root.tensorflow.OpDef.OpDeprecation.decode(r, r.uint32());\n                    break;\n                case 5:\n                    m.summary = r.string();\n                    break;\n                case 6:\n                    m.description = r.string();\n                    break;\n                case 18:\n                    m.isCommutative = r.bool();\n                    break;\n                case 16:\n                    m.isAggregate = r.bool();\n                    break;\n                case 17:\n                    m.isStateful = r.bool();\n                    break;\n                case 19:\n                    m.allowsUninitializedInput = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        OpDef.ArgDef = (function() {\n\n            function ArgDef(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            ArgDef.prototype.name = \"\";\n            ArgDef.prototype.description = \"\";\n            ArgDef.prototype.type = 0;\n            ArgDef.prototype.typeAttr = \"\";\n            ArgDef.prototype.numberAttr = \"\";\n            ArgDef.prototype.typeListAttr = \"\";\n            ArgDef.prototype.isRef = false;\n\n            ArgDef.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.OpDef.ArgDef();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.name = r.string();\n                        break;\n                    case 2:\n                        m.description = r.string();\n                        break;\n                    case 3:\n                        m.type = r.int32();\n                        break;\n                    case 4:\n                        m.typeAttr = r.string();\n                        break;\n                    case 5:\n                        m.numberAttr = r.string();\n                        break;\n                    case 6:\n                        m.typeListAttr = r.string();\n                        break;\n                    case 16:\n                        m.isRef = r.bool();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return ArgDef;\n        })();\n\n        OpDef.AttrDef = (function() {\n\n            function AttrDef(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            AttrDef.prototype.name = \"\";\n            AttrDef.prototype.type = \"\";\n            AttrDef.prototype.defaultValue = null;\n            AttrDef.prototype.description = \"\";\n            AttrDef.prototype.hasMinimum = false;\n            AttrDef.prototype.minimum = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n            AttrDef.prototype.allowedValues = null;\n\n            AttrDef.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.OpDef.AttrDef();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.name = r.string();\n                        break;\n                    case 2:\n                        m.type = r.string();\n                        break;\n                    case 3:\n                        m.defaultValue = $root.tensorflow.AttrValue.decode(r, r.uint32());\n                        break;\n                    case 4:\n                        m.description = r.string();\n                        break;\n                    case 5:\n                        m.hasMinimum = r.bool();\n                        break;\n                    case 6:\n                        m.minimum = r.int64();\n                        break;\n                    case 7:\n                        m.allowedValues = $root.tensorflow.AttrValue.decode(r, r.uint32());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return AttrDef;\n        })();\n\n        OpDef.OpDeprecation = (function() {\n\n            function OpDeprecation(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            OpDeprecation.prototype.version = 0;\n            OpDeprecation.prototype.explanation = \"\";\n\n            OpDeprecation.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.OpDef.OpDeprecation();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.version = r.int32();\n                        break;\n                    case 2:\n                        m.explanation = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return OpDeprecation;\n        })();\n\n        return OpDef;\n    })();\n\n    tensorflow.OpList = (function() {\n\n        function OpList(p) {\n            this.op = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        OpList.prototype.op = $util.emptyArray;\n\n        OpList.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.OpList();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    if (!(m.op && m.op.length))\n                        m.op = [];\n                    m.op.push($root.tensorflow.OpDef.decode(r, r.uint32()));\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return OpList;\n    })();\n\n    tensorflow.MetaGraphDef = (function() {\n\n        function MetaGraphDef(p) {\n            this.collectionDef = {};\n            this.signatureDef = {};\n            this.assetFileDef = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        MetaGraphDef.prototype.metaInfoDef = null;\n        MetaGraphDef.prototype.graphDef = null;\n        MetaGraphDef.prototype.saverDef = null;\n        MetaGraphDef.prototype.collectionDef = $util.emptyObject;\n        MetaGraphDef.prototype.signatureDef = $util.emptyObject;\n        MetaGraphDef.prototype.assetFileDef = $util.emptyArray;\n\n        MetaGraphDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.MetaGraphDef(), k;\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.metaInfoDef = $root.tensorflow.MetaGraphDef.MetaInfoDef.decode(r, r.uint32());\n                    break;\n                case 2:\n                    m.graphDef = $root.tensorflow.GraphDef.decode(r, r.uint32());\n                    break;\n                case 3:\n                    m.saverDef = $root.tensorflow.SaverDef.decode(r, r.uint32());\n                    break;\n                case 4:\n                    r.skip().pos++;\n                    if (m.collectionDef === $util.emptyObject)\n                        m.collectionDef = {};\n                    k = r.string();\n                    r.pos++;\n                    m.collectionDef[k] = $root.tensorflow.CollectionDef.decode(r, r.uint32());\n                    break;\n                case 5:\n                    r.skip().pos++;\n                    if (m.signatureDef === $util.emptyObject)\n                        m.signatureDef = {};\n                    k = r.string();\n                    r.pos++;\n                    m.signatureDef[k] = $root.tensorflow.SignatureDef.decode(r, r.uint32());\n                    break;\n                case 6:\n                    if (!(m.assetFileDef && m.assetFileDef.length))\n                        m.assetFileDef = [];\n                    m.assetFileDef.push($root.tensorflow.AssetFileDef.decode(r, r.uint32()));\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        MetaGraphDef.MetaInfoDef = (function() {\n\n            function MetaInfoDef(p) {\n                this.tags = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            MetaInfoDef.prototype.metaGraphVersion = \"\";\n            MetaInfoDef.prototype.strippedOpList = null;\n            MetaInfoDef.prototype.anyInfo = null;\n            MetaInfoDef.prototype.tags = $util.emptyArray;\n            MetaInfoDef.prototype.tensorflowVersion = \"\";\n            MetaInfoDef.prototype.tensorflowGitVersion = \"\";\n\n            MetaInfoDef.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.MetaGraphDef.MetaInfoDef();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.metaGraphVersion = r.string();\n                        break;\n                    case 2:\n                        m.strippedOpList = $root.tensorflow.OpList.decode(r, r.uint32());\n                        break;\n                    case 3:\n                        m.anyInfo = $root.tensorflow.Any.decode(r, r.uint32());\n                        break;\n                    case 4:\n                        if (!(m.tags && m.tags.length))\n                            m.tags = [];\n                        m.tags.push(r.string());\n                        break;\n                    case 5:\n                        m.tensorflowVersion = r.string();\n                        break;\n                    case 6:\n                        m.tensorflowGitVersion = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return MetaInfoDef;\n        })();\n\n        return MetaGraphDef;\n    })();\n\n    tensorflow.SavedModel = (function() {\n\n        function SavedModel(p) {\n            this.metaGraphs = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        SavedModel.prototype.savedModelSchemaVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n        SavedModel.prototype.metaGraphs = $util.emptyArray;\n\n        SavedModel.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.SavedModel();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.savedModelSchemaVersion = r.int64();\n                    break;\n                case 2:\n                    if (!(m.metaGraphs && m.metaGraphs.length))\n                        m.metaGraphs = [];\n                    m.metaGraphs.push($root.tensorflow.MetaGraphDef.decode(r, r.uint32()));\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return SavedModel;\n    })();\n\n    tensorflow.FunctionDefLibrary = (function() {\n\n        function FunctionDefLibrary(p) {\n            this[\"function\"] = [];\n            this.gradient = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        FunctionDefLibrary.prototype[\"function\"] = $util.emptyArray;\n        FunctionDefLibrary.prototype.gradient = $util.emptyArray;\n\n        FunctionDefLibrary.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.FunctionDefLibrary();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    if (!(m[\"function\"] && m[\"function\"].length))\n                        m[\"function\"] = [];\n                    m[\"function\"].push($root.tensorflow.FunctionDef.decode(r, r.uint32()));\n                    break;\n                case 2:\n                    if (!(m.gradient && m.gradient.length))\n                        m.gradient = [];\n                    m.gradient.push($root.tensorflow.GradientDef.decode(r, r.uint32()));\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return FunctionDefLibrary;\n    })();\n\n    tensorflow.FunctionDef = (function() {\n\n        function FunctionDef(p) {\n            this.attr = {};\n            this.nodeDef = [];\n            this.ret = {};\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        FunctionDef.prototype.signature = null;\n        FunctionDef.prototype.attr = $util.emptyObject;\n        FunctionDef.prototype.nodeDef = $util.emptyArray;\n        FunctionDef.prototype.ret = $util.emptyObject;\n\n        FunctionDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.FunctionDef(), k;\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.signature = $root.tensorflow.OpDef.decode(r, r.uint32());\n                    break;\n                case 5:\n                    r.skip().pos++;\n                    if (m.attr === $util.emptyObject)\n                        m.attr = {};\n                    k = r.string();\n                    r.pos++;\n                    m.attr[k] = $root.tensorflow.AttrValue.decode(r, r.uint32());\n                    break;\n                case 3:\n                    if (!(m.nodeDef && m.nodeDef.length))\n                        m.nodeDef = [];\n                    m.nodeDef.push($root.tensorflow.NodeDef.decode(r, r.uint32()));\n                    break;\n                case 4:\n                    r.skip().pos++;\n                    if (m.ret === $util.emptyObject)\n                        m.ret = {};\n                    k = r.string();\n                    r.pos++;\n                    m.ret[k] = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return FunctionDef;\n    })();\n\n    tensorflow.GradientDef = (function() {\n\n        function GradientDef(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        GradientDef.prototype.functionName = \"\";\n        GradientDef.prototype.gradientFunc = \"\";\n\n        GradientDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.GradientDef();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.functionName = r.string();\n                    break;\n                case 2:\n                    m.gradientFunc = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return GradientDef;\n    })();\n\n    return tensorflow;\n})();\n\nmodule.exports = $root;\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node, ValueType} from '../types';\n\nexport function getParamValue(\n    paramName: string, node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext): ValueType {\n  const param = node.params[paramName];\n  if (param && param.inputIndex !== undefined) {\n    if (param.type === 'tensor') {\n      return getTensor(node.inputNames[param.inputIndex], tensorMap, context);\n    }\n    if (param.type === 'tensors') {\n      const inputs = param.inputIndex === 0 ?\n          (param.inputParamLength === 0 ?\n               node.inputNames :\n               node.inputNames.slice(\n                   param.inputIndex, -param.inputParamLength)) :\n          node.inputNames.splice(param.inputIndex);\n\n      return inputs.map(name => getTensor(name, tensorMap, context));\n    }\n    const data = Array.prototype.slice.call(\n        getTensor(\n            node.inputNames.slice(param.inputIndex)[0], tensorMap, context)\n            .dataSync());\n    return param.type === 'number' ? data[0] : data;\n  }\n  return param && param.value;\n}\n\n/**\n * Retrieve the tensor based on input name by extracting the node name and\n * output index information.\n * @param name Node input name\n * @param tensorsMap Tensors map keyed by the node\n */\nexport function getTensor(\n    name: string, tensorsMap: NamedTensorsMap,\n    context: ExecutionContext): tfc.Tensor {\n  const [nodeName, index] = parseNodeName(name);\n  const contextId = context.currentContextIds.find(contextId => {\n    return !!tensorsMap[getNodeNameWithContextId(nodeName, contextId)];\n  });\n\n  return contextId !== undefined ?\n      tensorsMap[getNodeNameWithContextId(nodeName, contextId)][index] :\n      undefined;\n}\n\n/**\n * Retrieve the tensors based on input name for current context.\n * @param name Node input name\n * @param tensorsMap Tensors map keyed by the node\n */\nexport function getTensorsForCurrentContenxt(\n    name: string, tensorsMap: NamedTensorsMap,\n    context: ExecutionContext): tfc.Tensor[] {\n  return tensorsMap[getNodeNameWithContextId(name, context.currentContextId)];\n}\n\n/**\n * Returns the node name and index from the Node input name.\n * @param inputName The input name of the node, in format of\n * node_name:output_index, i.e. MatMul:0, if the output_index is not set, it is\n * default to 0.\n */\nexport function getNodeNameAndIndex(\n    inputName: string, context?: ExecutionContext): [string, number] {\n  const [nodeName, index] = parseNodeName(inputName);\n\n  return [\n    getNodeNameWithContextId(nodeName, context && context.currentContextId),\n    index\n  ];\n}\n\nfunction getNodeNameWithContextId(name: string, contextId?: string): string {\n  return !!contextId ? `${name}-${contextId}` : name;\n}\n\nexport function parseNodeName(name: string): [string, number] {\n  const index = name.lastIndexOf(':');\n  if (index === -1) return [name, 0];\n\n  const nodeName = name.substring(0, index);\n  return [nodeName, Number(name.substring(index + 1))];\n}\n\nexport function split(arr: number[], size: number) {\n  const res = [];\n  for (let i = 0; i < arr.length; i += size) {\n    res.push(arr.slice(i, i + size));\n  }\n  return res;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'Add',\n    'dlOpName': 'add',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'AddN',\n    'dlOpName': 'addN',\n    'category': 'arithmetic',\n    'params': [{\n      'tfInputIndex': 0,\n      'tfInputParamLength': 0,\n      'dlParamName': 'tensors',\n      'type': 'tensors'\n    }]\n  },\n  {\n    'tfOpName': 'BiasAdd',\n    'dlOpName': 'add',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Sub',\n    'dlOpName': 'sub',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'RealDiv',\n    'dlOpName': 'div',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Div',\n    'dlOpName': 'div',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'FloorDiv',\n    'dlOpName': 'floorDiv',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Mul',\n    'dlOpName': 'mul',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Maximum',\n    'dlOpName': 'maximum',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}\n    ]\n  },\n  {\n    'tfOpName': 'Minimum',\n    'dlOpName': 'minimum',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}\n    ]\n  },\n  {\n    'tfOpName': 'Pow',\n    'dlOpName': 'pow',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'SquaredDifference',\n    'dlOpName': 'squaredDifference',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Mod',\n    'dlOpName': 'mod',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'FloorMod',\n    'dlOpName': 'mod',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'Abs',\n    'dlOpName': 'abs',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Acos',\n    'dlOpName': 'acos',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Asin',\n    'dlOpName': 'asin',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Atan',\n    'dlOpName': 'atan',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Atan2',\n    'dlOpName': 'atan2',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'y', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Ceil',\n    'dlOpName': 'ceil',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ClipByValue',\n    'dlOpName': 'clipByValue',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'clip_value_min',\n        'dlParamName': 'clipValueMin',\n        'type': 'number'\n      },\n      {\n        'tfParamName': 'clip_value_max',\n        'dlParamName': 'clipValueMax',\n        'type': 'number'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Cos',\n    'dlOpName': 'cos',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Cosh',\n    'dlOpName': 'cosh',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Elu',\n    'dlOpName': 'elu',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Exp',\n    'dlOpName': 'exp',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Floor',\n    'dlOpName': 'floor',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Log',\n    'dlOpName': 'log',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Neg',\n    'dlOpName': 'neg',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Relu',\n    'dlOpName': 'relu',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Relu6',\n    'dlOpName': 'clipByValue',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {'dlParamName': 'clipValueMin', 'type': 'number', 'defaultValue': 0},\n      {'dlParamName': 'clipValueMax', 'type': 'number', 'defaultValue': 6}\n    ]\n  },\n  {\n    'tfOpName': 'Selu',\n    'dlOpName': 'selu',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Sigmoid',\n    'dlOpName': 'sigmoid',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Sin',\n    'dlOpName': 'sin',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Sinh',\n    'dlOpName': 'sinh',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Sqrt',\n    'dlOpName': 'sqrt',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Rsqrt',\n    'dlOpName': 'rsqrt',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Square',\n    'dlOpName': 'square',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Tan',\n    'dlOpName': 'tan',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Tanh',\n    'dlOpName': 'tanh',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Sign',\n    'dlOpName': 'sign',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Round',\n    'dlOpName': 'round',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Expm1',\n    'dlOpName': 'expm1',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Log1p',\n    'dlOpName': 'log1p',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Reciprocal',\n    'dlOpName': 'reciprocal',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Reciprocal',\n    'dlOpName': 'reciprocal',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Softplus',\n    'dlOpName': 'softplus',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Asinh',\n    'dlOpName': 'asinh',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Acosh',\n    'dlOpName': 'acosh',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Atanh',\n    'dlOpName': 'atanh',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Erf',\n    'dlOpName': 'erf',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Prod',\n    'dlOpName': 'prod',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'axes', 'type': 'number[]'}, {\n        'tfParamName': 'keep_dims',\n        'dlParamName': 'keepDims',\n        'type': 'bool',\n        'notSupported': true\n      },\n      {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LeakyRelu',\n    'dlOpName': 'leakyRelu',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'alpha',\n        'dlParamName': 'alpha',\n        'type': 'number',\n        'defaultValue': 0.2\n      },\n      {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'LoopCond',\n    'dlOpName': 'loopCond',\n    'category': 'control',\n    'params': [{'tfInputIndex': 0, 'dlParamName': 'pred', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Switch',\n    'dlOpName': 'switch',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'data', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'pred', 'type': 'tensor'}\n    ]\n  },\n  {\n    'tfOpName': 'Merge',\n    'dlOpName': 'merge',\n    'category': 'control',\n    'params': [{\n      'tfInputIndex': 0,\n      'tfInputParamLength': 0,\n      'dlParamName': 'tensors',\n      'type': 'tensors'\n    }]\n  },\n  {\n    'tfOpName': 'Enter',\n    'dlOpName': 'enter',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'tensor', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfParamName': 'frame_name',\n        'dlParamName': 'frameName',\n        'type': 'string'\n      },\n      {\n        'tfParamName': 'is_constant',\n        'dlParamName': 'isConstant',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Exit',\n    'dlOpName': 'exit',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'tensor', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'NextIteration',\n    'dlOpName': 'nextIteration',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'tensor', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayV3',\n    'dlOpName': 'tensorArray',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'size', 'type': 'number'},\n      {'tfParamName': 'dtype', 'dlParamName': 'dtype', 'type': 'dtype'}, {\n        'tfParamName': 'element_shape',\n        'dlParamName': 'elementShape',\n        'type': 'shape'\n      },\n      {\n        'tfParamName': 'dynamic_size',\n        'dlParamName': 'dynamicSize',\n        'type': 'bool'\n      },\n      {\n        'tfParamName': 'clear_after_read',\n        'dlParamName': 'clearAfterRead',\n        'type': 'bool'\n      },\n      {\n        'tfParamName': 'identical_element_shapes',\n        'dlParamName': 'identicalElementShapes',\n        'type': 'bool'\n      },\n      {\n        'tfParamName': 'tensor_array_name',\n        'dlParamName': 'name',\n        'type': 'string'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayWriteV3',\n    'dlOpName': 'tensorArrayWrite',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'tensorArrayId', 'type': 'number'},\n      {'tfInputIndex': 1, 'dlParamName': 'index', 'type': 'number'},\n      {'tfInputIndex': 2, 'dlParamName': 'tensor', 'type': 'tensor'},\n      {'tfInputIndex': 3, 'dlParamName': 'flowIn', 'type': 'number'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayReadV3',\n    'dlOpName': 'tensorArrayRead',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'tensorArrayId', 'type': 'number'},\n      {'tfInputIndex': 1, 'dlParamName': 'index', 'type': 'number'},\n      {'tfInputIndex': 2, 'dlParamName': 'flowIn', 'type': 'number'}, {\n        'tfParamName': 'dtype',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayGatherV3',\n    'dlOpName': 'tensorArrayGather',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'tensorArrayId', 'type': 'number'},\n      {'tfInputIndex': 1, 'dlParamName': 'indices', 'type': 'number[]'},\n      {'tfInputIndex': 2, 'dlParamName': 'flowIn', 'type': 'number'},\n      {'tfParamName': 'dtype', 'dlParamName': 'dtype', 'type': 'dtype'}, {\n        'tfParamName': 'element_shape',\n        'dlParamName': 'elementShape',\n        'type': 'shape'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayScatterV3',\n    'dlOpName': 'tensorArrayScatter',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'tensorArrayId', 'type': 'number'},\n      {'tfInputIndex': 1, 'dlParamName': 'indices', 'type': 'number[]'},\n      {'tfInputIndex': 2, 'dlParamName': 'tensor', 'type': 'tensor'},\n      {'tfInputIndex': 3, 'dlParamName': 'flowIn', 'type': 'number'},\n      {'tfParamName': 'T', 'dlParamName': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayConcatV3',\n    'dlOpName': 'tensorArrayConcat',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'tensorArrayId', 'type': 'number'},\n      {'tfInputIndex': 1, 'dlParamName': 'flowIn', 'type': 'number'},\n      {'tfParamName': 'dtype', 'dlParamName': 'dtype', 'type': 'dtype'}, {\n        'tfParamName': 'element_shape_except0',\n        'dlParamName': 'elementShapeExcept0',\n        'type': 'shape',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArraySplitV3',\n    'dlOpName': 'tensorArraySplit',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'tensorArrayId', 'type': 'number'},\n      {'tfInputIndex': 1, 'dlParamName': 'tensor', 'type': 'tensor'},\n      {'tfInputIndex': 2, 'dlParamName': 'lengths', 'type': 'number[]'},\n      {'tfInputIndex': 3, 'dlParamName': 'flowIn', 'type': 'number'},\n      {'tfParamName': 'T', 'dlParamName': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArraySizeV3',\n    'dlOpName': 'tensorArraySize',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'tensorArrayId', 'type': 'number'},\n      {'tfInputIndex': 1, 'dlParamName': 'flowIn', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayCloseV3',\n    'dlOpName': 'tensorArrayClose',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'tensorArrayId', 'type': 'number'}\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'AvgPool',\n    'dlOpName': 'avgPool',\n    'category': 'convolution',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfParamName': 'strides', 'dlParamName': 'strides', 'type': 'number[]'},\n      {'tfParamName': 'padding', 'dlParamName': 'pad', 'type': 'string'}, {\n        'tfParamName': 'data_format',\n        'dlParamName': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      },\n      {'tfParamName': 'ksize', 'dlParamName': 'kernelSize', 'type': 'number[]'},\n      {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'MaxPool',\n    'dlOpName': 'maxPool',\n    'category': 'convolution',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfParamName': 'strides', 'dlParamName': 'strides', 'type': 'number[]'},\n      {'tfParamName': 'padding', 'dlParamName': 'pad', 'type': 'string'}, {\n        'tfParamName': 'data_format',\n        'dlParamName': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      },\n      {'tfParamName': 'ksize', 'dlParamName': 'kernelSize', 'type': 'number[]'},\n      {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Conv1D',\n    'dlOpName': 'conv1d',\n    'category': 'convolution',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'filter', 'type': 'tensor'},\n      {'tfParamName': 'stride', 'dlParamName': 'stride', 'type': 'number'},\n      {'tfParamName': 'padding', 'dlParamName': 'pad', 'type': 'string'}, {\n        'tfParamName': 'data_format',\n        'dlParamName': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NWC'\n      },\n      {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfParamName': 'dilation',\n        'dlParamName': 'dilation',\n        'type': 'number',\n        'defaultValue': 1\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Conv2D',\n    'dlOpName': 'conv2d',\n    'category': 'convolution',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'filter', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {'tfParamName': 'strides', 'dlParamName': 'strides', 'type': 'number[]'},\n      {'tfParamName': 'padding', 'dlParamName': 'pad', 'type': 'string'}, {\n        'tfParamName': 'useCudnnOnGpu',\n        'dlParamName': 'useCudnnOnGpu',\n        'type': 'bool'\n      },\n      {\n        'tfParamName': 'data_format',\n        'dlParamName': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {\n        'tfParamName': 'dilations',\n        'dlParamName': 'dilations',\n        'type': 'number[]'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Conv2DBackpropInput',\n    'dlOpName': 'conv2dTranspose',\n    'category': 'convolution',\n    'params': [\n      {'tfInputIndex': 2, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'filter', 'type': 'tensor'},\n      {'tfInputIndex': 0, 'dlParamName': 'outputShape', 'type': 'number[]'},\n      {'tfParamName': 'strides', 'dlParamName': 'strides', 'type': 'number[]'},\n      {'tfParamName': 'padding', 'dlParamName': 'pad', 'type': 'string'}, {\n        'tfParamName': 'data_format',\n        'dlParamName': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'DepthwiseConv2d',\n    'dlOpName': 'depthwiseConv2d',\n    'category': 'convolution',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'input', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'filter', 'type': 'tensor'},\n      {'tfParamName': 'strides', 'dlParamName': 'strides', 'type': 'number[]'},\n      {'tfParamName': 'padding', 'dlParamName': 'pad', 'type': 'string'}, {\n        'tfParamName': 'data_format',\n        'dlParamName': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {\n        'tfParamName': 'dilations',\n        'dlParamName': 'dilations',\n        'type': 'number[]'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'DepthwiseConv2dNative',\n    'dlOpName': 'depthwiseConv2d',\n    'category': 'convolution',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'input', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'filter', 'type': 'tensor'},\n      {'tfParamName': 'strides', 'dlParamName': 'strides', 'type': 'number[]'},\n      {'tfParamName': 'padding', 'dlParamName': 'pad', 'type': 'string'}, {\n        'tfParamName': 'data_format',\n        'dlParamName': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {\n        'tfParamName': 'dilations',\n        'dlParamName': 'dilations',\n        'type': 'number[]'\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'Fill',\n    'dlOpName': 'fill',\n    'category': 'creation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'shape', 'type': 'number[]'},\n      {'tfInputIndex': 1, 'dlParamName': 'value', 'type': 'number'},\n      {'tfParamName': 'T', 'dlParamName': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'LinSpace',\n    'dlOpName': 'linspace',\n    'category': 'creation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'start', 'type': 'number'},\n      {'tfInputIndex': 1, 'dlParamName': 'stop', 'type': 'number'},\n      {'tfInputIndex': 2, 'dlParamName': 'num', 'type': 'number'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'OneHot',\n    'dlOpName': 'oneHot',\n    'category': 'creation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'indices', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'depth', 'type': 'number'}, {\n        'tfInputIndex': 2,\n        'dlParamName': 'onValue',\n        'type': 'number',\n        'defaultValue': 1\n      },\n      {\n        'tfInputIndex': 3,\n        'dlParamName': 'offValue',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfParamName': 'axis',\n        'dlParamName': 'axis',\n        'type': 'number',\n        'notSupported': true\n      },\n      {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Ones',\n    'dlOpName': 'ones',\n    'category': 'creation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'shape', 'type': 'number[]'},\n      {'tfParamName': 'T', 'dlParamName': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'OnesLike',\n    'dlOpName': 'onesLike',\n    'category': 'creation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfParamName': 'dtype', 'dlParamName': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'RandomUniform',\n    'dlOpName': 'randomUniform',\n    'category': 'creation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'shape', 'type': 'number[]'}, {\n        'tfParamName': 'minval',\n        'dlParamName': 'minval',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfParamName': 'maxval',\n        'dlParamName': 'maxval',\n        'type': 'number',\n        'defaultValue': 1\n      },\n      {'tfParamName': 'dtype', 'dlParamName': 'dtype', 'type': 'dtype'}, {\n        'tfParamName': 'seed',\n        'dlParamName': 'seed',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfParamName': 'seed2',\n        'dlParamName': 'seed2',\n        'type': 'number',\n        'defaultValue': 0,\n        'notSupported': true\n      },\n      {\n        'tfParamName': 'T',\n        'dlParamName': 'T',\n        'type': 'number',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Range',\n    'dlOpName': 'range',\n    'category': 'creation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'start', 'type': 'number'},\n      {'tfInputIndex': 1, 'dlParamName': 'stop', 'type': 'number'}, {\n        'tfInputIndex': 2,\n        'dlParamName': 'step',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {'tfParamName': 'Tidx', 'dlParamName': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'truncatedNormal',\n    'dlOpName': 'truncatedNormal',\n    'category': 'creation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'shape', 'type': 'number[]'}, {\n        'tfParamName': 'means',\n        'dlParamName': 'mean',\n        'type': 'number',\n        'defaultValue': 0.0\n      },\n      {\n        'tfParamName': 'stddev',\n        'dlParamName': 'stdDev',\n        'type': 'number',\n        'defaultValue': 1.0\n      },\n      {'tfParamName': 'seed', 'dlParamName': 'seed', 'type': 'number'}, {\n        'tfParamName': 'seed2',\n        'dlParamName': 'seed2',\n        'type': 'number',\n        'defaultValue': 0,\n        'notSupported': true\n      },\n      {'tfParamName': 'dtype', 'dlParamName': 'dtype', 'type': 'dtype'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'T',\n        'type': 'number',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Zeros',\n    'dlOpName': 'zeros',\n    'category': 'creation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'shape', 'type': 'number[]'},\n      {'tfParamName': 'T', 'dlParamName': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'ZerosLike',\n    'dlOpName': 'zerosLike',\n    'category': 'creation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfParamName': 'T', 'dlParamName': 'dtype', 'type': 'dtype'}\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'NonMaxSuppressionV2',\n    'dlOpName': 'nonMaxSuppression',\n    'category': 'dynamic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'boxes', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'scores', 'type': 'tensor'},\n      {'tfInputIndex': 2, 'dlParamName': 'maxOutputSize', 'type': 'number'},\n      {'tfInputIndex': 3, 'dlParamName': 'iouThreshold', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'NonMaxSuppressionV3',\n    'dlOpName': 'nonMaxSuppression',\n    'category': 'dynamic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'boxes', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'scores', 'type': 'tensor'},\n      {'tfInputIndex': 2, 'dlParamName': 'maxOutputSize', 'type': 'number'},\n      {'tfInputIndex': 3, 'dlParamName': 'iouThreshold', 'type': 'number'},\n      {'tfInputIndex': 4, 'dlParamName': 'scoreThreshold', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'Where',\n    'dlOpName': 'whereAsync',\n    'category': 'dynamic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'condition', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ListDiff',\n    'dlOpName': 'setdiff1dAsync',\n    'category': 'dynamic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'y', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [{\n  'tfOpName': 'TopKV2',\n  'dlOpName': 'topK',\n  'category': 'evaluation',\n  'params': [\n    {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n    {'tfInputIndex': 1, 'dlParamName': 'k', 'type': 'number'},\n    {'tfParamName': 'sorted', 'dlParamName': 'sorted', 'type': 'bool'}\n  ]\n}];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'PlaceholderWithDefault',\n    'dlOpName': 'placeholder',\n    'category': 'graph',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'default', 'type': 'tensor'},\n      {'tfParamName': 'shape', 'dlParamName': 'shape', 'type': 'shape'},\n      {'tfParamName': 'dtype', 'dlParamName': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'Placeholder',\n    'dlOpName': 'placeholder',\n    'category': 'graph',\n    'params': [\n      {'tfParamName': 'shape', 'dlParamName': 'shape', 'type': 'shape'},\n      {'tfParamName': 'dtype', 'dlParamName': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {'tfOpName': 'Const', 'dlOpName': 'const', 'category': 'graph'}, {\n    'tfOpName': 'Identity',\n    'dlOpName': 'identity',\n    'category': 'graph',\n    'params': [{'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Snapshot',\n    'dlOpName': 'snapshot',\n    'category': 'graph',\n    'params': [{'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Rank',\n    'dlOpName': 'rank',\n    'category': 'graph',\n    'params': [{'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Size',\n    'dlOpName': 'size',\n    'category': 'graph',\n    'params': [{'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Shape',\n    'dlOpName': 'shape',\n    'category': 'graph',\n    'params': [{'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'ShapeN',\n    'dlOpName': 'shapeN',\n    'category': 'graph',\n    'params': [{\n      'tfInputIndex': 0,\n      'tfInputParamLength': 0,\n      'dlParamName': 'x',\n      'type': 'tensors'\n    }]\n  },\n  {\n    'tfOpName': 'Print',\n    'dlOpName': 'print',\n    'category': 'graph',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfInputIndex': 1,\n        'tfInputParamLength': 1,\n        'dlParamName': 'data',\n        'type': 'tensors'\n      },\n      {'tfParamName': 'message', 'dlParamName': 'message', 'type': 'string'}, {\n        'tfParamName': 'first_n',\n        'dlParamName': 'firstN',\n        'type': 'number',\n        'notSupprted': true\n      },\n      {\n        'tfParamName': 'summarize',\n        'dlParamName': 'summarize',\n        'type': 'number',\n        'defaultValue': 3\n      }\n    ]\n  },\n  {'tfOpName': 'NoOp', 'dlOpName': 'noop', 'category': 'graph', 'params': []}, {\n    'tfOpName': 'StopGradient',\n    'dlOpName': 'stopGradient',\n    'category': 'graph',\n    'params': [{'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'FakeQuantWithMinMaxVars',\n    'dlOpName': 'fakeQuantWithMinMaxVars',\n    'category': 'graph',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfParamName': 'min', 'dlParamName': 'min', 'type': 'number'},\n      {'tfParamName': 'max', 'dlParamName': 'max', 'type': 'number'}\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'ResizeBilinear',\n    'dlOpName': 'resizeBilinear',\n    'category': 'image',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'images', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'size', 'type': 'number[]'}, {\n        'tfParamName': 'align_corners',\n        'dlParamName': 'alignCorners',\n        'type': 'bool'\n      },\n      {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ResizeNearestNeighbor',\n    'dlOpName': 'resizeNearestNeighbor',\n    'category': 'image',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'images', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'size', 'type': 'number[]'}, {\n        'tfParamName': 'align_corners',\n        'dlParamName': 'alignCorners',\n        'type': 'bool'\n      },\n      {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'CropAndResize',\n    'dlOpName': 'cropAndResize',\n    'category': 'image',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'image', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'boxes', 'type': 'tensor'},\n      {'tfInputIndex': 2, 'dlParamName': 'boxInd', 'type': 'tensor'},\n      {'tfInputIndex': 3, 'dlParamName': 'cropSize', 'type': 'number[]'},\n      {'tfParamName': 'method', 'dlParamName': 'method', 'type': 'string'}, {\n        'tfParamName': 'extrapolation_value',\n        'dlParamName': 'extrapolationValue',\n        'type': 'number'\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'Equal',\n    'dlOpName': 'equal',\n    'category': 'logical',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'NotEqual',\n    'dlOpName': 'notEqual',\n    'category': 'logical',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Greater',\n    'dlOpName': 'greater',\n    'category': 'logical',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'GreaterEqual',\n    'dlOpName': 'greaterEqual',\n    'category': 'logical',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Less',\n    'dlOpName': 'less',\n    'category': 'logical',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LessEqual',\n    'dlOpName': 'lessEqual',\n    'category': 'logical',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LogicalAnd',\n    'dlOpName': 'logicalAnd',\n    'category': 'logical',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LogicalNot',\n    'dlOpName': 'logicalNot',\n    'category': 'logical',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LogicalOr',\n    'dlOpName': 'logicalOr',\n    'category': 'logical',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Select',\n    'dlOpName': 'where',\n    'category': 'logical',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'condition', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 2, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'MatMul',\n    'dlOpName': 'matMul',\n    'category': 'matrices',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'transpose_a',\n        'dlParamName': 'transposeA',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfParamName': 'transpose_b',\n        'dlParamName': 'transposeB',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'BatchMatMul',\n    'dlOpName': 'matMul',\n    'category': 'matrices',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'adj_x',\n        'dlParamName': 'transposeA',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfParamName': 'adj_y',\n        'dlParamName': 'transposeB',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Transpose',\n    'dlOpName': 'transpose',\n    'category': 'matrices',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'perm', 'type': 'number[]'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'FusedBatchNorm',\n    'dlOpName': 'batchNormalization',\n    'category': 'normalization',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'scale', 'type': 'tensor'},\n      {'tfInputIndex': 2, 'dlParamName': 'offset', 'type': 'tensor'},\n      {'tfInputIndex': 3, 'dlParamName': 'mean', 'type': 'tensor'},\n      {'tfInputIndex': 4, 'dlParamName': 'variance', 'type': 'tensor'}, {\n        'tfParamName': 'epsilon',\n        'dlParamName': 'epsilon',\n        'type': 'number',\n        'defaultValue': 0.001\n      },\n      {\n        'tfParamName': 'data_format',\n        'dlParamName': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'FusedBatchNormV2',\n    'dlOpName': 'batchNormalization',\n    'category': 'normalization',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'scale', 'type': 'tensor'},\n      {'tfInputIndex': 2, 'dlParamName': 'offset', 'type': 'tensor'},\n      {'tfInputIndex': 3, 'dlParamName': 'mean', 'type': 'tensor'},\n      {'tfInputIndex': 4, 'dlParamName': 'variance', 'type': 'tensor'}, {\n        'tfParamName': 'epsilon',\n        'dlParamName': 'epsilon',\n        'type': 'number',\n        'defaultValue': 0.001\n      },\n      {\n        'tfParamName': 'data_format',\n        'dlParamName': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LRN',\n    'dlOpName': 'localResponseNormalization',\n    'category': 'normalization',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'depth_radius',\n        'dlParamName': 'radius',\n        'type': 'number',\n        'defaultValue': 5\n      },\n      {\n        'tfParamName': 'bias',\n        'dlParamName': 'bias',\n        'type': 'number',\n        'defaultValue': 1.0\n      },\n      {\n        'tfParamName': 'alpha',\n        'dlParamName': 'alpha',\n        'type': 'number',\n        'defaultValue': 1.0\n      },\n      {\n        'tfParamName': 'beta',\n        'dlParamName': 'beta',\n        'type': 'number',\n        'defaultValue': 0.5\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Softmax',\n    'dlOpName': 'softmax',\n    'category': 'normalization',\n    'params': [{'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'LogSoftmax',\n    'dlOpName': 'logSoftmax',\n    'category': 'normalization',\n    'params': [{'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'SparseToDense',\n    'dlOpName': 'sparseToDense',\n    'category': 'normalization',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'sparseIndices', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'outputShape', 'type': 'number[]'},\n      {'tfInputIndex': 2, 'dlParamName': 'sparseValues', 'type': 'tensor'},\n      {'tfInputIndex': 3, 'dlParamName': 'defaultValue', 'type': 'tensor'}, {\n        'tfParamName': 'validate_indices',\n        'dlParamName': 'validateIndices',\n        'type': 'bool',\n        'defaultValue': true,\n        'notSupported': true\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'Max',\n    'dlOpName': 'max',\n    'category': 'reduction',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'axis', 'type': 'number[]'},\n      {'tfParamName': 'keep_dims', 'dlParamName': 'keepDims', 'type': 'bool'}\n    ]\n  },\n  {\n    'tfOpName': 'Mean',\n    'dlOpName': 'mean',\n    'category': 'reduction',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'axis', 'type': 'number[]'},\n      {'tfParamName': 'keep_dims', 'dlParamName': 'keepDims', 'type': 'bool'}\n    ]\n  },\n  {\n    'tfOpName': 'Min',\n    'dlOpName': 'min',\n    'category': 'reduction',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'axis', 'type': 'number[]'},\n      {'tfParamName': 'keep_dims', 'dlParamName': 'keepDims', 'type': 'bool'}\n    ]\n  },\n  {\n    'tfOpName': 'Sum',\n    'dlOpName': 'sum',\n    'category': 'reduction',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'axis', 'type': 'number[]'},\n      {'tfParamName': 'keep_dims', 'dlParamName': 'keepDims', 'type': 'bool'}\n    ]\n  },\n  {\n    'tfOpName': 'All',\n    'dlOpName': 'all',\n    'category': 'reduction',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'axis', 'type': 'number[]'},\n      {'tfParamName': 'keep_dims', 'dlParamName': 'keepDims', 'type': 'bool'}\n    ]\n  },\n  {\n    'tfOpName': 'Any',\n    'dlOpName': 'any',\n    'category': 'reduction',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'axis', 'type': 'number[]'},\n      {'tfParamName': 'keep_dims', 'dlParamName': 'keepDims', 'type': 'bool'}\n    ]\n  },\n  {\n    'tfOpName': 'ArgMax',\n    'dlOpName': 'argMax',\n    'category': 'reduction',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'axis', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'ArgMin',\n    'dlOpName': 'argMin',\n    'category': 'reduction',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'axis', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'Prod',\n    'dlOpName': 'prod',\n    'category': 'reduction',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'axis', 'type': 'number[]'}, {\n        'tfParamName': 'keep_dims',\n        'dlParamName': 'keepDims',\n        'type': 'bool'\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'ConcatV2',\n    'dlOpName': 'concat',\n    'category': 'slice_join',\n    'params': [\n      {\n        'tfInputIndex': 0,\n        'tfInputParamLength': 1,\n        'dlParamName': 'tensors',\n        'type': 'tensors'\n      },\n      {'tfInputIndex': -1, 'dlParamName': 'axis', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'Concat',\n    'dlOpName': 'concat',\n    'category': 'slice_join',\n    'params': [\n      {\n        'tfInputIndex': 1,\n        'tfInputParamLength': 1,\n        'dlParamName': 'tensors',\n        'type': 'tensors'\n      },\n      {'tfInputIndex': 0, 'dlParamName': 'axis', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'GatherV2',\n    'dlOpName': 'gather',\n    'category': 'slice_join',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'indices', 'type': 'tensor'}, {\n        'tfInputIndex': 2,\n        'dlParamName': 'axis',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Gather',\n    'dlOpName': 'gather',\n    'category': 'slice_join',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'indices', 'type': 'tensor'}, {\n        'tfParamName': 'axis',\n        'dlParamName': 'axis',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfParamName': 'validate_indices',\n        'dlParamName': 'validateIndices',\n        'type': 'bool',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Reverse',\n    'dlOpName': 'reverse',\n    'category': 'slice_join',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfInputIndex': 1,\n        'dlParamName': 'dims',\n        'type': 'bool',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ReverseV2',\n    'dlOpName': 'reverse',\n    'category': 'slice_join',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'axis', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'Slice',\n    'dlOpName': 'slice',\n    'category': 'slice_join',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'begin', 'type': 'number[]'},\n      {'tfInputIndex': 2, 'dlParamName': 'size', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'StridedSlice',\n    'dlOpName': 'stridedSlice',\n    'category': 'slice_join',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'begin', 'type': 'number[]'},\n      {'tfInputIndex': 2, 'dlParamName': 'end', 'type': 'number[]'},\n      {'tfInputIndex': 3, 'dlParamName': 'strides', 'type': 'number[]'}, {\n        'tfParamName': 'begin_mask',\n        'dlParamName': 'beginMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfParamName': 'end_mask',\n        'dlParamName': 'endMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfParamName': 'new_axis_mask',\n        'dlParamName': 'newAxisMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfParamName': 'ellipsis_mask',\n        'dlParamName': 'ellipsisMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfParamName': 'shrink_axis_mask',\n        'dlParamName': 'shrinkAxisMask',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Pack',\n    'dlOpName': 'stack',\n    'category': 'slice_join',\n    'params': [\n      {\n        'tfInputIndex': 0,\n        'tfInputParamLength': 0,\n        'dlParamName': 'tensors',\n        'type': 'tensors'\n      },\n      {\n        'tfParamName': 'axis',\n        'dlParamName': 'axis',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Unpack',\n    'dlOpName': 'unstack',\n    'category': 'slice_join',\n    'params': [\n      {\n        'tfInputIndex': 0,\n        'tfInputParamLength': 0,\n        'dlParamName': 'tensor',\n        'type': 'tensor'\n      },\n      {\n        'tfParamName': 'axis',\n        'dlParamName': 'axis',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfParamName': 'num',\n        'dlParamName': 'num',\n        'type': 'number',\n        'defaultValue': 0,\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Tile',\n    'dlOpName': 'tile',\n    'category': 'slice_join',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'reps', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'Split',\n    'dlOpName': 'split',\n    'category': 'slice_join',\n    'params': [\n      {\n        'tfInputIndex': 0,\n        'dlParamName': 'axis',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {'tfInputIndex': 1, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'num_split',\n        'dlParamName': 'numOrSizeSplits',\n        'type': 'number',\n        'defaultValue': 1\n      }\n    ]\n  },\n  {\n    'tfOpName': 'SplitV',\n    'dlOpName': 'split',\n    'category': 'slice_join',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'numOrSizeSplits', 'type': 'number[]'},\n      {\n        'tfInputIndex': 2,\n        'dlParamName': 'axis',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ScatterNd',\n    'dlOpName': 'scatterNd',\n    'category': 'slice_join',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'indices', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'values', 'type': 'tensor'},\n      {'tfInputIndex': 2, 'dlParamName': 'shape', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'GatherNd',\n    'dlOpName': 'gatherNd',\n    'category': 'slice_join',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'indices', 'type': 'tensor'}\n    ]\n  },\n  {\n    'tfOpName': 'SparseToDense',\n    'dlOpName': 'sparseToDense',\n    'category': 'slice_join',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'sparseIndices', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'outputShape', 'type': 'number[]'},\n      {'tfInputIndex': 2, 'dlParamName': 'sparseValues', 'type': 'tensor'},\n      {'tfInputIndex': 3, 'dlParamName': 'defaultValue', 'type': 'tensor'}, {\n        'tfParamName': 'validate_indices',\n        'dlParamName': 'validateIndices',\n        'type': 'bool',\n        'defaultValue': false,\n        'notSupported': true\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'FFT',\n    'dlOpName': 'fft',\n    'category': 'spectral',\n    'params': [{'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'IFFT',\n    'dlOpName': 'ifft',\n    'category': 'spectral',\n    'params': [{'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'RFFT',\n    'dlOpName': 'rfft',\n    'category': 'spectral',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfInputIndex': 1,\n        'dlParamName': 'fft_length',\n        'type': 'number',\n        'unsupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'IRFFT',\n    'dlOpName': 'irfft',\n    'category': 'spectral',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfInputIndex': 1,\n        'dlParamName': 'fft_length',\n        'type': 'number',\n        'unsupported': true\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'Cast',\n    'dlOpName': 'cast',\n    'category': 'transformation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'SrcT',\n        'dlParamName': 'sdtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {'tfParamName': 'DstT', 'dlParamName': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'ExpandDims',\n    'dlOpName': 'expandDims',\n    'category': 'transformation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfInputIndex': 1,\n        'tfParamNameDeprecated': 'dim',\n        'dlParamName': 'axis',\n        'type': 'number'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Pad',\n    'dlOpName': 'pad',\n    'category': 'transformation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'padding', 'type': 'number[]'}, {\n        'tfParamName': 'constant_value',\n        'dlParamName': 'constantValue',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'PadV2',\n    'dlOpName': 'pad',\n    'category': 'transformation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'padding', 'type': 'number[]'}, {\n        'tfInputIndex': 2,\n        'dlParamName': 'constantValue',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Reshape',\n    'dlOpName': 'reshape',\n    'category': 'transformation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'shape', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'Squeeze',\n    'dlOpName': 'squeeze',\n    'category': 'transformation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'axis',\n        'tfParamNameDeprecated': 'squeeze_dims',\n        'dlParamName': 'axis',\n        'type': 'number[]'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'SpaceToBatchND',\n    'dlOpName': 'spaceToBatchND',\n    'category': 'transformation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'blockShape', 'type': 'number[]'},\n      {'tfInputIndex': 2, 'dlParamName': 'paddings', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'BatchToSpaceND',\n    'dlOpName': 'batchToSpaceND',\n    'category': 'transformation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'blockShape', 'type': 'number[]'},\n      {'tfInputIndex': 2, 'dlParamName': 'crops', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'DepthToSpace',\n    'dlOpName': 'depthToSpace',\n    'category': 'transformation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'block_size',\n        'dlParamName': 'blockSize',\n        'type': 'number'\n      },\n      {\n        'tfParamName': 'data_format',\n        'dlParamName': 'dataFormat',\n        'type': 'string'\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {DataType} from '@tensorflow/tfjs-core';\n\nimport {tensorflow} from '../data/compiled_api';\n\nimport {getNodeNameAndIndex} from './executors/utils';\nimport * as arithmetic from './op_list/arithmetic';\nimport * as basicMath from './op_list/basic_math';\nimport * as control from './op_list/control';\nimport * as convolution from './op_list/convolution';\nimport * as creation from './op_list/creation';\nimport * as dynamic from './op_list/dynamic';\nimport * as evaluation from './op_list/evaluation';\nimport * as graph from './op_list/graph';\nimport * as image from './op_list/image';\nimport * as logical from './op_list/logical';\nimport * as matrices from './op_list/matrices';\nimport * as normalization from './op_list/normalization';\nimport * as reduction from './op_list/reduction';\nimport * as sliceJoin from './op_list/slice_join';\nimport * as spectral from './op_list/spectral';\nimport * as transformation from './op_list/transformation';\nimport {Graph, Node, OpMapper, ParamValue} from './types';\n\nconst CONTROL_FLOW_OPS = ['Switch', 'Merge', 'Enter', 'Exit', 'NextIteration'];\nconst DYNAMIC_SHAPE_OPS =\n    ['NonMaxSuppressionV2', 'NonMaxSuppressionV3', 'Where'];\n\nexport class OperationMapper {\n  private static _instance: OperationMapper;\n\n  private opMappers: {[key: string]: OpMapper};\n\n  // Singleton instance for the mapper\n  public static get Instance() {\n    return this._instance || (this._instance = new this());\n  }\n\n  // Loads the op mapping from the JSON file.\n  private constructor() {\n    const ops = [\n      arithmetic, basicMath, control, convolution, creation, dynamic,\n      evaluation, logical, image, graph, matrices, normalization, reduction,\n      sliceJoin, spectral, transformation\n    ];\n    const mappersJson: OpMapper[] = [].concat.apply([], ops.map(op => op.json));\n\n    this.opMappers = mappersJson.reduce<{[key: string]: OpMapper}>(\n        (map, mapper: OpMapper) => {\n          map[mapper.tfOpName] = mapper;\n          return map;\n        },\n        {});\n  }\n\n  private isControlFlow(node: tensorflow.INodeDef) {\n    return CONTROL_FLOW_OPS.some(op => op === node.op);\n  }\n\n  private isDynamicShape(node: tensorflow.INodeDef) {\n    return DYNAMIC_SHAPE_OPS.some(op => op === node.op);\n  }\n  // Converts the model from Tensorflow GraphDef to local representation for\n  // deeplearn.js API\n  transformGraph(graph: tensorflow.IGraphDef): Graph {\n    const tfNodes = graph.node;\n    let withControlFlow = false;\n    let withDynamicShape = false;\n    const placeholders: Node[] = [];\n    const weights: Node[] = [];\n    const nodes = tfNodes.reduce<{[key: string]: Node}>((map, node) => {\n      map[node.name] = this.mapNode(node);\n      if (this.isControlFlow(node)) withControlFlow = true;\n      if (this.isDynamicShape(node)) withDynamicShape = true;\n      if (node.op === 'Placeholder') placeholders.push(map[node.name]);\n      if (node.op === 'Const') weights.push(map[node.name]);\n      return map;\n    }, {});\n\n    const inputs: Node[] = [];\n    const outputs: Node[] = [];\n    Object.keys(nodes).forEach(key => {\n      const node = nodes[key];\n      node.inputNames.forEach(name => {\n        const [nodeName, ] = getNodeNameAndIndex(name);\n        node.inputs.push(nodes[nodeName]);\n        nodes[nodeName].children.push(node);\n      });\n      if (node.inputs.length === 0) inputs.push(node);\n    });\n\n    Object.keys(nodes).forEach(key => {\n      const node = nodes[key];\n      if (node.children.length === 0) outputs.push(node);\n    });\n\n    return {\n      nodes,\n      inputs,\n      outputs,\n      weights,\n      placeholders,\n      withControlFlow,\n      withDynamicShape\n    };\n  }\n\n  private mapNode(node: tensorflow.INodeDef): Node {\n    const mapper = this.opMappers[node.op];\n    if (mapper === undefined) {\n      throw new Error('Tensorflow Op is not supported: ' + node.op);\n    }\n    const newNode: Node = {\n      name: node.name,\n      op: mapper.dlOpName,\n      category: mapper.category,\n      inputNames:\n          (node.input ||\n           []).map(input => input.startsWith('^') ? input.substr(1) : input),\n      inputs: [],\n      children: [],\n      params: {}\n    };\n\n    if (!!mapper.params) {\n      newNode.params = mapper.params.reduce<{[key: string]:\n                                                 ParamValue}>((map, param) => {\n        const inputIndex = param.tfInputIndex;\n        const inputParamLength = param.tfInputParamLength;\n        const type = param.type;\n        let value = undefined;\n        if (inputIndex === undefined) {\n          switch (param.type) {\n            case 'string':\n              value = this.getStringParam(\n                  node.attr, param.tfParamName, param.defaultValue as string);\n\n              if (value === undefined && !!param.tfParamNameDeprecated) {\n                value = this.getStringParam(\n                    node.attr, param.tfParamNameDeprecated,\n                    param.defaultValue as string);\n              }\n              break;\n            case 'number':\n              value = this.getNumberParam(\n                  node.attr, param.tfParamName,\n                  (param.defaultValue || 0) as number);\n              if (value === undefined && !!param.tfParamNameDeprecated) {\n                value = this.getNumberParam(\n                    node.attr, param.tfParamNameDeprecated,\n                    param.defaultValue as number);\n              }\n              break;\n            case 'number[]':\n              value = this.getNumericArrayParam(\n                  node.attr, param.tfParamName, param.defaultValue as number[]);\n              if (value === undefined && !!param.tfParamNameDeprecated) {\n                value = this.getNumericArrayParam(\n                    node.attr, param.tfParamNameDeprecated,\n                    param.defaultValue as number[]);\n              }\n              break;\n            case 'bool':\n              value = this.getBoolParam(\n                  node.attr, param.tfParamName, param.defaultValue as boolean);\n              if (value === undefined && !!param.tfParamNameDeprecated) {\n                value = this.getBoolParam(\n                    node.attr, param.tfParamNameDeprecated,\n                    param.defaultValue as boolean);\n              }\n              break;\n            case 'shape':\n              value = this.getTensorShapeParam(\n                  node.attr, param.tfParamName, param.defaultValue as number[]);\n              if (value === undefined && !!param.tfParamNameDeprecated) {\n                value = this.getTensorShapeParam(\n                    node.attr, param.tfParamNameDeprecated,\n                    param.defaultValue as number[]);\n              }\n              break;\n            case 'dtype':\n              value = this.getDtypeParam(\n                  node.attr, param.tfParamName, param.defaultValue as DataType);\n              if (value === undefined && !!param.tfParamNameDeprecated) {\n                value = this.getDtypeParam(\n                    node.attr, param.tfParamNameDeprecated,\n                    param.defaultValue as DataType);\n              }\n              break;\n            case 'tensor':\n            case 'tensors':\n              break;\n            default:\n              throw new Error(\n                  `Unsupported param type: ${param.type} for op: ${node.op}`);\n          }\n        }\n        map[param.dlParamName] = {value, inputIndex, type, inputParamLength};\n        return map;\n      }, {});\n    }\n    return newNode;\n  }\n\n  private getStringParam(\n      attrs: {[key: string]: tensorflow.IAttrValue}, name: string, def: string,\n      keepCase = false): string {\n    const param = attrs[name];\n    if (param !== undefined) {\n      const value = String.fromCharCode.apply(null, param.s);\n      return keepCase ? value : value.toLowerCase();\n    }\n    return def;\n  }\n\n  private getBoolParam(\n      attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n      def: boolean): boolean {\n    const param = attrs[name];\n    return param ? param.b : def;\n  }\n\n  private getNumberParam(\n      attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n      def: number): number {\n    const param = attrs[name] as tensorflow.AttrValue;\n    const value = (param ? param[param.value] : def) as number | Long;\n    return (typeof value === 'number') ? value : value['toInt']() as number;\n  }\n  private getDtypeParam(\n      attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n      def: DataType): DataType {\n    const param = attrs[name];\n    if (param && param.type) {\n      switch (param.type) {\n        case tensorflow.DataType.DT_FLOAT:\n          return 'float32';\n        case tensorflow.DataType.DT_INT32:\n          return 'int32';\n        case tensorflow.DataType.DT_BOOL:\n          return 'bool';\n        default:\n          return def;\n      }\n    }\n    return def;\n  }\n  private getTensorShapeParam(\n      attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n      def?: number[]): number[]|undefined {\n    const param = attrs[name];\n    if (param && param.shape) {\n      return param.shape.dim.map(\n          dim =>\n              (typeof dim.size === 'number') ? dim.size : dim.size['toInt']());\n    }\n    return def;\n  }\n\n  private getNumericArrayParam(\n      attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n      def: number[]): number[] {\n    const param = attrs[name];\n    if (param) {\n      return ((param.list.f && param.list.f.length ? param.list.f :\n                                                     param.list.i))\n                 .map(v => (typeof v === 'number') ? v : v['toInt']()) as\n          number[];\n    }\n    return def;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue} from './utils';\n\nexport let executeOp: OpExecutor = (node: Node, tensorMap: NamedTensorsMap,\n                                    context: ExecutionContext):\n                                       tfc.Tensor[] => {\n  switch (node.op) {\n    case 'add': {\n      return [tfc.add(\n          (getParamValue('a', node, tensorMap, context) as tfc.Tensor),\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'addN': {\n      return [tfc.addN((\n          getParamValue('tensors', node, tensorMap, context) as tfc.Tensor[]))];\n    }\n    case 'mod':\n      return [tfc.mod(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    case 'mul':\n      return [tfc.mul(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    case 'div': {\n      return [tfc.div(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'floorDiv': {\n      return [tfc.floorDiv(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'sub': {\n      return [tfc.sub(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'minimum': {\n      return [tfc.minimum(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'maximum': {\n      return [tfc.maximum(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'pow': {\n      return [tfc.pow(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'squaredDifference': {\n      return [tfc.squaredDifference(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'arithmetic';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue, getTensor} from './utils';\n\nexport let executeOp: OpExecutor = (node: Node, tensorMap: NamedTensorsMap,\n                                    context: ExecutionContext):\n                                       tfc.Tensor[] => {\n  switch (node.op) {\n    case 'abs':\n      return [tfc.abs(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'acos':\n      return [tfc.acos(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'acosh':\n      return [tfc.acosh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'asin':\n      return [tfc.asin(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'asinh':\n      return [tfc.asinh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'atan':\n      return [tfc.atan(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'atan2':\n      return [tfc.atan2(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('y', node, tensorMap, context) as tfc.Tensor)];\n    case 'atanh':\n      return [tfc.atanh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'ceil':\n      return [tfc.ceil(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'cos':\n      return [tfc.cos(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'cosh':\n      return [tfc.cosh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'elu':\n      return [tfc.elu(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'erf':\n      return [tfc.erf(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'exp':\n      return [tfc.exp(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'expm1': {\n      return [tfc.expm1(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'floor':\n      return [tfc.floor(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'log':\n      return [tfc.log(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'log1p': {\n      return [tfc.log1p(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'neg':\n      return [tfc.neg(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'reciprocal': {\n      return [tfc.reciprocal(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'relu':\n      return [tfc.relu(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'round': {\n      return [tfc.round(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'selu':\n      return [tfc.selu(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'sigmoid':\n      return [tfc.sigmoid(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'sin':\n      return [tfc.sin(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'sign': {\n      return [tfc.sign(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'sinh': {\n      return [tfc.sinh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'softplus': {\n      return [tfc.softplus(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'sqrt': {\n      return [tfc.sqrt(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'square': {\n      return [tfc.square(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'tanh': {\n      return [tfc.tanh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'tan':\n      return [tfc.tan(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'clipByValue':\n      return [tfc.clipByValue(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('clipValueMin', node, tensorMap, context) as number,\n          getParamValue('clipValueMax', node, tensorMap, context) as number)];\n    case 'rsqrt':\n      return [tfc.div(\n          tfc.scalar(1.0, 'float32'),\n          tfc.sqrt(getTensor(node.inputNames[0], tensorMap, context)))];\n    case 'prod':\n      return [tfc.prod(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('axes', node, tensorMap, context) as number[])];\n    case 'leakyRelu':\n      return [tfc.leakyRelu(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('alpha', node, tensorMap, context) as number)];\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'basic_math';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line:max-line-length\nimport {concat, DataType, slice, stack, Tensor, tensor, tidy, unstack, util} from '@tensorflow/tfjs-core';\n\nexport interface TensorWithState {\n  tensor?: Tensor;\n  written?: boolean;\n  read?: boolean;\n  cleared?: boolean;\n}\n/**\n * The TensorArray object keeps an array of Tensors.  It\n * allows reading from the array and writing to the array.\n */\nexport class TensorArray {\n  private static nextId = 0;\n  private tensors: TensorWithState[] = [];\n  private closed_ = false;\n  readonly id: number;\n  constructor(\n      public readonly name: string, public readonly dtype: DataType,\n      private maxSize: number, private elementShape: number[],\n      public readonly identicalElementShapes: boolean,\n      public readonly dynamicSize: boolean,\n      public readonly clearAfterRead: boolean) {\n    this.id = TensorArray.nextId++;\n  }\n\n  get closed() {\n    return this.closed_;\n  }\n\n  /**\n   * Close the current TensorArray.\n   */\n  clearAndClose() {\n    this.tensors.forEach(tensor => tensor.tensor.dispose());\n    this.tensors = [];\n    this.closed_ = true;\n  }\n\n  size(): number {\n    return this.tensors.length;\n  }\n\n  /**\n   * Read the value at location index in the TensorArray.\n   * @param index Number the index to read from.\n   */\n  read(index: number): Tensor {\n    if (this.closed_) {\n      throw new Error(`TensorArray ${this.name} has already been closed.`);\n    }\n\n    if (index < 0 || index >= this.tensors.length) {\n      throw new Error(`Tried to read from index ${index}, but array size is: ${\n          this.tensors.length}`);\n    }\n\n    const tensorWithState = this.tensors[index];\n    if (tensorWithState.cleared) {\n      throw new Error(\n          `TensorArray ${this.name}: Could not read index ${\n              index} twice because it was cleared after a previous read ` +\n          `(perhaps try setting clear_after_read = false?).`);\n    }\n\n    if (this.clearAfterRead) {\n      tensorWithState.cleared = true;\n    }\n\n    tensorWithState.read = true;\n    return tensorWithState.tensor;\n  }\n\n  /**\n   * Helper method to read multiple tensors from the specified indices.\n   */\n  readMany(indices: number[]): Tensor[] {\n    return indices.map(index => this.read(index));\n  }\n\n  /**\n   * Write value into the index of the TensorArray.\n   * @param index number the index to write to.\n   * @param tensor\n   */\n  write(index: number, tensor: Tensor) {\n    if (this.closed_) {\n      throw new Error(`TensorArray ${this.name} has already been closed.`);\n    }\n\n    if (index < 0 || !this.dynamicSize && index >= this.maxSize) {\n      throw new Error(`Tried to write to index ${\n          index}, but array is not resizeable and size is: ${this.maxSize}`);\n    }\n\n    const t = this.tensors[index] || {};\n\n    if (tensor.dtype !== this.dtype) {\n      throw new Error(`TensorArray ${\n          this.name}: Could not write to TensorArray index ${index},\n          because the value dtype is ${\n          tensor.dtype}, but TensorArray dtype is ${this.dtype}.`);\n    }\n\n    // Set the shape for the first time write to unknow shape tensor array\n    if (this.size() === 0 && this.elementShape.length === 0) {\n      this.elementShape = tensor.shape;\n    }\n\n    this.assertShapesMatch(\n        this.elementShape, tensor.shape,\n        `TensorArray ${this.name}: Could not write to TensorArray index ${\n            index}.`);\n\n    if (t && t.read) {\n      throw new Error(\n          `TensorArray ${this.name}: Could not write to TensorArray index ${\n              index}, because it has already been read.`);\n    }\n\n    if (t && t.written) {\n      throw new Error(\n          `TensorArray ${this.name}: Could not write to TensorArray index ${\n              index}, because it has already been written.`);\n    }\n\n    t.tensor = tensor;\n    t.written = true;\n\n    this.tensors[index] = t;\n  }\n\n  /**\n   * Helper method to write multiple tensors to the specified indices.\n   */\n  writeMany(indices: number[], tensors: Tensor[]) {\n    if (indices.length !== tensors.length) {\n      throw new Error(\n          `TensorArray ${this.name}: could not write multiple tensors,` +\n          `because the index size: ${\n              indices.length} is not the same as tensors size: ${\n              tensors.length}.`);\n    }\n\n    indices.forEach((i, index) => this.write(i, tensors[index]));\n  }\n\n  /**\n   * Return selected values in the TensorArray as a packed Tensor. All of\n   * selected values must have been written and their shapes must all match.\n   * @param [indices] number[] Optional. Taking values in [0, max_value). If the\n   *    TensorArray is not dynamic, max_value=size(). If not specified returns\n   *    all tensors in the original order.\n   * @param [dtype]\n   */\n  gather(indices?: number[], dtype?: DataType): Tensor {\n    if (!!dtype && dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but gather requested dtype ${dtype}`);\n    }\n\n    if (!indices) {\n      indices = [];\n      for (let i = 0; i < this.size(); i++) {\n        indices.push(i);\n      }\n    }\n\n    if (indices.length === 0) {\n      return tensor([], [0].concat(this.elementShape));\n    }\n\n    // Read all the PersistentTensors into a vector to keep track of\n    // their memory.\n    const tensors = this.readMany(indices);\n\n    this.assertShapesMatch(\n        this.elementShape, tensors[0].shape, 'TensorArray shape mismatch: ');\n\n    return stack(tensors, 0);\n  }\n\n  /**\n   * Return the values in the TensorArray as a concatenated Tensor.\n   */\n  concat(dtype?: DataType): Tensor {\n    if (!!dtype && dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but concat requested dtype ${dtype}`);\n    }\n\n    if (this.size() === 0) {\n      return tensor([], [0].concat(this.elementShape));\n    }\n\n    const indices = [];\n    for (let i = 0; i < this.size(); i++) {\n      indices.push(i);\n    }\n    // Collect all the tensors from the tensors array.\n    const tensors = this.readMany(indices);\n\n    this.assertShapesMatch(\n        this.elementShape, tensors[0].shape,\n        `TensorArray shape mismatch: tensor array shape (${\n            this.elementShape}) vs first tensor shape (${tensors[0].shape})`);\n\n    return concat(tensors, 0);\n  }\n\n  /**\n   * Scatter the values of a Tensor in specific indices of a TensorArray.\n   * @param indices nummber[] values in [0, max_value). If the\n   *    TensorArray is not dynamic, max_value=size().\n   * @param tensor Tensor input tensor.\n   */\n  scatter(indices: number[], tensor: Tensor) {\n    if (tensor.dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but tensor has dtype ${tensor.dtype}`);\n    }\n\n    if (indices.length !== tensor.shape[0]) {\n      throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${\n          indices.length} vs. ${tensor.shape[0]}`);\n    }\n\n    const maxIndex = Math.max(...indices);\n\n    if (!this.dynamicSize && maxIndex >= this.maxSize) {\n      throw new Error(\n          `Max index must be < array size (${maxIndex}  vs. ${this.maxSize})`);\n    }\n\n    this.writeMany(indices, unstack(tensor, 0));\n  }\n\n  /**\n   * Split the values of a Tensor into the TensorArray.\n   * @param length number[] with the lengths to use when splitting value along\n   *    its first dimension.\n   * @param tensor Tensor, the tensor to split.\n   */\n  split(length: number[], tensor: Tensor) {\n    if (tensor.dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but tensor has dtype ${tensor.dtype}`);\n    }\n    let totalLength = 0;\n    const cumulativeLengths = length.map(len => {\n      totalLength += len;\n      return totalLength;\n    });\n\n    if (totalLength !== tensor.shape[0]) {\n      throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${totalLength}, and tensor's shape is: ${tensor.shape}`);\n    }\n\n    if (!this.dynamicSize && length.length !== this.maxSize) {\n      throw new Error(\n          `TensorArray's size is not equal to the size of lengths (${\n              this.maxSize} vs. ${length.length}), ` +\n          'and the TensorArray is not marked as dynamically resizeable');\n    }\n\n    const elementPerRow = totalLength === 0 ? 0 : tensor.size / totalLength;\n    const tensors: Tensor[] = [];\n    tidy(() => {\n      tensor = tensor.reshape([1, totalLength, elementPerRow]);\n      for (let i = 0; i < length.length; ++i) {\n        const previousLength = (i === 0) ? 0 : cumulativeLengths[i - 1];\n        const indices = [0, previousLength, 0];\n        const sizes = [1, length[i], elementPerRow];\n        tensors[i] = slice(tensor, indices, sizes).reshape(this.elementShape);\n      }\n      return tensors;\n    });\n    const indices = [];\n    for (let i = 0; i < length.length; i++) {\n      indices[i] = i;\n    }\n    this.writeMany(indices, tensors);\n  }\n\n  private assertShapesMatch(\n      shapeA: number[], shapeB: number[], errorMessagePrefix = ''): void {\n    util.assert(\n        this.arraysEqual(shapeA, shapeB),\n        errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n  }\n\n  private arraysEqual(n1: number[], n2: number[]) {\n    if (n1.length !== n2.length) {\n      return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n      if (n1[i] !== -1 && n2[i] !== -1 && n1[i] !== n2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {scalar} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {TensorArray} from '../../executor/tensor_array';\nimport {Node} from '../types';\n\nimport {getParamValue, getTensor} from './utils';\n\nexport async function executeOp(\n    node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext): Promise<tfc.Tensor[]> {\n  switch (node.op) {\n    case 'loopCond':\n      return [\n        (getParamValue('pred', node, tensorMap, context) as tfc.Tensor).clone()\n      ];\n    case 'switch': {\n      const pred =\n          getParamValue('pred', node, tensorMap, context) as tfc.Tensor;\n      const data =\n          getParamValue('data', node, tensorMap, context) as tfc.Tensor;\n      // Outputs nodes :0 => false, :1 => true\n      return (await pred.data())[0] ? [undefined, data.clone()] :\n                                      [data.clone(), undefined];\n    }\n    case 'merge':\n      const inputName = node.inputNames.find(\n          name => getTensor(name, tensorMap, context) !== undefined);\n      return inputName ? [getTensor(inputName, tensorMap, context).clone()] :\n                         undefined;\n\n    case 'enter':\n      const frameId =\n          getParamValue('frameName', node, tensorMap, context) as string;\n      const data =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      context.enterFrame(frameId);\n      return [data.clone()];\n\n    case 'exit':\n      const tensor =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      context.exitFrame();\n      return [tensor.clone()];\n\n    case 'nextIteration':\n      const input =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      context.nextIteration();\n      return [input.clone()];\n\n    case 'tensorArray':\n      const size = getParamValue('size', node, tensorMap, context) as number;\n      const dtype =\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType;\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n      const dynamicSize =\n          getParamValue('dynamicSize', node, tensorMap, context) as boolean;\n      const clearAfterRead =\n          getParamValue('clearAfterRead', node, tensorMap, context) as boolean;\n      const identicalElementShapes =\n          getParamValue('identicalElementShapes', node, tensorMap, context) as\n          boolean;\n      const name = getParamValue('name', node, tensorMap, context) as string;\n      const tensorArray = new TensorArray(\n          name, dtype, size, elementShape, identicalElementShapes, dynamicSize,\n          clearAfterRead);\n      context.addTensorArray(tensorArray);\n      return [scalar(tensorArray.id), scalar(1.0)];\n\n    case 'tensorArrayWrite':\n      const id =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const index = getParamValue('index', node, tensorMap, context) as number;\n      const writeTensor =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      const writeTensorArray = context.getTensorArray(id);\n      writeTensorArray.write(index, writeTensor);\n      return [scalar(1.0)];\n\n    case 'tensorArrayRead':\n      const readId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const readIndex =\n          getParamValue('index', node, tensorMap, context) as number;\n      const readTensorArray = context.getTensorArray(readId);\n      return [readTensorArray.read(readIndex)];\n\n    case 'tensorArrayGather':\n      const gatherId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const gatherIndices =\n          getParamValue('indices', node, tensorMap, context) as number[];\n      const gatherDtype =\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType;\n      const gatherTensorArray = context.getTensorArray(gatherId);\n      return [gatherTensorArray.gather(gatherIndices, gatherDtype)];\n\n    case 'tensorArrayScatter':\n      const scatterId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const scatterIndices =\n          getParamValue('indices', node, tensorMap, context) as number[];\n      const scatterTensor =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      const scatterTensorArray = context.getTensorArray(scatterId);\n      scatterTensorArray.scatter(scatterIndices, scatterTensor);\n      return [scalar(1.0)];\n\n    case 'tensorArrayConcat':\n      const concatId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const concatTensorArray = context.getTensorArray(concatId);\n      const concatDtype =\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType;\n      return [concatTensorArray.concat(concatDtype)];\n\n    case 'tensorArraySplit':\n      const splitId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const splitTensor =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      const lengths =\n          getParamValue('lengths', node, tensorMap, context) as number[];\n      const splitTensorArray = context.getTensorArray(splitId);\n      splitTensorArray.split(lengths, splitTensor);\n      return [scalar(1.0)];\n\n    case 'tensorArraySize':\n      const sizeId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const sizeTensorArray = context.getTensorArray(sizeId);\n      return [scalar(sizeTensorArray.size(), 'int32')];\n\n    case 'tensorArrayClose':\n      const closeId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const closeTensorArray = context.getTensorArray(closeId);\n      closeTensorArray.clearAndClose();\n      return [];\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n}\n\nexport const CATEGORY = 'control';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue} from './utils';\n\nexport let executeOp: OpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): tfc.Tensor[] => {\n      switch (node.op) {\n        case 'conv1d': {\n          const stride =\n              getParamValue('stride', node, tensorMap, context) as number;\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as string)\n                  .toUpperCase();\n          const dilation =\n              getParamValue('dilation', node, tensorMap, context) as number;\n          return [tfc.conv1d(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor3D,\n              getParamValue('filter', node, tensorMap, context) as tfc.Tensor3D,\n              stride, pad as 'valid' | 'same', dataFormat as 'NWC' | 'NCW',\n              dilation)];\n        }\n        case 'conv2d': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as string)\n                  .toUpperCase();\n          const dilations =\n              getParamValue('dilations', node, tensorMap, context) as number[];\n          return [tfc.conv2d(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor3D |\n                  tfc.Tensor4D,\n              getParamValue('filter', node, tensorMap, context) as tfc.Tensor4D,\n              [stride[1], stride[2]], pad as 'valid' | 'same',\n              dataFormat as 'NHWC' | 'NCHW', [dilations[0], dilations[1]])];\n        }\n        case 'conv2dTranspose': {\n          const shape = getParamValue(\n                            'outputShape', node, tensorMap,\n                            context) as [number, number, number] |\n              [number, number, number, number];\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          return [tfc.conv2dTranspose(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor3D |\n                  tfc.Tensor4D,\n              getParamValue('filter', node, tensorMap, context) as tfc.Tensor4D,\n              shape, [stride[1], stride[2]], pad as 'valid' | 'same')];\n        }\n        case 'depthwiseConv2d': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const dilations =\n              getParamValue('dilations', node, tensorMap, context) as number[];\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as string)\n                  .toUpperCase();\n\n          return [tfc.depthwiseConv2d(\n              getParamValue('input', node, tensorMap, context) as tfc.Tensor3D |\n                  tfc.Tensor4D,\n              getParamValue('filter', node, tensorMap, context) as tfc.Tensor4D,\n              [stride[1], stride[2]], pad as 'valid' | 'same',\n              dataFormat as 'NHWC' | 'NCHW', [dilations[0], dilations[1]])];\n        }\n\n        case 'avgPool': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const kernelSize =\n              getParamValue('kernelSize', node, tensorMap, context) as number[];\n\n          return [tfc.avgPool(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor3D |\n                  tfc.Tensor4D,\n              [kernelSize[1], kernelSize[2]], [stride[1], stride[2]],\n              pad as 'valid' | 'same')];\n        }\n\n        case 'maxPool': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const kernelSize =\n              getParamValue('kernelSize', node, tensorMap, context) as number[];\n\n          return [tfc.maxPool(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor3D |\n                  tfc.Tensor4D,\n              [kernelSize[1], kernelSize[2]], [stride[1], stride[2]],\n              pad as 'valid' | 'same')];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'convolution';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue} from './utils';\n\nexport let executeOp: OpExecutor = (node: Node, tensorMap: NamedTensorsMap,\n                                    context: ExecutionContext):\n                                       tfc.Tensor[] => {\n  switch (node.op) {\n    case 'fill': {\n      const shape =\n          getParamValue('shape', node, tensorMap, context) as number[];\n      const dtype =\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType;\n      const value = getParamValue('value', node, tensorMap, context) as number;\n      return [tfc.fill(shape, value, dtype)];\n    }\n    case 'linspace': {\n      const start = getParamValue('start', node, tensorMap, context) as number;\n      const stop = getParamValue('stop', node, tensorMap, context) as number;\n      const num = getParamValue('num', node, tensorMap, context) as number;\n      return [tfc.linspace(start, stop, num)];\n    }\n    case 'oneHot': {\n      const indices =\n          getParamValue('indices', node, tensorMap, context) as tfc.Tensor1D;\n      const depth = getParamValue('depth', node, tensorMap, context) as number;\n      const onValue =\n          getParamValue('onValue', node, tensorMap, context) as number;\n      const offValue =\n          getParamValue('offValue', node, tensorMap, context) as number;\n      return [tfc.oneHot(indices, depth, onValue, offValue)];\n    }\n    case 'ones': {\n      return [tfc.ones(\n          getParamValue('shape', node, tensorMap, context) as number[],\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType)];\n    }\n    case 'onesLike': {\n      return [tfc.onesLike(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'randomUniform': {\n      return [tfc.randomUniform(\n          // tslint:disable-next-line:no-any\n          getParamValue('shape', node, tensorMap, context) as any,\n          getParamValue('minval', node, tensorMap, context) as number,\n          getParamValue('maxval', node, tensorMap, context) as number,\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType)];\n    }\n    case 'range': {\n      const start = getParamValue('start', node, tensorMap, context) as number;\n      const stop = getParamValue('stop', node, tensorMap, context) as number;\n      const step = getParamValue('step', node, tensorMap, context) as number;\n      return [tfc.range(\n          start, stop, step,\n          getParamValue('dtype', node, tensorMap, context) as 'float32' |\n              'int32')];\n    }\n    case 'truncatedNormal': {\n      const shape =\n          getParamValue('shape', node, tensorMap, context) as number[];\n      const mean = getParamValue('mean', node, tensorMap, context) as number;\n      const stdDev =\n          getParamValue('stdDev', node, tensorMap, context) as number;\n      const seed = getParamValue('seed', node, tensorMap, context) as number;\n      return [tfc.truncatedNormal(\n          shape, mean, stdDev,\n          getParamValue('dtype', node, tensorMap, context) as 'float32' |\n              'int32',\n          seed)];\n    }\n    case 'zeros': {\n      return [tfc.zeros(\n          getParamValue('shape', node, tensorMap, context) as number[],\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType)];\n    }\n    case 'zerosLike': {\n      return [tfc.zerosLike(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'creation';\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\nimport {getParamValue} from './utils';\n\nexport async function executeOp(\n    node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext): Promise<tfc.Tensor[]> {\n  switch (node.op) {\n    case 'nonMaxSuppression': {\n      const boxes =\n          getParamValue('boxes', node, tensorMap, context) as tfc.Tensor;\n      const scores =\n          getParamValue('scores', node, tensorMap, context) as tfc.Tensor;\n      const maxOutputSize =\n          getParamValue('maxOutputSize', node, tensorMap, context) as number;\n      const iouThreshold =\n          getParamValue('iouThreshold', node, tensorMap, context) as number;\n      const scoreThreshold =\n          getParamValue('scoreThreshold', node, tensorMap, context) as number;\n      return [await tfc.image.nonMaxSuppressionAsync(\n          boxes as tfc.Tensor2D, scores as tfc.Tensor1D, maxOutputSize,\n          iouThreshold, scoreThreshold)];\n    }\n    case 'whereAsync': {\n      return [await tfc.whereAsync(\n          getParamValue('condition', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'setdiff1dAsync': {\n      return await tfc.setdiff1dAsync(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('y', node, tensorMap, context) as tfc.Tensor);\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n}\n\nexport const CATEGORY = 'dynamic';\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue} from './utils';\n\nexport let executeOp: OpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): tfc.Tensor[] => {\n      switch (node.op) {\n        case 'topK': {\n          const x = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n          const k = getParamValue('k', node, tensorMap, context) as number;\n          const sorted =\n              getParamValue('sorted', node, tensorMap, context) as boolean;\n          const result = tfc.topk(x, k, sorted);\n          return [result.values, result.indices];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'evaluation';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue, getTensor} from './utils';\n\nexport let executeOp: OpExecutor = (node: Node, tensorMap: NamedTensorsMap,\n                                    context: ExecutionContext):\n                                       tfc.Tensor[] => {\n  switch (node.op) {\n    case 'const': {\n      return tensorMap[node.name];\n    }\n    case 'placeholder':\n      const def =\n          getParamValue('default', node, tensorMap, context) as tfc.Tensor;\n      return [getTensor(node.name, tensorMap, context) || def];\n    case 'identity':\n    case 'stopGradient':\n    case 'fakeQuantWithMinMaxVars':  // This op is currently ignored.\n      return [\n        (getParamValue('x', node, tensorMap, context) as tfc.Tensor).clone()\n      ];\n    case 'snapshot':\n      const snapshot =\n          (getParamValue('x', node, tensorMap, context) as tfc.Tensor);\n      return [snapshot.clone()];\n    case 'shape':\n      return [tfc.tensor1d(\n          (getParamValue('x', node, tensorMap, context) as tfc.Tensor).shape,\n          'int32')];\n    case 'shapeN':\n      return (getParamValue('x', node, tensorMap, context) as tfc.Tensor[])\n          .map((t: tfc.Tensor) => tfc.tensor1d(t.shape));\n    case 'size':\n      return [tfc.scalar(\n          (getParamValue('x', node, tensorMap, context) as tfc.Tensor).size,\n          'int32')];\n    case 'rank':\n      return [tfc.scalar(\n          (getParamValue('x', node, tensorMap, context) as tfc.Tensor).rank,\n          'int32')];\n    case 'noop':\n      return [];\n    case 'print':\n      const input = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n      const data =\n          getParamValue('data', node, tensorMap, context) as tfc.Tensor[];\n      const message =\n          getParamValue('message', node, tensorMap, context) as string;\n      const summarize =\n          getParamValue('summarize', node, tensorMap, context) as number;\n      console.warn(\n          'The graph has a tf.print() operation,' +\n          'usually used for debugging, which slows down performance.');\n      console.log(message);\n      for (let i = 0; i < data.length; i++) {\n        console.log(\n            Array.prototype.slice.call(data[0].dataSync()).slice(0, summarize));\n      }\n      return [input];\n\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'graph';\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue} from './utils';\n\nexport let executeOp: OpExecutor = (node: Node, tensorMap: NamedTensorsMap,\n                                    context: ExecutionContext):\n                                       tfc.Tensor[] => {\n  switch (node.op) {\n    case 'resizeBilinear': {\n      const images =\n          getParamValue('images', node, tensorMap, context) as tfc.Tensor;\n      const size = getParamValue('size', node, tensorMap, context) as number[];\n      const alignCorners =\n          getParamValue('alignCorners', node, tensorMap, context) as boolean;\n      return [tfc.image.resizeBilinear(\n          images as tfc.Tensor3D | tfc.Tensor4D, [size[0], size[1]],\n          alignCorners)];\n    }\n    case 'resizeNearestNeighbor': {\n      const images =\n          getParamValue('images', node, tensorMap, context) as tfc.Tensor;\n      const size = getParamValue('size', node, tensorMap, context) as number[];\n      const alignCorners =\n          getParamValue('alignCorners', node, tensorMap, context) as boolean;\n      return [tfc.image.resizeNearestNeighbor(\n          images as tfc.Tensor3D | tfc.Tensor4D, [size[0], size[1]],\n          alignCorners)];\n    }\n    case 'cropAndResize': {\n      const image =\n          getParamValue('image', node, tensorMap, context) as tfc.Tensor;\n      const boxes =\n          getParamValue('boxes', node, tensorMap, context) as tfc.Tensor;\n      const boxInd =\n          getParamValue('boxInd', node, tensorMap, context) as tfc.Tensor;\n      const cropSize =\n          getParamValue('cropSize', node, tensorMap, context) as number[];\n      const method =\n          getParamValue('method', node, tensorMap, context) as string;\n      const extrapolationValue =\n          getParamValue('extrapolationValue', node, tensorMap, context) as\n          number;\n      return [tfc.image.cropAndResize(\n          image as tfc.Tensor4D, boxes as tfc.Tensor2D, boxInd as tfc.Tensor1D,\n          cropSize as [number, number], method as 'bilinear' | 'nearest',\n          extrapolationValue)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'image';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue} from './utils';\n\nexport let executeOp: OpExecutor = (node: Node, tensorMap: NamedTensorsMap,\n                                    context: ExecutionContext):\n                                       tfc.Tensor[] => {\n  switch (node.op) {\n    case 'equal': {\n      return [tfc.equal(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'notEqual': {\n      return [tfc.notEqual(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'greater': {\n      return [tfc.greater(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'greaterEqual': {\n      return [tfc.greaterEqual(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'less': {\n      return [tfc.less(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'lessEqual': {\n      return [tfc.lessEqual(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'logicalAnd': {\n      return [tfc.logicalAnd(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'logicalNot': {\n      return [tfc.logicalNot(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'logicalOr': {\n      return [tfc.logicalOr(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'where': {\n      return [tfc.where(\n          getParamValue('condition', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'logical';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue} from './utils';\n\nexport let executeOp: OpExecutor = (node: Node, tensorMap: NamedTensorsMap,\n                                    context: ExecutionContext):\n                                       tfc.Tensor[] => {\n  switch (node.op) {\n    case 'matMul':\n      return [tfc.matMul(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor2D,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor2D,\n          getParamValue('transposeA', node, tensorMap, context) as boolean,\n          getParamValue('transposeB', node, tensorMap, context) as boolean)];\n    case 'transpose':\n      return [tfc.transpose(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('perm', node, tensorMap, context) as number[])];\n\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'matrices';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue} from './utils';\n\nexport let executeOp: OpExecutor = (node: Node, tensorMap: NamedTensorsMap,\n                                    context: ExecutionContext):\n                                       tfc.Tensor[] => {\n  switch (node.op) {\n    case 'batchNormalization': {\n      return [tfc.batchNormalization(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('mean', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('variance', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('epsilon', node, tensorMap, context) as number,\n          getParamValue('scale', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('offset', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'localResponseNormalization': {\n      return [tfc.localResponseNormalization(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor3D |\n              tfc.Tensor4D,\n          getParamValue('radius', node, tensorMap, context) as number,\n          getParamValue('bias', node, tensorMap, context) as number,\n          getParamValue('alpha', node, tensorMap, context) as number,\n          getParamValue('beta', node, tensorMap, context) as number)];\n    }\n    case 'softmax': {\n      return [tfc.softmax(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'logSoftmax': {\n      return [tfc.logSoftmax(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'sparseToDense': {\n      return [tfc.sparseToDense(\n          getParamValue('sparseIndices', node, tensorMap, context) as\n              tfc.Tensor,\n          getParamValue('outputShape', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('sparseValues', node, tensorMap, context) as number[],\n          getParamValue('defaultValue', node, tensorMap, context) as\n              tfc.Scalar)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'normalization';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue} from './utils';\n\nexport let executeOp: OpExecutor = (node: Node, tensorMap: NamedTensorsMap,\n                                    context: ExecutionContext):\n                                       tfc.Tensor[] => {\n  switch (node.op) {\n    case 'max': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.max(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'mean': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.mean(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'min': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.min(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'sum': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.sum(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'all': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.all(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'any': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.any(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'argMax': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      return [tfc.argMax(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis)];\n    }\n    case 'argMin': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      return [tfc.argMin(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis)];\n    }\n    case 'prod': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.prod(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'reduction';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue} from './utils';\n\nexport let executeOp: OpExecutor = (node: Node, tensorMap: NamedTensorsMap,\n                                    context: ExecutionContext):\n                                       tfc.Tensor[] => {\n  switch (node.op) {\n    case 'concat': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      const inputs =\n          getParamValue('tensors', node, tensorMap, context) as tfc.Tensor[];\n      return [tfc.concat(inputs, axis)];\n    }\n    case 'gather': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      const input = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n      const indices =\n          getParamValue('indices', node, tensorMap, context) as tfc.Tensor1D;\n      return [tfc.gather(input, indices, axis)];\n    }\n    case 'reverse': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const input = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n      return [tfc.reverse(input, axis)];\n    }\n    case 'slice': {\n      // tslint:disable-next-line:no-any\n      const begin = getParamValue('begin', node, tensorMap, context) as any;\n      // tslint:disable-next-line:no-any\n      const size = getParamValue('size', node, tensorMap, context) as any;\n      return [tfc.slice(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, begin,\n          size)];\n    }\n    case 'stridedSlice': {\n      const begin =\n          getParamValue('begin', node, tensorMap, context) as number[];\n      const end = getParamValue('end', node, tensorMap, context) as number[];\n      const strides =\n          getParamValue('strides', node, tensorMap, context) as number[];\n      const beginMask =\n          getParamValue('beginMask', node, tensorMap, context) as number;\n      const endMask =\n          getParamValue('endMask', node, tensorMap, context) as number;\n      const ellipsisMask =\n          getParamValue('ellipsisMask', node, tensorMap, context) as number;\n      const newAxisMask =\n          getParamValue('newAxisMask', node, tensorMap, context) as number;\n      const shrinkAxisMask =\n          getParamValue('shrinkAxisMask', node, tensorMap, context) as number;\n      const tensor = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n      if (begin.length === 1 && tensor.shape.length > 1) {\n        for (let i = 1; i < tensor.shape.length; i++) {\n          begin.push(0);\n          end.push(tensor.shape[i]);\n          strides.push(strides[0]);\n        }\n      }\n      return [tfc.stridedSlice(\n          tensor, begin, end, strides, beginMask, endMask, ellipsisMask,\n          newAxisMask, shrinkAxisMask)];\n    }\n    case 'stack': {\n      return tfc.tidy(() => {\n        const axis = getParamValue('axis', node, tensorMap, context) as number;\n        const tensors =\n            getParamValue('tensors', node, tensorMap, context) as tfc.Tensor[];\n        // Reshape the tensors to the first tensor's shape if they don't match.\n        const shape = tensors[0].shape;\n        const squeezedShape = tensors[0].squeeze().shape;\n        const mapped = tensors.map(tensor => {\n          const sameShape = tfc.util.arraysEqual(tensor.shape, shape);\n          if (!sameShape &&\n              !tfc.util.arraysEqual(tensor.squeeze().shape, squeezedShape)) {\n            throw new Error('the input tensors shape does not match');\n          }\n          return sameShape ? tensor : tensor.reshape(shape);\n        });\n        return [tfc.stack(mapped, axis)];\n      });\n    }\n    case 'unstack': {\n      return tfc.tidy(() => {\n        const axis = getParamValue('axis', node, tensorMap, context) as number;\n        const tensor =\n            getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n        return tfc.unstack(tensor, axis);\n      });\n    }\n    case 'tile': {\n      const reps = getParamValue('reps', node, tensorMap, context) as number[];\n      return [tfc.tile(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, reps)];\n    }\n    case 'split': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      const numOrSizeSplits =\n          getParamValue('numOrSizeSplits', node, tensorMap, context) as number |\n          number[];\n      return tfc.split(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          numOrSizeSplits, axis);\n    }\n    case 'scatterNd': {\n      const indices =\n          getParamValue('indices', node, tensorMap, context) as tfc.Tensor;\n      const values =\n          getParamValue('values', node, tensorMap, context) as tfc.Tensor;\n      const shape =\n          getParamValue('shape', node, tensorMap, context) as number[];\n      return [tfc.scatterND(indices, values, shape)];\n    }\n    case 'gatherNd': {\n      const x = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n      const indices =\n          getParamValue('indices', node, tensorMap, context) as tfc.Tensor;\n      return [tfc.gatherND(x, indices)];\n    }\n    case 'sparseToDense': {\n      const indices =\n          getParamValue('sparseIndices', node, tensorMap, context) as\n          tfc.Tensor;\n      const shape =\n          getParamValue('outputShape', node, tensorMap, context) as number[];\n      const sparseValues =\n          getParamValue('sparseValues', node, tensorMap, context) as tfc.Tensor;\n      const defaultValue =\n          getParamValue('defaultValue', node, tensorMap, context) as tfc.Scalar;\n      return [tfc.sparseToDense(indices, sparseValues, shape, defaultValue)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'slice_join';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue} from './utils';\n\nexport let executeOp: OpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): tfc.Tensor[] => {\n      switch (node.op) {\n        case 'fft': {\n          return [tfc.fft(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n        }\n        case 'ifft': {\n          return [tfc.ifft(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n        }\n        case 'rfft': {\n          return [tfc.rfft(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n        }\n        case 'irfft': {\n          return [tfc.irfft(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'spectral';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue, split} from './utils';\n\nexport let executeOp: OpExecutor = (node: Node, tensorMap: NamedTensorsMap,\n                                    context: ExecutionContext):\n                                       tfc.Tensor[] => {\n  switch (node.op) {\n    case 'cast': {\n      return [tfc.cast(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('dtype', node, tensorMap, context) as 'int32' |\n              'float32' | 'bool')];\n    }\n    case 'expandDims': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      return [tfc.expandDims(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis)];\n    }\n    case 'squeeze': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      return [tfc.squeeze(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis)];\n    }\n\n    case 'reshape': {\n      return [tfc.reshape(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('shape', node, tensorMap, context) as number[])];\n    }\n    case 'pad': {\n      return [tfc.pad(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          split(\n              getParamValue('padding', node, tensorMap, context) as number[],\n              2) as Array<[number, number]>,\n          getParamValue('constantValue', node, tensorMap, context) as number)];\n    }\n    case 'spaceToBatchND': {\n      const blockShape =\n          getParamValue('blockShape', node, tensorMap, context) as number[];\n      const paddings = split(\n          getParamValue('paddings', node, tensorMap, context) as number[], 2);\n      return [tfc.spaceToBatchND(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          blockShape, paddings)];\n    }\n    case 'batchToSpaceND': {\n      const blockShape =\n          getParamValue('blockShape', node, tensorMap, context) as number[];\n      const crops = split(\n          getParamValue('crops', node, tensorMap, context) as number[], 2);\n      return [tfc.batchToSpaceND(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          blockShape, crops)];\n    }\n    case 'depthToSpace': {\n      const blockSize =\n          getParamValue('blockSize', node, tensorMap, context) as number;\n      const dataFormat =\n          getParamValue('dataFormat', node, tensorMap, context) as 'NHWC' |\n          'NCHW';\n      return [tfc.depthToSpace(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor4D,\n          blockSize, dataFormat)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'transformation';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../data/types';\nimport {ExecutionContext} from '../executor/execution_context';\n\nimport * as arithmetic from './executors/arithmetic_executor';\nimport * as basicMath from './executors/basic_math_executor';\nimport * as control from './executors/control_executor';\nimport * as convolution from './executors/convolution_executor';\nimport * as creation from './executors/creation_executor';\nimport * as dynamic from './executors/dynamic_executor';\nimport * as evaluation from './executors/evaluation_executor';\nimport * as graph from './executors/graph_executor';\nimport * as image from './executors/image_executor';\nimport * as logical from './executors/logical_executor';\nimport * as matrices from './executors/matrices_executor';\nimport * as normalization from './executors/normalization_executor';\nimport * as reduction from './executors/reduction_executor';\nimport * as sliceJoin from './executors/slice_join_executor';\nimport * as spectral from './executors/spectral_executor';\nimport * as transformation from './executors/transformation_executor';\nimport {Node} from './types';\n\n/**\n * Executes the op defined by the node object.\n * @param node\n * @param tensorMap contains tensors for executed nodes and weights\n */\nexport function executeOp(\n    node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext): tfc.Tensor[]|Promise<tfc.Tensor[]> {\n  switch (node.category) {\n    case 'arithmetic':\n      return arithmetic.executeOp(node, tensorMap, context);\n    case 'basic_math':\n      return basicMath.executeOp(node, tensorMap, context);\n    case 'control':\n      return control.executeOp(node, tensorMap, context);\n    case 'convolution':\n      return convolution.executeOp(node, tensorMap, context);\n    case 'creation':\n      return creation.executeOp(node, tensorMap, context);\n    case 'dynamic':\n      return dynamic.executeOp(node, tensorMap, context);\n    case 'evaluation':\n      return evaluation.executeOp(node, tensorMap, context);\n    case 'image':\n      return image.executeOp(node, tensorMap, context);\n    case 'graph':\n      return graph.executeOp(node, tensorMap, context);\n    case 'logical':\n      return logical.executeOp(node, tensorMap, context);\n    case 'matrices':\n      return matrices.executeOp(node, tensorMap, context);\n    case 'normalization':\n      return normalization.executeOp(node, tensorMap, context);\n    case 'reduction':\n      return reduction.executeOp(node, tensorMap, context);\n    case 'slice_join':\n      return sliceJoin.executeOp(node, tensorMap, context);\n    case 'spectral':\n      return spectral.executeOp(node, tensorMap, context);\n    case 'transformation':\n      return transformation.executeOp(node, tensorMap, context);\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap, TensorArrayMap} from '../data/types';\n\nimport {TensorArray} from './tensor_array';\n\nexport interface ExecutionContextInfo {\n  id: number;           // the unique id of the context info\n  frameName: string;    // The frame name of the loop, this comes from\n                        // the TensorFlow NodeDef.\n  iterationId: number;  // The iteration id of the loop\n}\n\n/**\n * ExecutionContext captures the runtime environment of the node. It keeps\n * track of the current frame and iteration for the control flow ops.\n *\n * For example, typical Dynamic RNN model may contain loops, for which\n * TensorFlow will generate graphs with Enter/Exit nodes to control the\n * current execution frame, and NextIteration Nodes for iteration id increment.\n * For model with branch logic, TensorFLow will generate Switch/Merge ops.\n */\nexport class ExecutionContext {\n  private rootContext = {id: 0, frameName: '', iterationId: 0};\n  private contexts: ExecutionContextInfo[] = [this.rootContext];\n  private lastId = 0;\n  private _currentContextIds: string[];\n\n  constructor(\n      public readonly weightMap: NamedTensorsMap,\n      public readonly tensorArrayMap: TensorArrayMap) {\n    this.generateCurrentContextIds();\n  }\n\n  private newFrame(id: number, frameName: string) {\n    return {id, frameName, iterationId: 0};\n  }\n\n  /**\n   * Set the current context\n   * @param contexts: ExecutionContextInfo[] the current path of execution\n   * frames\n   */\n  set currentContext(contexts: ExecutionContextInfo[]) {\n    if (this.contexts !== contexts) {\n      this.contexts = contexts;\n      this.generateCurrentContextIds();\n    }\n  }\n\n  get currentContext(): ExecutionContextInfo[] {\n    return this.contexts;\n  }\n\n  /**\n   * Returns the current context in string format.\n   */\n  get currentContextId(): string {\n    return this._currentContextIds[0];\n  }\n\n  /**\n   * Returns the current context and all parent contexts in string format.\n   * This allow access to the nodes in the current and parent frames.\n   */\n  get currentContextIds(): string[] {\n    return this._currentContextIds;\n  }\n\n  private generateCurrentContextIds() {\n    const names = [];\n    for (let i = 0; i < this.contexts.length - 1; i++) {\n      const contexts = this.contexts.slice(0, this.contexts.length - i);\n      names.push(this.contextIdforContexts(contexts));\n    }\n    names.push('');\n    this._currentContextIds = names;\n  }\n\n  private contextIdforContexts(contexts: ExecutionContextInfo[]) {\n    return contexts ?\n        contexts\n            .map(\n                context => (context.id === 0 && context.iterationId === 0) ?\n                    '' :\n                    `${context.frameName}-${context.iterationId}`)\n            .join('/') :\n        '';\n  }\n\n  /**\n   * Enter a new frame, a new context is pushed on the current context list.\n   * @param frameId new frame id\n   */\n  enterFrame(frameId: string) {\n    if (this.contexts) {\n      this.lastId++;\n      this.contexts = this.contexts.slice();\n      this.contexts.push(this.newFrame(this.lastId, frameId));\n      this._currentContextIds.unshift(this.contextIdforContexts(this.contexts));\n    }\n  }\n\n  /**\n   * Exit the current frame, the last context is removed from the current\n   * context list.\n   */\n  exitFrame() {\n    if (this.contexts && this.contexts.length > 1) {\n      this.contexts = this.contexts.slice();\n      this.contexts.splice(-1);\n      this.currentContextIds.shift();\n    } else {\n      throw new Error('Cannot exit frame, the context is empty');\n    }\n  }\n\n  /**\n   * Enter the next iteration of a loop, the iteration id of last context is\n   * increased.\n   */\n  nextIteration() {\n    if (this.contexts && this.contexts.length > 0) {\n      this.contexts = this.contexts.slice();\n      this.lastId++;\n      const context =\n          Object.assign({}, this.contexts[this.contexts.length - 1]) as\n          ExecutionContextInfo;\n      context.iterationId += 1;\n      context.id = this.lastId;\n      this.contexts.splice(-1, 1, context);\n      this._currentContextIds.splice(\n          0, 1, this.contextIdforContexts(this.contexts));\n    } else {\n      throw new Error('Cannot increase frame iteration, the context is empty');\n    }\n  }\n\n  getWeight(name: string): Tensor[] {\n    return this.weightMap[name];\n  }\n\n  addTensorArray(tensorArray: TensorArray) {\n    this.tensorArrayMap[tensorArray.id] = tensorArray;\n  }\n\n  getTensorArray(id: number): TensorArray {\n    return this.tensorArrayMap[id];\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, Tensor, tidy, util} from '@tensorflow/tfjs-core';\n\n// tslint:disable-next-line:max-line-length\nimport {NamedTensorMap, NamedTensorsMap, TensorArrayMap, TensorInfo} from '../data/types';\n// tslint:disable-next-line:max-line-length\nimport {getNodeNameAndIndex, getParamValue, getTensor, getTensorsForCurrentContenxt} from '../operations/executors/utils';\nimport {executeOp} from '../operations/operation_executor';\nimport {Graph, Node} from '../operations/types';\n\nimport {ExecutionContext, ExecutionContextInfo} from './execution_context';\n\ninterface NodeWithContexts {\n  contexts: ExecutionContextInfo[];\n  node: Node;\n}\n\nexport class GraphExecutor {\n  private compiledMap: Map<string, Node[]> = new Map();\n  private _weightMap: NamedTensorsMap = {};\n  private weightIds: number[];\n  private placeholders: Node[];\n  private _outputs: Node[];\n  private SEPERATOR = ',';\n  get weightMap(): NamedTensorsMap {\n    return this._weightMap;\n  }\n  set weightMap(weightMap: NamedTensorsMap) {\n    const weightIds = Object.keys(weightMap).map(\n        key => weightMap[key].map(tensor => tensor.id));\n    this.weightIds = [].concat.apply([], weightIds);\n    this._weightMap = weightMap;\n  }\n\n  get inputs(): TensorInfo[] {\n    return this.placeholders.map(node => {\n      return {\n        name: node.name,\n        shape: node.params['shape'] ? node.params['shape'].value as number[] :\n                                      undefined,\n        dtype: node.params['dtype'] ? node.params['dtype'].value as DataType :\n                                      undefined\n      };\n    });\n  }\n\n  get outputs(): TensorInfo[] {\n    return this._outputs.map(node => {\n      return {\n        name: node.name,\n        shape: node.params['shape'] ? node.params['shape'].value as number[] :\n                                      undefined,\n        dtype: node.params['dtype'] ? node.params['dtype'].value as DataType :\n                                      undefined\n      };\n    });\n  }\n\n  get inputNodes(): string[] {\n    return this.placeholders.map(node => node.name);\n  }\n\n  get outputNodes(): string[] {\n    return this.outputs.map(node => node.name);\n  }\n\n  constructor(private graph: Graph) {\n    this.placeholders = graph.placeholders;\n    this._outputs = graph.outputs;\n    this.compile();\n  }\n\n  get isControlFlowModel(): boolean {\n    return this.graph.withControlFlow;\n  }\n\n  get isDynamicShapeModel(): boolean {\n    return this.graph.withDynamicShape;\n  }\n\n  /**\n   * Compiles the inference graph to generate the topology order of op nodes,\n   * cache the result for inference execution.\n   */\n  private compile(startNodes?: Node[]) {\n    // Do not compile for graph with control flow, since the execution order\n    // requires runtime evaluation of the output tensors.\n    if (this.graph.withControlFlow || this.graph.withDynamicShape) {\n      return;\n    }\n    const compiledOrder = [];\n    const inputs = startNodes || this.graph.placeholders;\n    const sortedNodeNames = inputs.map(node => node.name).sort();\n    const nameKey = sortedNodeNames.join(this.SEPERATOR);\n\n    // do nothing is the compiled graph cache contains the input.\n    if (this.compiledMap.get(nameKey)) {\n      return;\n    }\n\n    const stack = [...inputs, ...this.graph.weights];\n    const visited: {[key: string]: boolean} = {};\n    while (stack.length > 0) {\n      const node = stack.pop();\n      visited[node.name] = true;\n      compiledOrder.push(node);\n      node.children.forEach((childNode) => {\n        if (!visited[childNode.name] && childNode.inputNames.every(name => {\n              const [nodeName, ] = getNodeNameAndIndex(name);\n              return visited[nodeName];\n            })) {\n          stack.push(childNode);\n        }\n      });\n    }\n    this.compiledMap.set(nameKey, compiledOrder);\n  }\n\n  /**\n   * Executes the inference for given input tensors.\n   * @param inputs Tensor map for the model inputs, keyed by the input node\n   * names.\n   * @param outputs output node name from the Tensorflow model, if no outputs\n   * are specified, the default outputs of the model would be used. You can\n   * inspect intermediate nodes of the model by adding them to the outputs\n   * array.\n   */\n  execute(\n      inputs: NamedTensorsMap, strictInputCheck = true,\n      outputs?: string|string[]): NamedTensorMap {\n    const names = Object.keys(inputs).sort();\n    this.checkInput(inputs, strictInputCheck);\n    this.checkInputShapeAndType(inputs, strictInputCheck);\n\n    this.compile(names.map(name => this.graph.nodes[name]));\n    const outputNames = this.calculateOutputs(outputs);\n    this.checkOutput(\n        this.compiledMap.get(names.join(this.SEPERATOR)), outputNames);\n\n    const tensorArrayMap: TensorArrayMap = {};\n    const result = tidy(() => {\n      const context = new ExecutionContext(this._weightMap, tensorArrayMap);\n      const tensorMap = {...this.weightMap, ...inputs};\n      const tensorsToKeep = this.getFrozenTensorIds(tensorMap);\n      const intermediateTensorConsumerCount: {[key: number]: number} = {};\n\n      const compiledNodes = this.compiledMap.get(names.join(this.SEPERATOR));\n      for (let i = 0; i < compiledNodes.length; i++) {\n        const node = compiledNodes[i];\n        if (!tensorMap[node.name]) {\n          tensorMap[node.name] =\n              executeOp(node, tensorMap, context) as Tensor[];\n          this.checkTensorForDisposal(\n              node.name, node, tensorMap, context, tensorsToKeep, outputNames,\n              intermediateTensorConsumerCount);\n        }\n        // stop the execution if all outputs are found.\n        if (outputNames.every(name => !!tensorMap[name])) {\n          break;\n        }\n      }\n      return this.findOutputs(tensorMap, context, outputNames);\n    });\n    return result;\n  }\n\n  private getFrozenTensorIds(tensorMap: NamedTensorsMap): Set<number> {\n    const ids = [].concat.apply(\n        [],\n        Object.keys(tensorMap)\n            .map(key => tensorMap[key])\n            .map(tensors => tensors.map(tensor => tensor.id)));\n    return new Set(ids);\n  }\n  private checkTensorForDisposal(\n      nodeName: string, node: Node, tensorMap: NamedTensorsMap,\n      context: ExecutionContext, tensorsToKeep: Set<number>,\n      outputNames: string[],\n      intermediateTensorConsumerCount: {[key: string]: number}) {\n    // Skip output nodes and any control flow nodes, since its dependency is\n    // tricky to track correctly.\n    if (node.category === 'control' || outputNames.indexOf(nodeName) !== -1) {\n      return;\n    }\n\n    tensorMap[nodeName].forEach(tensor => {\n      if (tensor != null) {\n        intermediateTensorConsumerCount[tensor.id] =\n            (intermediateTensorConsumerCount[tensor.id] || 0) +\n            node.children.length;\n      }\n    });\n    node.inputs.forEach(input => {\n      // Skip any control flow nodes, since its dependency is tricky to track\n      // correctly.\n      if (input.category !== 'control') {\n        const tensors =\n            getTensorsForCurrentContenxt(input.name, tensorMap, context);\n        if (tensors != null) {\n          tensors.forEach(tensor => {\n            if (tensor && !tensorsToKeep.has(tensor.id)) {\n              const count = intermediateTensorConsumerCount[tensor.id];\n              if (count === 1) {\n                tensor.dispose();\n                delete intermediateTensorConsumerCount[tensor.id];\n              } else if (count != null) {\n                // only intermediate nodes has count set, inputs and weights are\n                // not.\n                intermediateTensorConsumerCount[tensor.id]--;\n              }\n            }\n          });\n        }\n      }\n    });\n  }\n  /**\n   * Executes the inference for given input tensors in Async fashion.\n   * @param inputs Tensor map for the model inputs, keyed by the input node\n   * names.\n   * @param outputs output node name from the Tensorflow model, if no outputs\n   * are specified, the default outputs of the model would be used. You can\n   * inspect intermediate nodes of the model by adding them to the outputs\n   * array.\n   */\n  async executeAsync(inputs: NamedTensorsMap, outputs?: string|string[]):\n      Promise<NamedTensorMap> {\n    this.checkInput(inputs, false);\n    this.checkInputShapeAndType(inputs, false);\n    const tensorArrayMap: TensorArrayMap = {};\n    const context = new ExecutionContext(this._weightMap, tensorArrayMap);\n    const outputNames = this.calculateOutputs(outputs);\n    // Graph with control flow op requires runtime evaluation of the execution\n    // order, while without control flow the execution order is pre-determined\n    // in the compile method.\n    const tensors =\n        await this.executeWithControlFlow(inputs, context, outputNames);\n    const results = this.findOutputs(tensors, context, outputs);\n\n    // dispose all the intermediate tensors\n    const outputIds = Object.keys(results).map(key => results[key].id);\n    const inputIdArray =\n        Object.keys(inputs).map(key => inputs[key].map(input => input.id));\n    const inputIds = [].concat.apply([], inputIdArray);\n    Object.keys(tensors).forEach(key => {\n      const tensorArray = tensors[key];\n      tensorArray.forEach(tensor => {\n        if (tensor && outputIds.indexOf(tensor.id) === -1 &&\n            inputIds.indexOf(tensor.id) === -1 &&\n            this.weightIds.indexOf(tensor.id) === -1) {\n          tensor.dispose();\n        }\n      });\n    });\n    return results;\n  }\n\n  /**\n   * When there are control flow nodes in the graph, the graph execution use\n   * ExecutionContext to keep track of the frames and loop iterators.\n   * @param inputs placeholder tensors for the graph.\n   * @param context the execution context object for current execution.\n   */\n  private async executeWithControlFlow(\n      inputs: NamedTensorsMap, context: ExecutionContext,\n      outputNames: string[]): Promise<NamedTensorsMap> {\n    const names = Object.keys(inputs);\n    const inputNodes = names.map(name => this.graph.nodes[name]);\n    const stack: NodeWithContexts[] =\n        [...inputNodes, ...this.graph.weights].map(node => {\n          return {node, contexts: context.currentContext};\n        });\n    const tensorMap = {...this.weightMap, ...inputs};\n    const intermediateTensorConsumerCount: {[key: number]: number} = {};\n    const tensorsToKeep = this.getFrozenTensorIds(tensorMap);\n    const added: {[key: string]: boolean} = {};\n    while (stack.length > 0) {\n      const promises = this.processStack(\n          inputNodes, stack, context, tensorMap, added, tensorsToKeep,\n          outputNames, intermediateTensorConsumerCount);\n      await Promise.all(promises);\n    }\n\n    return tensorMap;\n  }\n\n  private processStack(\n      inputNodes: Node[], stack: NodeWithContexts[], context: ExecutionContext,\n      tensorMap: NamedTensorsMap, added: {[key: string]: boolean},\n      tensorsToKeep: Set<number>, outputNames: string[],\n      intermediateTensorConsumerCount: {[key: number]: number}) {\n    const promises: Array<Promise<Tensor[]>> = [];\n    while (stack.length > 0) {\n      const item = stack.pop();\n      context.currentContext = item.contexts;\n      let nodeName = '';\n      // The tensor of the Enter op with isConstant set should be set\n      // in the parent scope, so it will be available as constant for the\n      // whole loop.\n      if (item.node.op === 'enter' &&\n          getParamValue('isConstant', item.node, tensorMap, context)) {\n        [nodeName] = getNodeNameAndIndex(item.node.name, context);\n      }\n\n      // only process nodes that are not provided as input nodes.\n      if (inputNodes.indexOf(item.node) === -1) {\n        const tensors = executeOp(item.node, tensorMap, context);\n        if (!nodeName) {\n          [nodeName] = getNodeNameAndIndex(item.node.name, context);\n        }\n\n        const currentContext = context.currentContext;\n        if (tensors instanceof Promise) {\n          promises.push(tensors.then(t => {\n            tensorMap[nodeName] = t;\n            context.currentContext = currentContext;\n            this.checkTensorForDisposal(\n                nodeName, item.node, tensorMap, context, tensorsToKeep,\n                outputNames, intermediateTensorConsumerCount);\n            this.processChildNodes(item.node, stack, context, tensorMap, added);\n            return t;\n          }));\n        } else {\n          tensorMap[nodeName] = tensors;\n          this.checkTensorForDisposal(\n              nodeName, item.node, tensorMap, context, tensorsToKeep,\n              outputNames, intermediateTensorConsumerCount);\n          this.processChildNodes(item.node, stack, context, tensorMap, added);\n        }\n      } else {\n        this.processChildNodes(item.node, stack, context, tensorMap, added);\n      }\n    }\n    return promises;\n  }\n\n  private processChildNodes(\n      node: Node, stack: NodeWithContexts[], context: ExecutionContext,\n      tensorMap: NamedTensorsMap, added: {[key: string]: boolean}) {\n    node.children.forEach((childNode) => {\n      const [nodeName, ] = getNodeNameAndIndex(childNode.name, context);\n      if (!added[nodeName]) {\n        // Merge op can be pushed if any of its inputs has value.\n        if (childNode.op === 'merge') {\n          if (childNode.inputNames.some(name => {\n                return !!getTensor(name, tensorMap, context);\n              })) {\n            added[nodeName] = true;\n            stack.push({contexts: context.currentContext, node: childNode});\n          }\n        } else  // Otherwise all inputs must to have value.\n            if (childNode.inputNames.every(name => {\n                  return !!getTensor(name, tensorMap, context);\n                })) {\n          added[nodeName] = true;\n          stack.push({contexts: context.currentContext, node: childNode});\n        }\n      }\n    });\n  }\n\n  private calculateOutputs(outputs?: string|string[]): string[] {\n    if (outputs && !(outputs instanceof Array)) {\n      outputs = [outputs];\n    }\n    return (outputs || this.graph.outputs.map(node => node.name)) as string[];\n  }\n\n  private findOutputs(\n      tensorMap: NamedTensorsMap, context: ExecutionContext,\n      outputs?: string|string[]): NamedTensorMap {\n    const requestedOutputs = this.calculateOutputs(outputs);\n    return requestedOutputs.reduce<NamedTensorMap>((map, name) => {\n      map[name] = getTensor(name, tensorMap, context);\n      return map;\n    }, {});\n  }\n  /**\n   * Releases the memory used by the weight tensors.\n   */\n  dispose() {\n    Object.keys(this.weightMap)\n        .forEach(\n            key => this.weightMap[key].forEach(tensor => tensor.dispose()));\n  }\n\n  private checkInputShapeAndType(\n      inputs: NamedTensorsMap, strictInputCheck = true) {\n    this.placeholders.forEach(node => {\n      const inputTensors = inputs[node.name];\n      // do nothing if not strict input check and input tensors is not for\n      // the placeholders.\n      if (!strictInputCheck && !inputTensors) {\n        return;\n      }\n\n      const input = inputTensors[0];\n      if (node.params['shape'] && node.params['shape'].value) {\n        const shape = node.params['shape'].value as number[];\n        const match = shape.length === input.shape.length &&\n            input.shape.every(\n                (dim, index) => shape[index] === -1 || shape[index] === dim);\n        util.assert(\n            match,\n            `The shape of dict['${\n                node.name}'] provided in model.execute(dict) must be [${\n                shape}], but was [${input.shape}]`);\n      }\n      if (node.params['dtype'] && node.params['dtype'].value) {\n        util.assert(\n            input.dtype === node.params['dtype'].value as string,\n            `The dtype of dict['${\n                node.name}'] provided in model.execute(dict) must be ${\n                node.params['dtype'].value}, but was ${input.dtype}`);\n      }\n    });\n  }\n\n  private checkInput(inputs: NamedTensorsMap, strictInputCheck = true) {\n    const inputKeys = Object.keys(inputs);\n    const missing: string[] = [];\n    const extra: string[] = [];\n\n    this.inputNodes.forEach(name => {\n      if (inputKeys.indexOf(name) === -1) missing.push(name);\n    });\n\n    inputKeys.forEach(name => {\n      if (this.inputNodes.indexOf(name) === -1) extra.push(name);\n    });\n\n    const notInGraph = extra.filter(name => !this.graph.nodes[name]);\n\n    if (missing.length > 0 && strictInputCheck) {\n      throw new Error(\n          `The dict provided in model.execute(dict) has the keys ` +\n          `[${inputKeys}], but is missing the required keys: [${missing}].`);\n    }\n\n    if (extra.length > 0 && strictInputCheck) {\n      throw new Error(\n          `The dict provided in model.execute(dict) has ` +\n          `unused keys: [${extra}]. Please provide only the following keys: ` +\n          `[${this.inputNodes}].`);\n    }\n\n    if (notInGraph.length > 0) {\n      throw new Error(\n          `The dict provided in model.execute(dict) has ` +\n          `keys: [${notInGraph}] not part of model graph.`);\n    }\n  }\n\n  private checkOutput(compiledNodes: Node[], outputs: string[]) {\n    const compiledNodeNames = compiledNodes.map(node => node.name);\n    const extra: string[] = [];\n    outputs.forEach(name => {\n      if (compiledNodeNames.indexOf(name) === -1) extra.push(name);\n    });\n\n    if (extra.length > 0) {\n      throw new Error(\n          `The following outputs are not generated by the execution: ` +\n          `[${extra}].`);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {tensorflow} from '../data/compiled_api';\nimport {NamedTensorsMap, TensorInfo} from '../data/types';\nimport {OperationMapper} from '../operations/operation_mapper';\n\nimport {GraphExecutor} from './graph_executor';\n\nexport const TFHUB_SEARCH_PARAM = '?tfjs-format=file';\nexport const DEFAULT_MODEL_NAME = 'tensorflowjs_model.pb';\nexport const DEFAULT_MANIFEST_NAME = 'weights_manifest.json';\n/**\n * A `tf.FrozenModel` is a directed, acyclic graph of built from\n * SavedModel GraphDef and allows inference exeuction.\n */\n\n/** @doc {heading: 'Models', subheading: 'Classes'} */\nexport class FrozenModel implements tfc.InferenceModel {\n  private executor: GraphExecutor;\n  private version = 'n/a';\n  private handler: tfc.io.IOHandler;\n  // Returns the version information for the tensorflow model GraphDef.\n  get modelVersion(): string {\n    return this.version;\n  }\n\n  get inputNodes(): string[] {\n    return this.executor.inputNodes;\n  }\n\n  get outputNodes(): string[] {\n    return this.executor.outputNodes;\n  }\n\n  get inputs(): TensorInfo[] {\n    return this.executor.inputs;\n  }\n\n  get outputs(): TensorInfo[] {\n    return this.executor.outputs;\n  }\n\n  get weights(): NamedTensorsMap {\n    return this.executor.weightMap;\n  }\n\n  /**\n   * @param modelUrl url for the model file generated by scripts/convert.py\n   * script.\n   * @param weightManifestUrl url for the weight file generated by\n   * scripts/convert.py script.\n   * @param requestOption options for Request, which allows to send credentials\n   * and custom headers.\n   */\n  constructor(\n      private modelUrl: string, private weightManifestUrl: string,\n      private requestOption?: RequestInit, private weightPrefix?: string) {}\n\n  private findIOHandler() {\n    const path = [this.modelUrl, this.weightManifestUrl];\n    if (this.requestOption) {\n      this.handler = tfc.io.browserHTTPRequest(\n          path, this.requestOption, this.weightPrefix);\n    } else {\n      const handlers = tfc.io.getLoadHandlers(path);\n      if (handlers.length === 0) {\n        // For backward compatibility: if no load handler can be found,\n        // assume it is a relative http path.\n        handlers.push(tfc.io.browserHTTPRequest(path, this.requestOption));\n      } else if (handlers.length > 1) {\n        throw new Error(\n            `Found more than one (${handlers.length}) load handlers for ` +\n            `URL '${[path]}'`);\n      }\n      this.handler = handlers[0];\n    }\n  }\n\n  /**\n   * Loads the model and weight files, construct the in memory weight map and\n   * compile the inference graph.\n   */\n  async load(): Promise<boolean> {\n    this.findIOHandler();\n    if (this.handler.load == null) {\n      throw new Error(\n          'Cannot proceed with model loading because the IOHandler provided ' +\n          'does not have the `load` method implemented.');\n    }\n    const artifacts = await this.handler.load();\n    const graph = tensorflow.GraphDef.decode(\n        new Uint8Array(artifacts.modelTopology as ArrayBuffer));\n\n    this.version = `${graph.versions.producer}.${graph.versions.minConsumer}`;\n    const weightMap =\n        tfc.io.decodeWeights(artifacts.weightData, artifacts.weightSpecs);\n    this.executor =\n        new GraphExecutor(OperationMapper.Instance.transformGraph(graph));\n    this.executor.weightMap = this.convertTensorMapToTensorsMap(weightMap);\n    return true;\n  }\n\n  /**\n   * Execute the inference for the input tensors.\n   *\n   * @param input The input tensors, when there is single input for the model,\n   * inputs param should be a `tf.Tensor`. For models with mutliple inputs,\n   * inputs params should be in either `tf.Tensor`[] if the input order is\n   * fixed, or otherwise NamedTensorMap format.\n   *\n   * For model with multiple inputs, we recommend you use NamedTensorMap as the\n   * input type, if you use `tf.Tensor`[], the order of the array needs to\n   * follow the\n   * order of inputNodes array. @see {@link FrozenModel.inputNodes}\n   *\n   * You can also feed any intermediate nodes using the NamedTensorMap as the\n   * input type. For example, given the graph\n   *    InputNode => Intermediate => OutputNode,\n   * you can execute the subgraph Intermediate => OutputNode by calling\n   *    frozenModel.execute('IntermediateNode' : tf.tensor(...));\n   *\n   * This is useful for models that uses tf.dynamic_rnn, where the intermediate\n   * state needs to be fed manually.\n   *\n   * For batch inference execution, the tensors for each input need to be\n   * concatenated together. For example with mobilenet, the required input shape\n   * is [1, 244, 244, 3], which represents the [batch, height, width, channel].\n   * If we are provide a batched data of 100 images, the input tensor should be\n   * in the shape of [100, 244, 244, 3].\n   *\n   * @param config Prediction configuration for specifying the batch size and\n   * output node names. Currently the batch size option is ignored for frozen\n   * model.\n   *\n   * @returns Inference result tensors. The output would be single `tf.Tensor`\n   * if model has single output node, otherwise Tensor[] or NamedTensorMap[]\n   * will be returned for model with multiple outputs.\n   */\n  predict(\n      inputs: tfc.Tensor|tfc.Tensor[]|tfc.NamedTensorMap,\n      config?: tfc.ModelPredictConfig): tfc.Tensor\n      |tfc.Tensor[]|tfc.NamedTensorMap {\n    return this.execute_(inputs, true, this.outputNodes);\n  }\n\n  private constructTensorMap(inputs: tfc.Tensor|tfc.Tensor[]) {\n    const inputArray = inputs instanceof tfc.Tensor ? [inputs] : inputs;\n    if (inputArray.length !== this.inputNodes.length) {\n      throw new Error(\n          'Input tensor count mismatch,' +\n          `the frozen model has ${this.inputNodes.length} placeholders, ` +\n          `while there are ${inputArray.length} input tensors.`);\n    }\n    return this.inputNodes.reduce((map, inputName, i) => {\n      map[inputName] = inputArray[i];\n      return map;\n    }, {} as tfc.NamedTensorMap);\n  }\n  /**\n   * Executes infrerence for the model for given input tensors.\n   * @param inputs tensor, tensor array or tensor map of the inputs for the\n   * model, keyed by the input node names.\n   * @param outputs output node name from the Tensorflow model, if no\n   * outputs are specified, the default outputs of the model would be used.\n   * You can inspect intermediate nodes of the model by adding them to the\n   * outputs array.\n   *\n   * @returns A single tensor if provided with a single output or no outputs\n   * are provided and there is only one default output, otherwise return a\n   * tensor array. The order of the tensor array is the same as the outputs\n   * if provided, otherwise the order of outputNodes attribute of the model.\n   */\n  execute(\n      inputs: tfc.Tensor|tfc.Tensor[]|tfc.NamedTensorMap,\n      outputs?: string|string[]): tfc.Tensor|tfc.Tensor[] {\n    return this.execute_(inputs, false, outputs);\n  }\n\n  private execute_(\n      inputs: tfc.Tensor|tfc.Tensor[]|tfc.NamedTensorMap,\n      strictInputCheck = true, outputs?: string|string[]): tfc.Tensor\n      |tfc.Tensor[] {\n    outputs = outputs || this.outputNodes;\n    if (inputs instanceof tfc.Tensor || Array.isArray(inputs)) {\n      inputs = this.constructTensorMap(inputs);\n    }\n    if (this.executor.isControlFlowModel || this.executor.isDynamicShapeModel) {\n      throw new Error(\n          'The model contains control flow or dynamic shape ops, ' +\n          'please use executeAsync method');\n    }\n    const result = this.executor.execute(\n        this.convertTensorMapToTensorsMap(inputs), strictInputCheck, outputs);\n    const keys = Object.keys(result);\n    return (Array.isArray(outputs) && outputs.length > 1) ?\n        outputs.map(node => result[node]) :\n        result[keys[0]];\n  }\n  /**\n   * Executes inference for the model for given input tensors in async\n   * fashion, use this method when your model contains control flow ops.\n   * @param inputs tensor, tensor array or tensor map of the inputs for the\n   * model, keyed by the input node names.\n   * @param outputs output node name from the Tensorflow model, if no outputs\n   * are specified, the default outputs of the model would be used. You can\n   * inspect intermediate nodes of the model by adding them to the outputs\n   * array.\n   *\n   * @returns A Promise of single tensor if provided with a single output or\n   * no outputs are provided and there is only one default output, otherwise\n   * return a tensor map.\n   */\n  async executeAsync(\n      inputs: tfc.Tensor|tfc.Tensor[]|tfc.NamedTensorMap,\n      outputs?: string|string[]): Promise<tfc.Tensor|tfc.Tensor[]> {\n    if (!(this.executor.isControlFlowModel ||\n          this.executor.isDynamicShapeModel)) {\n      throw new Error(\n          'The model does not contain control flow or dynamic shape ops, ' +\n          'please use execute method for better performance.');\n    }\n    outputs = outputs || this.outputNodes;\n    if (inputs instanceof tfc.Tensor || Array.isArray(inputs)) {\n      inputs = this.constructTensorMap(inputs);\n    }\n\n    const result = await this.executor.executeAsync(\n        this.convertTensorMapToTensorsMap(inputs), outputs);\n    const keys = Object.keys(result);\n    return Array.isArray(outputs) && outputs.length > 1 ?\n        outputs.map(node => result[node]) :\n        result[keys[0]];\n  }\n\n  private convertTensorMapToTensorsMap(map: tfc.NamedTensorMap):\n      NamedTensorsMap {\n    return Object.keys(map).reduce((newMap: NamedTensorsMap, key) => {\n      newMap[key] = [map[key]];\n      return newMap;\n    }, {});\n  }\n  /**\n   * Releases the memory used by the weight tensors.\n   */\n  dispose() {\n    this.executor.dispose();\n  }\n}\n\n/**\n * Load the frozen model through url.\n *\n * Example of loading the MobileNetV2 model and making a prediction with a zero\n * input.\n *\n * ```js\n * const GOOGLE_CLOUD_STORAGE_DIR =\n *     'https://storage.googleapis.com/tfjs-models/savedmodel/';\n * const MODEL_URL = 'mobilenet_v2_1.0_224/tensorflowjs_model.pb';\n * const WEIGHTS_URL =\n *     'mobilenet_v2_1.0_224/weights_manifest.json';\n * const model = await tf.loadFrozenModel(GOOGLE_CLOUD_STORAGE_DIR + MODEL_URL,\n *      GOOGLE_CLOUD_STORAGE_DIR + WEIGHTS_URL);\n * const zeros = tf.zeros([1, 224, 224, 3]);\n * model.predict(zeros).print();\n * ```\n *\n * @param modelUrl url for the model file generated by scripts/convert.py\n * script.\n * @param weightManifestUrl url for the weight file generated by\n * scripts/convert.py script.\n * @param requestOption options for Request, which allows to send credentials\n * and custom headers.\n */\n/** @doc {heading: 'Models', subheading: 'Loading'} */\nexport async function loadFrozenModel(\n    modelUrl: string, weightsManifestUrl: string,\n    requestOption?: RequestInit): Promise<FrozenModel> {\n  const model = new FrozenModel(modelUrl, weightsManifestUrl, requestOption);\n  await model.load();\n  return model;\n}\n\n/**\n * Load the frozen model hosted by TF-Hub.\n *\n * Example of loading the MobileNetV2 model and making a prediction with a zero\n * input.\n *\n * ```js\n * const TFHUB_MOBILENET =\n *   'https://tfhub.dev/google/imagenet/mobilenet_v2_140_224/classification/2';\n * const model = await tf.loadTfHubModule(TFHUB_MOBILENET);\n * const zeros = tf.zeros([1, 224, 224, 3]);\n * model.predict(zeros).print();\n * ```\n *\n * @param tfhubModelUrl url for the model hosted by TF-Hub, i.e.\n * 'https://tfhub.dev/google/imagenet/mobilenet_v2_140_224/classification/2'.\n * @param requestOption options for Request, which allows to send credentials\n * and custom headers.\n */\n/** @doc {heading: 'Models', subheading: 'Loading'} */\nexport async function loadTfHubModule(\n    tfhubModuleUrl: string, requestOption?: RequestInit): Promise<FrozenModel> {\n  if (!tfhubModuleUrl.endsWith('/')) {\n    tfhubModuleUrl = tfhubModuleUrl + '/';\n  }\n  return loadFrozenModel(\n      `${tfhubModuleUrl}${DEFAULT_MODEL_NAME}${TFHUB_SEARCH_PARAM}`,\n      `${tfhubModuleUrl}${DEFAULT_MANIFEST_NAME}${TFHUB_SEARCH_PARAM}`,\n      requestOption);\n}\n","/** @license See the LICENSE file. */\n\n// This code is auto-generated, do not modify this file!\nconst version = '0.7.2';\nexport {version};\n"]},"metadata":{},"sourceType":"module"}