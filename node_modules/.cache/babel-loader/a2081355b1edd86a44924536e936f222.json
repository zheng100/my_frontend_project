{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/BobbyZheng/Desktop/INFO_253/Final_project/group-project-bmt/src/components/DragdropAva.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Cluster from './Cluster';\nimport ModAvatar from './ModAvatar';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport ToggleGroup from './Buttons';\nconst POKETAR_WHITE = \"#ffffff\";\nconst POKETAR_BLUE = \"#5db9ff\";\nconst POKETAR_PURPLE = \"#DAF7A6\"; //face component selected color?\n\nconst POKETAR_RED = \"#ff1f1f\";\nconst POKETAR_YELLOW = \"#ffffff\"; // face component selections?\n\nfunction DragdropAva(props) {\n  _s();\n\n  const [avaDetails, setavaDetails] = useState(props.avaDetails);\n  useEffect(() => {\n    setavaDetails(props.avaDetails);\n  }, [props.avaDetails]);\n  const skinColorSet = props.skinColorSet;\n  const hairColorSet = props.hairColorSet;\n  const clothColorSet = props.clothColorSet;\n  const datafromBackend = props.datafromBackend; // function that handles drag ending event\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n    const {\n      source,\n      destination\n    } = result;\n\n    if (destination.droppableId === 'MainAvatar') {\n      const draggable_string = result.draggableId; // console.log(result);\n\n      const regfound_tags = draggable_string.match(/([A-Za-z]+)_([A-Za-z]+)/);\n      const [type, style] = [regfound_tags[1], regfound_tags[2]];\n      const newDetails = handleOnChangeAvatar(type, style);\n      setavaDetails(newDetails);\n    }\n  } // update current avatar look\n\n\n  function handleOnChangeAvatar(type, style) {\n    const updatedDetails = avaDetails;\n    updatedDetails[type] = style;\n    return updatedDetails; // console.log(avaDetails);  \n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container-fluid\",\n    id: \"content-container\",\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleOnDragEnd,\n      children: [/*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"MainAvatar\",\n        children: (provided, snapshot) => {\n          console.log(avaDetails);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"my_ava\",\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            style: {\n              background: snapshot.isDraggingOver ? POKETAR_BLUE : POKETAR_WHITE\n            },\n            children: /*#__PURE__*/_jsxDEV(ModAvatar, {\n              avaDetails: avaDetails\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-4\",\n          id: \"skin_color\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Skin Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bd-example\",\n            children: /*#__PURE__*/_jsxDEV(ToggleGroup, {\n              className: \"colors\",\n              colorCode: skinColorSet,\n              colorType: \"skinColor\",\n              avaDetails: avaDetails,\n              updateAva: props.avaChangeFun\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-4\",\n          id: \"hair_color\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Hair Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToggleGroup, {\n            className: \"colors\",\n            colorCode: hairColorSet,\n            colorType: \"hairColor\",\n            changeColorFun: props.setcolorDisplay,\n            updateFunction: handleOnChangeAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-4\",\n          id: \"cloth_color\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Cloth Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToggleGroup, {\n            className: \"colors\",\n            colorCode: clothColorSet,\n            colorType: \"clotheColor\",\n            changeColorFun: props.setcolorDisplay,\n            updateFunction: handleOnChangeAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"Instructions\",\n        children: \" Step 2: Drag and Drop items to Change his look! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"droppable-content\",\n        children: Object.entries(datafromBackend).map(([type, styles]) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"step2_wrap\",\n            children: /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: type,\n              children: (provided, snapshot) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"OverflowColumn\",\n                  ...provided.droppableProps,\n                  ref: provided.innerRef,\n                  style: {\n                    background: snapshot.isDraggingOver ? POKETAR_BLUE : POKETAR_WHITE\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    className: \"addons\",\n                    children: styles.map((style, index) => {\n                      return (\n                        /*#__PURE__*/\n                        // Each item in the column is a draggable\n                        _jsxDEV(Draggable, {\n                          draggableId: type + '_' + style,\n                          index: index,\n                          children: (provided, snapshot) => {\n                            return /*#__PURE__*/_jsxDEV(\"div\", {\n                              ref: provided.innerRef,\n                              ...provided.draggableProps,\n                              ...provided.dragHandleProps,\n                              style: {\n                                backgroundColor: snapshot.isDragging ? POKETAR_PURPLE : POKETAR_YELLOW,\n                                color: POKETAR_WHITE,\n                                ...provided.draggableProps.style\n                              },\n                              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                                children: /*#__PURE__*/_jsxDEV(\"wrap\", {\n                                  className: \"selectAble\",\n                                  children: /*#__PURE__*/_jsxDEV(Cluster, {\n                                    type: type,\n                                    style: style\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 111,\n                                    columnNumber: 58\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 110,\n                                  columnNumber: 53\n                                }, this)\n                              }, type + style, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 109,\n                                columnNumber: 49\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 105,\n                              columnNumber: 44\n                            }, this);\n                          }\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 103,\n                          columnNumber: 33\n                        }, this)\n                      );\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DragdropAva, \"OUSt0vCHDNrOryR5JMsgRHlSO3E=\");\n\n_c = DragdropAva;\nexport default DragdropAva;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragdropAva\");","map":{"version":3,"sources":["/Users/BobbyZheng/Desktop/INFO_253/Final_project/group-project-bmt/src/components/DragdropAva.js"],"names":["React","useState","useEffect","Cluster","ModAvatar","DragDropContext","Droppable","Draggable","ToggleGroup","POKETAR_WHITE","POKETAR_BLUE","POKETAR_PURPLE","POKETAR_RED","POKETAR_YELLOW","DragdropAva","props","avaDetails","setavaDetails","skinColorSet","hairColorSet","clothColorSet","datafromBackend","handleOnDragEnd","result","destination","source","droppableId","draggable_string","draggableId","regfound_tags","match","type","style","newDetails","handleOnChangeAvatar","updatedDetails","provided","snapshot","console","log","droppableProps","innerRef","background","isDraggingOver","avaChangeFun","setcolorDisplay","Object","entries","map","styles","index","draggableProps","dragHandleProps","backgroundColor","isDragging","color"],"mappings":"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","sourcesContent":["import React , {useState, useEffect} from \"react\";\nimport Cluster from './Cluster';\nimport ModAvatar from './ModAvatar';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport ToggleGroup from './Buttons';\n\nconst POKETAR_WHITE = \"#ffffff\"\nconst POKETAR_BLUE = \"#5db9ff\"\nconst POKETAR_PURPLE = \"#DAF7A6\" //face component selected color?\nconst POKETAR_RED = \"#ff1f1f\"\nconst POKETAR_YELLOW = \"#ffffff\" // face component selections?\n\n\nfunction DragdropAva (props){\n\n    const [avaDetails,setavaDetails] = useState(props.avaDetails);\n    useEffect(() => { setavaDetails(props.avaDetails) }, [props.avaDetails]);\n\n    const skinColorSet = props.skinColorSet;\n    const hairColorSet = props.hairColorSet;\n    const clothColorSet = props.clothColorSet;\n    const datafromBackend = props.datafromBackend;\n\n    // function that handles drag ending event\n    function handleOnDragEnd(result){\n        if(!result.destination) return;\n        const{source,destination} = result;\n        if (destination.droppableId === 'MainAvatar'){\n            const draggable_string = result.draggableId;\n            // console.log(result);\n            const regfound_tags = draggable_string.match(/([A-Za-z]+)_([A-Za-z]+)/);\n            const [type, style] = [regfound_tags[1], regfound_tags[2]];\n            const newDetails = handleOnChangeAvatar(type, style);\n            setavaDetails(newDetails);\n            \n        }\n    }\n\n    // update current avatar look\n    function handleOnChangeAvatar(type, style) {\n        const updatedDetails = avaDetails;\n        updatedDetails[type] = style;\n        return updatedDetails;\n        // console.log(avaDetails);  \n        }\n\nreturn (\n    <div class='container-fluid' id = 'content-container'>\n    {/*center avatar*/}\n    <DragDropContext onDragEnd = {handleOnDragEnd}>\n      {/* Dropable portion that of the Avatar display */}\n      <Droppable droppableId = \"MainAvatar\" > \n        {(provided,snapshot) => {console.log(avaDetails);\n          return (\n            <div id = \"my_ava\"\n            {...provided.droppableProps} ref={provided.innerRef} \n              style = {{\n              background: snapshot.isDraggingOver? POKETAR_BLUE: POKETAR_WHITE}}>\n              <ModAvatar avaDetails = {avaDetails}/>\n            </div>)\n            }}\n      </Droppable>\n      <div className=\"row\">\n        <div className=\"col-sm-4\" id='skin_color'>\n            <h3>Skin Color</h3>\n                <div className=\"bd-example\">\n                <ToggleGroup className=\"colors\" colorCode = {skinColorSet} colorType = 'skinColor'  avaDetails = {avaDetails} updateAva = {props.avaChangeFun}/> \n                </div>\n        </div> \n\n        <div className=\"col-sm-4\" id='hair_color'>\n            <h3>Hair Color</h3>\n                <ToggleGroup className=\"colors\" colorCode = {hairColorSet} colorType = 'hairColor' changeColorFun = {props.setcolorDisplay} updateFunction = {handleOnChangeAvatar}/> \n        </div>\n\n        <div className=\"col-sm-4\" id='cloth_color'>\n            <h3>Cloth Color</h3>\n            <ToggleGroup className=\"colors\" colorCode = {clothColorSet} colorType = 'clotheColor' changeColorFun = {props.setcolorDisplay} updateFunction = {handleOnChangeAvatar}/> \n        </div>\n      </div>\n\n    {/* Drag and droppable features and clothing */}\n    <h2 className=\"Instructions\"> Step 2: Drag and Drop items to Change his look! </h2>\n      <div id = 'droppable-content'>\n        {/* Double loop that go through all possible type of looking and styles */} \n        {Object.entries(datafromBackend).map(([type, styles]) =>{\n          return(\n            \n            <div id = 'step2_wrap'>\n              {/* Each column is also a droppable */} \n              <Droppable droppableId = {type}>\n                {(provided, snapshot) => {\n                return(\n                  <div className = 'OverflowColumn'\n                    {...provided.droppableProps} ref={provided.innerRef} \n                    style = {{\n                        background: snapshot.isDraggingOver? POKETAR_BLUE: POKETAR_WHITE,\n                    }}>\n                    <ul className = 'addons'>\n                        {styles.map((style,index) => {\n                            return (\n                                // Each item in the column is a draggable\n                                <Draggable draggableId = {type + '_' +style} index={index} key={index}>\n                                {(provided, snapshot) => {\n                                    return(<div\n                                                ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}\n                                                style = {{ backgroundColor: snapshot.isDragging? POKETAR_PURPLE : POKETAR_YELLOW , color: POKETAR_WHITE, ...provided.draggableProps.style\n                                                }}>\n                                                <li key ={type + style}>\n                                                    <wrap className = \"selectAble\">\n                                                        {<Cluster type = {type} style = {style}/>}\n                                                    </wrap>\n                                                </li>\n                                            </div>); \n                                }}\n                                </Draggable>\n                            ); \n                          })\n                        }\n                    </ul>\n                  </div>)\n                }}\n              </Droppable>\n            </div>);\n          })}\n      </div>\n\n      </DragDropContext>\n\n    </div> \n);\n\n    \n}\n\nexport default DragdropAva;"]},"metadata":{},"sourceType":"module"}